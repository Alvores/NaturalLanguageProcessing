Mitigation,Comments
0,"1. The test plan is complete.


2. The team has explained how the factories are created.


3. The team has included the explanation of a few unit tests for understanding."
1,"No tests are written for the functionality, only UI testing is done. Automated tests are not run for the changes made."
1,"Through manual testing, all the changes made would contribute to the expected functionality. If teh RSpec tests are written it would have completed the testing scenario."
1,"Though the complete code looks DRY, commenting the changes would have made it easier to the next developers."
1,Most of the names look intuitive. Only the name tmp_object doesn't appeal much to the functionality. This naming convention could have changed.
1,"There are no test cases written in RSpec , only the UI testing is done. If tests in spec folder are written it would have been great."
1,"Though the write up explains the functionality that is added, it does not include any specific patterns that is used for the development."
1,The write up is pretty clear about the work done. Though there is a very little change in the code the functionality is achieved. Test Plan (Other than UI)section could have been included in the write up.
1,Couldn't find test cases
1,Couldn't find the wiki page
1,Found no test case uploaded in the pull request
0,Code written following the coding standards
0,"Code is written excellently, provided with DRY implementation"
0,Works well when tested
1,"it is well written , but it doesn't have the references mentioned which is extremely important .


References need to be added at the botton as the page ends very abruptly."
1,"yes the writeup explains the project very well. this project was done to improve the code in the review_response controller, to give it better organizat"
1,Yes the authors have considered all the pre- conditions in this project. the tests have been written and organized well making sure that every case is tested and the code passes for these tests.
0,the naming is done appropriately.
1,"the purpose of the project was to improve the code and make it better, this has been achieved."
0,The description takes into account various minute details which makes it easy to understand what the project actually does and what functionality it is related to. Various images reflecting the changes in the code prove to be very effective but it could have been better if every image had a a line description of what is being done as sometimes it gets difficult for the reviewer to figure out the changes and why are they needed while going through a lot of continuous images reflecting code changes.
1,"Zhewei already mentioned some changes. Like, you can directly the assignment variable instead of creating new one each time."
0,"The test plan includes test cases in the 2nd round. However, the coverage is less. Also, many of the edge cases are still not included. Not all of them are automated."
1,"No pull request related to the github repo owner name was find.


The test coverage is unvisible as well due to no pull request."
1,The author hash mentioned the Test plans without the solutions however mentioning them in the Resolving Issues section of the write up. The author has covered all the tests also mentioning the files that has been changed making it very easy to review.
0,"They list a part of RSpec in the bottom part the wiki page, they explain what should be tested and provide their code as well. However, they also mentioned that they can't solve the json_generate problem which make their test failed."
1,Code review not possible since the pul l request link is missing.
1,"The test section mentions their test approach, test framework and test case. However, it is not necessary to screenshot all their test scripts and paste on wiki, too much code."
0,They have added few test cases. Explained why a lot of them were not necessary.
0,"Yes, the authors have created all the required test cases as discussed in the Test Plan."
0,The test cases have been discussed but there is no evidence of them being implemented in such a way that they pass.
0,"Yes, they have discussed the Test Plan in detail in the video. The team also needs to update the Test plan in wiki so that other reviewers could better review the functionality that the team modified."
0,"No new test cases were added, newly created functions could have included corresponding unit tests to verify functionality however trivial it may be."
0,"Yes, in the write-up part, the author discussed the test plan, and in the code part, the author complete the pending test in response_spec.rb, in the test plan, the author describe the methods need to test, and give some contexts, and in the code part, the author implement all test of methods, including unit test and integration test."
0,the tests added are done appropriately.
0,Yes. The team contribute a lot of test code and no obvious missing.
0,"Since their primary task was refactoring which included changing variable/method names, this is taken care of."
0,The names a bit suggested and the naming has been done as suggested in the design requirements too. Also I can not find any unreasonable names provided in the refactored code.
0,"Good choice for variable, method and class names. The selected names follow good Ruby conventions. They are reasonable and easy to understand."
0,The team has implemented good ROR guidelines. They have implemented changes from the last review suggestions. The names used are reasonable and do suggest the functionality.
0,"Code changes include minimal refactoring to accomodate the requirements of the project. As the changes were mainly single line or even single word in the code, it seems reasonablly suggestive of the functionality."
0,Basically the team wanted to follow the DRY rules and Single Responsibly Principle. They divided a big method into several small methods and separate the functions. But they didn't do too much change on the existing code and some places are still not DRY and can be refactored. They changed some variables' name but not big changes.
0,"`spec/models/response_spec.rb` line 127, there is a variable `existingResponse` that doesn't use snake_case. The same in line 137."
0,"their code is not very efficient,they should use some good methods to solve their problem."
0,"they should talk more on refactor process , how they worked to refactor it ."
0,"Nope, why was method names changed? Why did you change sort to sort_by?


These questions are unanswered."
0,"The write up has a section called - ""Refactoring Decision"" which explains what decisions were taken to perform the refactoring to be done in this project."
0,The write-up is done very well. The writing style is smooth and flowing and shows that the team went to a great deal of effort to implement and explain different design strategies and patterns.
0,"Yes, it clearly explains why the authors worked the way they did. The team tried to refactor as much as they could in the requirements.  Team has also implemented many changes since the last review in code base as well as wiki."
0,"The Refactoring decision sections lacks any information regarding the rationale as to why a particular approach was taken, it only contains what was changed and the resultant outcome.  As an outsider to this project, it is hard for me get why."
0,Some of the methods are still long.
0,"The author actually did the explanation part of how and why the authors did the work the way they did, the author give some introduction of this problem and explanation of how to fix or refactor it."
0,"A few functions seem long, but I think they consist of many steps so I think the code's fine. Also the code is doesn't completely follow the Ruby Style guide as can be seen by the code climate check."
0,"The team describe how they did the work in details. The main principles they focused on may be DRY and Single Responsibility, and they split some long methods into small ones. Obviously the team did a lot of work on the page, but it doesn't make much sense by just listing the changes. Organization could be more reasonable, like they can demonstrate modified files along with problems but no need to put them in a new section. Actually the quality of screenshots and video is low, which made them useless."
0,"Code is good. A few things - some formatting issues like no space after or before curly brackets. I saw some opportunities to use symbols instead of string variables. Also there are some very long if blocks that could have been handled betters, like in the redirection method. Overall the code is good but could have been greater.





There is also this extremely long line in action_allowed_method:


return current_user_id?(response.map.reviewer.user_id) || reviewee_team.has_user(current_user) || current_user.role.name == 'Administrator' || (current_user.role.name == 'Instructor' and assignment.instructor_id == current_user.id) || (current_user.role.name == 'Teaching Assistant' and TaMapping.exists?(ta_id: current_user.id, course_id: assignment.course.id))





That's bad!"
0,"Wiki has been detailed with the scenarios and why the changes have been made so it becomes easier to follow the code. The for loop that was used even though DRYed the repeated code, however it has become too long to follow in a single line."
0,The test plan doesn't cover edge cases.
0,"not complete ,they should give more test codes and their explanation"
0,"In the pull request, these codes are good, actually, what the author did is to refactor the original codes, and separate a method is too long. But in my opinion, the author maybe should add some comments of modified codes, because there're too many codes they changed, if you can add some comments, it will help reader understanding and much more easy to read."
0,They have explained why this is not relevant.
0,"The team have contributed many test code and refactor the existing code in ""response.rb"". But it seems that the team only reorganized the existing code but haven't considered if the code is reasonable. The most obvious problem of this file is it contains html code which should be in the view file but not model file. Therefore, it could be refactored further by putting these code in view files and rewrite part of origin methods. I have mentioned this last time but it seems they didn't take my advice. In newly added test code, they also put some new html code in it which make the code more complex."
0,The tests don't seem to be implemented. The orange/brown text on examples shows the tests are not implemented. They should pass with green. More work needed to have been done there.
0,"Since it basically is refactoring, this is not extremely relevant."
1,The test plan looks complete for the given scenario of changes. There are some changes such as in response_spec.rb many factory objects are created where only one could have been used.
0,"No explicit test plan for the project is mentioned, just a section elaborating on how the existing test cases for response.rb pass. Makes no mention of how their changes impact a pre-existing (i.e. do they even affect it) or has a new test case been written to verify their changes. All of the above are missing."
0,"The new-added test plan part is good, in this part, the author describe the different method which need test, and give the contexts, it's very clearly.  And in the code part, the author complete the pending test, pass all the test."
0,"Test Plan introduces the basic work and structure about their test work, but not much detailed explanation."
0,There is no link provided where the project is deployed so that I can manually test the test cases. But the screencast consist of a run of the tests which execute successfully thus it seems like everything works.
0,The team's final submission passes the test. They have also done a great video explaining the changes they have implemented and this is commendable.
0,I could not find the edge cases where the code didn't work. Also the team is integrating changes so hopefully they will pass the pending scenarios.
0,Nothing specific to add here as pre-existing test cases pass with the given changes.
0,"Yes, I download the files the author changed and run the whole project in my own work space, following the Manual testing steps stated in wiki, I do  the manually test of author's work. And the expertiza runs correctly and all the test passed."
0,yes they work very well. all the tests are effective
0,No obvious error occurs.
0,"several places left only one sentence ,making it unclear , I only get basic idea,it should be more specific."
0,"Good write-up. 


Don't like the pictures though. Could have indicated with something better (or at least enlarged pictures: some of them are, while some of them are too small to read)"
0,The explains all the aspects of the project really well. Screenshots of code depict the changes that have been made and also help in explaining the approach these guys have taken to solve the problems assigned to them.
0,I have seen a great improvement in the documentation of the functionalities. It explains the goal of the project and how the changes have been implemented.
0,I can understand what the project is about and what the team refactored fairly easily. The team has explained their work in a simple way by describing it effectively in the wiki as well as in the screen-cast video. Team has also implemented many changes since the last review in code base as well as wiki.
0,"Good enough description which just about does the job, but feel regurgitated from the problem description. Some effort could have been undertaken to add more depth to the description."
0,"In this wrteup, I think it very clearly, there are background introductions, problems need to be done, and the statement of the wrong of original version. After reading the first part of this writeup, I have a basic understanding of this project's objective is to refactor the original version. Compared with the original version, this latest version added more specific description and more screenshot, these new-added part help reader understanding this project and I think the author did a good job."
0,"The writeup page includes many contents. So does the video. They describe the changes and how the team refactor the files, but to some extent, they just list all the changes they've made, but lack of detailed explanation. Like what they have done in wiki page, they use screenshots to mark the changes they made, but It's not necessary to do that. GitHub has already show that in a clear way. And as previously mentioned, it lacks some introductions content. For instance, in the ""background"" section, it is supposed to have a detailed introduction to ""response.rb"" file and what response is in Expertiza. It seems that the team didn't give a good understand or introduction of ""response"" as I think it's mainly related to review functions."
1,The writeup was successful in explaining the functionality implemented.
0,"yes, the project has been well explained in the wiki page. I liked the part mentioning functional Tests for whether students choosing the same topic are in the same team. The wiki page mainly contains the code snippets and a bit more elaboration would be great. The team did not work much on elaborating more as suggested in the last review though."
1,"This time basic logic behind such code has been given but very briefly, a bit more explanation would it make it easier for a non technical readers also to read what is going on!"
1,"The test plans have been covered satisfactorily. The team has although not worked on the last review suggestion regarding what happens if the invitation is declined and not tested that, maybe doing that would make the testing team functionality more exhaustive. Also, they can add the case in which the team size is in accordance with the assignment rules, say 3 participants allowed, so there could have been a check for that too. Again, as the last time the team could have elucidated more in each of the sections on wiki in testing plan. Although i appreciate they have included the test case  regarding Functional Tests for whether students choosing the same topic are in the same team as mentioned in the last point of the functional tests on wiki."
0,The code (functional tests) are well written. They are intuitive and easy to go through. The test coverage has also increased 0.3%.
0,"The code adheres by the ruby guidelines, is DRY and tests have been written properly and to the point."
1,"The tests have been automated and good work by the team on this part, but on the part which I appreciated upon, Functional Tests for whether students choosing the same topic are in the same team, I could not find those in the code and maybe those have not been covered."
0,"The features work as intended, it is just that some of the cases mentioned in the questions above could also have been covered to make it more exhaustive. On the whole, video, wiki and code all three make it better to understand their work as a bit more  explanation could have been put up on the wiki page."
0,The writeup is clear. But they basically did not change or add something after the first round.
1,"They should add some explanation about the tests they wrote. For example, they could add more comments about the code which is hard to follow now."
1,"Different pre-conditions, edge cases, invalid input values are not considered. There are only tests with valid input values. However, tests with invalid input values are the most important. They should test what would happen if users input invalid values."
0,"The variables, methods, and class names look good."
1,There are basically no comment. And the code in team_functionalities_spec.rb is too long. More than ten lines of code is commented out at the end. I think it should be deleted.
0,They converted all the cases discussed in Test Plan into automated tests.
0,The features work as intended. But there is no edge case.
0,The writeup is clear about the functionality changes. It is clear from the requirement that this project was to create functional test cases and how it was implemented.
0,The authors clearly mentions what the topic was and what is the solution they have provided. From the write up it is clear that this was a project to create Test functionality for Test assignment selection. And they have mentioned the tests they have created to check those.
1,"The scenarios are clearly mentioned in the test plan and the automation cases are as well mentioned in the test plan. But to me few other scenarios should have been implemented like student trying to select an topic when they already have one, Student with a topic joins a team then their topic is dropped and the new teams topic is added etc."
0,"The variable, and method names are intuitive enough to understand that what it does."
0,The code looks clean and can be understood from reading it. But more comments are welcome in the code to make it more clear when some one just want to know how the functionality has been implemented without going through the code
0,The author has converted all the cases mentioned in the test plan into automation cases.
1,The written cases works perfectly. Good Job done. But as i mentioned earlier more scenarios could have been implemented.
1,Future work section is desirable
1,"The coverage eventually increased by 0.2%, which is a clear demonstration of the purpose of this change and to what extent it was achieved.


But I would really like the tests to be split across multiple files instead of cramming everything into one."
0,"Test plan is the major part of this project and it is comprehensive.


Good include console log screenshot into the wiki"
1,There are 14 issues reported by codeclimate pending
1,"variable names are out of convention in few places.


there are underscore separated as well as camel case names used. testDirectory for example"
0,That's the whole project essentially.
1,"The video is clear about the test execution and results.


Good if codeclimate errors are taken care of."
0,The  writeup is unchanged and it is less focused on functionality.
0,it explains the approach but not the reason to choose that approach.
0,All the possibilities are covered in the test cases.
0,Mostly methods are taken from the previous code.
1,There can be some more comments to make the code understandable.
0,The author has converted most of the tests mentioned in implementation.
0,Works well for most cases.
0,The write up is pretty clear on what feature is being tested but not as clear as to what led them to develop specific test cases. The writeup is less descriptive.
1,The writeup explains how the authors did the work using the code snippets. They can add descriptions so that it becomes more clear for every reader.
0,The authors have considered pre and post conditions while writing the test cases but haven't explicitly listed them in the writeup.
0,The methods and variables are named well and are intuitive to their functionality.
0,The code is dry and does not smell. The travis bbuild for the code has passed.
0,All the test cases that the author dicussed are automated and work correctly.
0,The  test cases written work correctly as discussed.
0,The write up is pretty clear.
1,Students in the same team test case is not well documented.
0,"Tests are good, not tested for invalid inputs again,"
0,Methods are understandable like last time.
0,tests are still very lengthy like last time.
0,tests are covered and passing.
1,"Could not test edge cases, Rest are working."
0,The writeup explains in detail about the project and what type of test cases the team has built for it.
1,"The wiki page explains what all test cases the team has covered and the code for it, but not enough explanation is given as to why they took this approach for their functional tests."
0,"Test plan looks comprehensive with many test cases with pre-conditions, couldn't find many edge cases tor invalid input scenarios though."
0,Names are intuitive and suggestive of the functionality they do.
0,The code follows good Ruby practices and DRY principle. Functionalities divided into components.
0,Could see from the demo video that the test cases have passed and are automated.
0,The functionalities work properly for the test cases that the team has designed and as intended.
0,"yes, write up explains the work to be done. Video explains the work properly."
1,few of the test cases mentioned in the requirement document are not documented/implemented.
1,"write-up is not complete. Few of the test cases mentioned in the requirement document are not documented, like as team leader, selects a topic of assignment. its not clear from the test plan."
0,yes names are intuitive.
1,Few test cases could be divided into different smaller test cases. Comments could have helped reviewers.
0,test cases mention in the write up are converted to automated test cases. But the test plan does not satisfies the requirement.
1,case to check if a user with any other role can join the team. what happens in such case. what happens if any of the fetch actions fails during a test. What happens when a student already part of a team tries to joins the  team. Negative test cases are not handled.
0,The writeup has a good design and roughly indicate their work
1,Only include their purpose. Didn't explain why the did the work the way they did.
0,Test plan is completed enough
0,Reasonable and easy to understand
1,Almost perfect. And the climate still has issues to fix
0,All tests passed
0,I did not find edge cases not working
0,There is no test plan and neither its mentioned that there project does not need testing plan or not.
0,No test plan.
0,"Satisfactory explanation.


Missed some spelling mistakes at places. (Some letters are not in capitals at the beginning of sentences)."
0,"The authors have explained the gist under ""Changes to be implemented"" and their approach."
0,"Functions have too few comments


Some commented section of the code has not been deleted."
0,"The writeup contains all the code, but the code is too much for a reader to read, and it contains all the functionality the work is related to."
0,There are so much code but not enough explanation. They did not use design principles or patterns.
1,"No test plan at all, maybe their task does not need a test plan just as ours."
0,Names are intuitive and reasonable for the functionality.
0,"There are too many unnecessary comments and many useless spaces in the code, which is not that DRY."
0,No tests added at all... same as the first time.
0,"It works well, but there is no edge cases for this task."
0,"Difficult to identify design pattern, however, the writeup explains the approach very well."
1,"Update: Initial feedback not considered, hence response is the same


There are a lot of commented blocks of code, which i feel if not required should be removed. Such redundant or commented code hampers readability and bloats the codebase"
0,"Update: Initial feedback not considered, hence response is the same


No Test Plan"
0,"Update: Initial feedback not considered, hence response is the same


The code is not merged with master. also the code did not pass the integration check and also reduced the test coverage. Assuming the video is a valid one I can ascertain that the code works locally."
0,The write up is well written but the nuances of the project are still missing. They haven't shown the actual implementation of the code. They also haven't shown how the existing email notification system works. But yet the write up is written well.
0,"Yes, they have mentioned the approaches that they have taken and also they have mentioned what exactly are the changes to be implemented to improve the notification system. Code snippets are perfectly handled and written well."
0,They haven't tampered with any of the variables or method names and hence they have followed the original convention.
0,"Yes, the functions are modularised and to the point. I just feel additional comments should be added to the code so that it is understandable to the novice user. The DRY design pattern has been implemented too."
0,The wiki page is well written and explains all the changes the team has made to overcome the problems.
0,The team has explained in the write-up the approach taken to solve each of the problem.
0,The team has not included a test plan section but they explain how to test each issue in the video.
0,The team has followed proper coding conventions.
0,The code is well written and made into reusable functions. DRY principle is followed by the team.
0,The team has tested the newly added code but have failed to include a test plan section.
0,I have tested the code as shown in the video and works as demonstrated. But could not think of new edge cases.
1,"The wiki was well written and the video clearly shows the implementation of the project done. The last 2 lines in the introduction section are not related to the current project and must be changed. The formatting in the wiki is also not perfect. Some statements of the code are not inside the formatted grey box. (Example in ""Approach Taken To Implement Changes"" section of the wiki, in 2) the end statement is out of place and in 3) def create is out of place )."
0,"No use of any design patterns or principles was explicitly stated in the wiki/video. The video was well made and easy to follow. However, if a voice over was added to the video it would have been easier to understand and follow the author's action."
0,"Names are intuitive like they used the variable inv for an invitation, etc."
1,The video explained clearly how the test were written and the wiki page introduced the project task by task. It introduced the idea of refactoring and Test First Development which is really good.
1,As it it a test first development project they have written all the tests first. But they have not mentioned any design patterns that they used. I suggest they could add little code per function instead of adding all the test cases.
1,"They put all the code of test in the wiki page, but I think it is better to have few comments for each test."
1,"Most of the code is good enough. I can see they improved the code of refactoring and simplified the code of test. But please checkout the code climate, you have a lot of issues to fix."
1,The code followed good coding practices but still can be improved. Please checkout the code climate.
1,I think the tests have been done perfectly. They have covered all the cases and all the tests passed.
1,"Yes, I ran the test manually on my computer and they all succeed so I think they have done a good job."
0,The write-up has been modified well to suit my previous review. The tasks have been properly mentioned and the modularity of the write-up is something that is commendable. Code snippets are too long in the write-up though.
1,"Yes, the write-up does mention how the authors performed the task. The plan of work explicitly states so. Also, the test patterns are mentioned which is another plus point. I just feel a lot of unnecessary code snippets are present."
0,The test plan does look complete enough. I would like to comment here that not only should they specify the test code snippets but preferably also specify what the code does and what all test cases are they performing. This would help a novice user to understand better.
1,The names are quite intuitive as I think they have followed good coding practices and design patterns while implementing their project. All functions are named explicitly and hence I don't think there is any issue regarding this section.
0,"I do feel some of the test cases are very long and it would be better if those test cases could be modularised into smaller test cases. However, this is just a personal opinion and the test cases have been written in a fluent manner. Comments could be added to make the code seem more intuitive. CodeClimate shows 443 issues to fix, with many duplicate code segments."
1,"Yes, all the tests have been covered and all of them have passed. Well done to the team."
1,"I tried testing the features and they did run perfectly. However, while running these features locally I failed to understand certain methods and certain bugs which occurred in their files. On further refactoring the code myself, the features worked."
0,"This tam did a very good wiki write up. It explains every task they did clearly. Because they are TFD design project, so they explain what is TDD. But if you can add some details about how to write your test code and how to implement your TFD design method, your wiki will be perfect."
0,"Yes, they did write how and why they did their work step by step. Good job! But In your wiki, you write wrong line numbers for your refactor method, which should be 568 and 571, not 561 and 567. What's more, I think the method is less readable after you refactor, because the output is not clear in self.export method. I suggest changing your line 568 code to ""csv = Assignment.export_not_nil(csv,@scores,parent_id,options)"", which is more clear to check what's is output."
0,"Yes, it has test part. Good job! But I think it is not enough. You should write some test for your refactored method and new method extracted from original method. For example, you'd better to test seft.export mehtod and self.export_not_nil method as well."
1,"Most of the code is good. But there are still some things I think you can modify. Firstly, the method score is still very long, more than 50 lines. I think less than 25 lines is good. Secondly, the name of new method extracted from score method is not appropriate. For example, in line 203, a verb name ""get_score_max"" is better than a nouns name ""score_max"". Then, you did lots of creation in your spec file. I think using double and build is better in order to improve your efficiency of your code."
1,"Generally, you finished your work on time and systematically. Good job! But some issues are needed to be modified.


1. ""socre""method is very long, which should be refactored.


2. I think some method can be extracted from scores. For, example, from line164 to line 177 can be extracted to a new method called ""get_rounds_scores"".


3.Some comments are needed before refactored method and newly added method, which make reviewers to easy to understand your code.


4. The code style is good."
0,"In the video, they pass their test and all the test cases pass the automatic test tool in git. But some tests about your new method extracted from original method is wanted. What's more, a GUI test or an online test is wanted in your video or writeup."
1,the write up clearly defines the project
1,It does not clearly defines the patterns and design principles
0,could not find the link to pull request
0,The writeup clearly indicates which aspects of refactoring and testing have been covered in the project. Breakdown of all the tasks is proper with appropriate screenshots.
0,The writeup has been updated according to review comments with proper explanation for the design decisions.
1,"Pre-conditions, edge cases, invalid input values, and other possibilities have been included in the test plan."
1,Variable/Method names added during refactoring seem fine and follow the coding guidelines.
1,"The refactoring mentioned in the problem statement has been covered properly.


The test cases however have multiple occurrences of creating an object eg: ""@assignment=create(:assignment)"" it can be declared at the top of the rspec file and reused in the respective contexts. This was mentioned as an additional comment for round one of the review, however I could not find any changes in the code."
1,Could not figure out how to test the working of the code. It would be helpful if the steps to verify the functionality was mentioned in the writeup.
1,Same as before
1,climate issues still need to fix
1,Clear write-up
0,The authors did explain why and how they did it
0,Yes looks complete
1,Clear names and code follows DRY Rule
0,"code is awesome, nice and DRY."
0,seems all test cases are covered
0,"The writeup is very detailed, the background and Problem Statement section mention what the project does and why it do that."
1,"In the first peer review, I said they should add some explanation about their code, and at this time, they modify their writeup, and added a thorough section to explain why they did that. It is very useful to help me to understand their code."
1,"In the test plan section, they give a table to show what they will do in the test. It is very clearly and include the factor which is listed above."
1,"The variables and methods and class names is nice. Every names are reasonable and suggestive, no thing should be change. But I think they did not create a pull request, because I didn't find any information I need in https://github.com/expertiza/expertiza/compare/master...rikenshah:master."
0,"The scores method has been modified, but it still very long, it should be separated into several simpler method.Method response_map_to_metareview has same issue. In the assignment_spec.rb file, a lot of code is similar, it can be merged through before method for each test case."
0,"I don't think they converted all the cases listed in Test Plan. In the Test plan, they propose that they will refactor scores method, but it still to long. They should separate it into several simpler methods."
1,"As the result pasted on the writeup, every test case passed. All the features work as intended."
1,"Good explanation. Could have written pseudo code of the tests, written in assignment_specs.rb, instead of including the whole code."
1,"Yes, the section ""Plan of Work"", contains their work flow. They have also mentioned what refactoring is being and why it is being done."
1,Test plan is very well executed. All the test cases added in assignment_specs.rb pass.
0,Names are reasonable.
1,"Very clearly indicated in ""Plan of Word""."
1,"Yes. They explained clearly in ""About Refactoring and why are we using it"" and ""About Test Driven-Development and why we are using it""."
0,Yes. There are 4 tasks for test cases. Very comprehensive and clearly.
0,They refactored the long  methods before. No functions too long now.
1,The write up explains the functionality very well. The authors have even used code to explain what changes have been made.
1,"The write up has 2 sections ""About refactoring and why are we using it"" and ""About Test Driven-Development and why we are using it"" which explain why and how the authors did what they did."
0,The wiki consists of a section where all the tests are explained. These consist of several conditions and possibilities that have been considered while creating the tests.
0,The tests in the Test Plan action do pass. The test cases run without any failure as depicted in the screencast too.
1,I can not  find a way to manually test the work done in this project. But the execution of test cases in the screencast seems to work perfectly fine.
1,The code is written nicely and seems to be DRY.
1,"All the variable/new methods added are well structured and all of them are reasonable.


The ""Enhancements"" part of the wiki page writeup explained the code. It looks all perfect."
0,"All the issues are covered into automated test cases and the tests are written in Rspec.


In one of the test cases: 


+    it 'returns false if directory path already in use' do


 +      @assignment = create(:assignment)


 +      expect(@assignment.check_directory_path).to eql(false)





Here, input values are not provided to the new mock assignment created. So for all input values the test cannot be used to verify the feature."
0,Tests are added as per problem statement and test plan.
0,The team has updated the written tests as recommended in the previous review.
1,"it 'should contain course in path name' do


     @assignment = create(:assignment)


     @assignment.directory_path = Course.first.directory_path.to_s + ""/finaltest""


     expect(@assignment.directory_path).to include(Course.first.directory_path)


   end


this is a dummy and useless test. It is not testing anything in the model. I am not sure what has been tried to test.





No tests added for assignment controller changes."
0,They have considered my previous review comments and have added tests to their code.
0,3 tests were added and 1 test was commented out.
0,They have discussed their entire test plan properly in the wiki and looks complete in code. But codeclimate and travis build have failed in pull request so it seems some changes need to be made.
0,code is not commented.
0,All tests are automated.
0,"1. I could not find any test cases in the test plan which includes prerequisites, edge cases and many more.


2. The project basically includes solving the issues and writing the tests for the same. The automated tests might not be required here.


3. The problem statement clearly defines the scope of the project which shows that the automated test cases are not required.


4. The test case description is not included in the wiki page.


5. I could not see information about any test/spec file in the wiki page, where you have implemented the test cases."
0,"The authors converted all the cases discussed in Test Plan into automated tests.


But it doesn't consider the case when a TA create the assignment."
0,"Pull request link is not provided. Had to check main expertiza for the pull request.


Appropriate names are used and they go with the functionality"
0,"Code change works perfectly, although there are some hiccups as mentioned below. 





Committed code without checking. Added a 'ddd' in code by mistake. 


-> Generalddd 





^^ the above issue was mentioned in Round 1 as well. The team hasn't taken the review into consideration.





Public and Private keys changed in schema.rb without explaining why it has been done.





-    t.text    ""public_key"",                limit: 16777215


 -    t.boolean ""copy_of_emails"",                             default: false


 +    t.text    ""public_key"",                limit: 65535


 +    t.boolean ""copy_of_emails"",                          default: false





The team must acknowledge all the changes made in the code with proper comments either in wiki or on git.





Travis CI build fails because of some airbrake issue. Coverage is decreased by 22.7% ."
0,"I think the variables, methods, and class names are well defined. it's clear to understand."
0,"assignment_new_path, my_dir"
0,They have used very reasonable names for methods and variables as far as possible
0,"Names were intuitive but maximum of the variables were made instance variables even though their usage was only inside an if block, could have been local to the block."
0,"They've used proper variables, methods that make it better to understand the code they've written."
0,"1. The implementation is simple and understandable.


2. The variables, methods and class names have the reasonable names and there is no ambiguity."
0,"In app/controllers/assignments_controller.rb: 


Varible ""my_dir"" in update action is not suggestive, I can't tell its meaning from its name. 


I suggest that you come up with a better name, the name should tell us exactly whose directory it is. 





@assignment_new_path, @course and @destination_path are not suggestive, because they are not used in the following  action or erb file, it's uncessary to make them instance variables.


I suggest that you should make them local variables.





In app/models/assignment.rb:


@assignments is not suggestive, because it is not used outside of this method, it is unnecessary to make it a instance variable.


I suggest that you should make it a local variable.





By the way, the pull request changed the schema logic, it decreased the limit of digital_certificate and public_key from 16777215 to 65535, which are irrelevant to this assignment. 


I suggest that you restore the schema.rb file."
0,"Pull request link is not provided.


The update method in app/controllers/assignments_controller.rb is too lengthy. The code for moving the files to the new directory can be made as a separate method and that can be called in the update method, because update here means updating an assignment.  Every method should do its specific task. So putting more functionalities in one method is not a good practice."
0,"Code is working and the team has really done a good job to solve their problem statement. However, there are a lot of nuances of being a good developer who contributes to open source projects. Code has been checked in with changes in files that are not actually needed. 





Example: 


app/views/assignments/edit.html.erb - changes made are not required


db/schema.rb - changes made are not required


spec/controllers/assignments_controller_spec.rb - changes made are not required


spec/models/assignment_spec.rb - commented sections needs to be removed (redundancy and cluttered"
0,They have followed the Ruby style guidelines and also kept the code DRY. Some comments could be added to important parts of the code.
0,"The place where current functionality is added has become long after the change, It needs to be extracted.


Instance variables are used where it is unnecessary.  @assignments in the model, @assignment_new_path in the controller, @assignment in spec etc."
0,getting a destination path can be made a method which could take course and assignment path as a parameter and return destination path as most of the other logic has hardcoded url and it has to be at a common place.
0,"There is debug code present is spec file for ""#describe '#check_directory_path' do"". They haven't added comments to the code. Other than that it looks fine."
0,Comments could have been added
0,More comments are needed.
0,"1. The methods are short and relevant.


2. The code has been divided in to parts which do the expected operation.


3. No comments are needed because, the code method names are clear to understand the functionality of it.


4. The code follows the Ruby style.


5. I did not find any code which is DRY."
0,"All the methods are not too long. 





No comments is found in your code. 


I suggest that you should write the intention of your code in your comments. 





When processing string, too many '+' are used, which does not follow the Ruby Style Guide. 


I suggest that you could use ""#{}"" instead. 





In ""app/controllers/assignments_controller.rb"":


Line 135 seems to be redundant, since the value of dest_folder would be set to other value before use. 


I suggest that you delete this line.





It is not DRY to use @assignment = Assignment.find(params[:id]) in different actions.


I suggest that you should define a new method set_assignment to set @assignment, then make this method a before_action for all the actions that need it. 





In line 127,  statement ""if !params[:course_id].nil?"" does not follow the Ruby Style Guide.


I suggest that you change it to:


unless params[:course_id].nil?





In app/views/assignments/edit.html.erb:


It's strange that you add ""ddd""  in line 6. 


I suggest you give a good reason for that"
0,"The code works well in all cases. Few edge cases can be described:


There are lots of edge cases here which are not addressed: 


Examples: 


1. For the second issue, when we are copying the contents from the user space to a directory we are not checking if that directory is being used by any other assignment or if simultaneously another user is also trying to copy to the same location. 


2. Before saving the assignment to a directory, you check if the directory is being used by any other assignment. But what if the directory is used for non-assignment purpose like storing all topics or storing all team names? So will you check each and every directory in expertiza if it is already used? How will this case be handled?"
0,All changes seem to work. The issues that were listed seem fixed. Good work.
0,The features work properly according to what they have shown in the video.
0,"When creating an assignment outside of a course, the instructor may have specified a submission directory that has the course name in the pathname. This condition is not implemented."
0,The features work properly according to what they have shown in the video and what is described in the wiki page.
0,Works well as per video shared.
0,Edge conditions have been tested
1,There was no video or heroku app. Could not test.
0,"1. The manually testing steps written in the wiki page and the videos have helped in testing the project manually.


2. The expected features work as intended. 


3. I could not see any edge cases for the features that have been implemented.


4. There is no description of the test contexts which are related to the implemented methods."
0,All tests passed. But no edge case is tested in the RSpec. There are only 3 unit test for model assignment.
0,"The writeup includes explanation for all the issues but the background can be explained more clearly. The problem description given in the topics list had more details than the wiki page. So more details can be added here.


Grammatical errors can be fixed:


Even the assigning the assignment to a course is implemented in assignment.rb"
0,The write-up is very detailed about the two issues and explains what they intended to do clearly. The screen-casts are also informative and well structured and they provide a good overview to their problem statement. Added automated test sections in the wiki which explain the testing they have done.
0,They have written clearly their requirements and the work that they have done.
0,The wiki explains clearly about the task to be done.
0,They have mentioned their requirements clearly and the work that they have done.
0,Writeup explains the problem clearly with what was expected as the cause of the problem.
0,The video explains what the problem statement was and what the output has been. The issues to be fixed are clear through the video and the wiki page. Easier to understand. Updated wiki page with code snippets helps for better understanding
0,Videos and writeup are informative.
0,It should have been more elaborate
0,Problem is properly explained!
0,"1. The problem statement is clearly written. And it indicates what functionality the work is related to


2. The issues are divided and written precisely.


3.The steps to test the application has been described"
0,"The basic problem statement and the issue description are totally copied from the assignment document, which only proves the TA did a lot of work for this assignment. 





I suggest that you should:


1. write some of your understandings on what functionality the work is related to. 


2. think about where these problems originate from, and write some of your own opinions.


3. describe in the Modified Files part, which file relate to which issue, and the corresponding position in the file."
0,"The test plan is properly documented.


Few grammatical issues can be fixed:


""Now you will the updated path on assignment display list and instead of assign to course remove from course badge will be visible"""
0,Both how to test and automated test cases have been mentioned in the wiki. Detailed information.
0,The test plan is explained in detail but concise which is good.
0,There is some test strategy for the bug 391. But no tests or test strategy for the other bug.
0,"Yes, they have mentioned the test cases and how to run them. It also covers edge cases. Its pretty extensive. Good job!"
0,"3 tests were added and 1 test was commented out but edge cases were missing. Ex as per requirement ""Make sure that the check is made correctly even if it is a TA who creates the assignment"" was not considered."
0,Test plan looks complete enough now that they've added explanation to their tests and how to test it.
0,"All the cases are covered, with specific tests written for specific issues separately."
0,"1. The test steps have been given in the wiki page. Step by step description helps in testing the implementation. 


2. Great job team for including the issues separately and explaining them clearly in your wiki page as well as in your videos"
0,"For each issue, the author only gives one case, so there is no different cases. 


I suggest that you should give more than just one test case for each issue. 


For example, in the requirement it is says ""Make sure that the check is made correctly even if it is a TA who creates the assignment."" That's obviously a scenario, and you even copied it to your wiki. Unfortunately, you might not have read it and didn't write it in your test plan. 





By the way, I think your test plan includes too much unnecessary descriptions. 


I suggest that you should simplify it with just context, keep only the steps that is necessary for the test."
0,"The pseuodocde provided in the writeup helps in understanding the code. No design principles are followed.


The first bullet point provided in the problem description is not addressed along with the other two issues: ""It is not possible to create an assignment that does not specify a submission directory.""


An automated test for this issue is written and is described in test plan, but the code for solving the issue is not provided in the main section"
0,The explanations were added in the wiki as expected. Correct use of design patterns was incorporated. Good work.
0,They have explained clearly the steps taken by them to approach the problem.
0,Wiki explains what changes they have done.
0,The approach was explained clearly in the wiki.
0,The algorithm is explained.
0,Clearly explained approach with proper sequence of steps.
0,"1.The details of why the authors did the work has been explained in the problem statement.


2. I could not find the description of design patterns or principles in the wiki page.


3. I highly recommend you to write the description of design patterns in your wiki page if you have used in your implementation.


4. The issues have been explained properly in 2 separate videos."
0,"The introduction for how to deal with the 2 issues only shows the method they took to solve the problem, no reason is given to explain why the authors did the work the way they did. 





I suggest you explain: 


Why you chose to forbid creating the directory? 


Isn't there a better way? 


Why did you choose only assignment_controller.rb, assignment_controller.rb and assignment/new.html.erb to modify? 





At least from this wiki, I can't see why this method is a wise solution."
0,team has converted all the testcases that are mentioned in the test plan. and all of them pass
0,"Yes, RSpec tests were created for the test cases discussed in the Test Plan and the write-up"
0,Perfectly written automated unit tests.
1,"Tests have been added but since write-up is not present, no test plan to compare."
0,"Yes, all the cases discussed in the Test Plan have been executed and completed. None of them fail and the thus the build passes successfully in the pull request."
0,Well the test cases doesn't seem to be automated.
0,There are no test case failures. All the cases are passing. The authors have even fixed all the issues which may arrive of merging. The test coverage has increased as well.
1,"1. The authors have included all the test cases which they have implemented.


2. I could not see any description about the automated test cases."
0,Test plan is generic and could have been specific. It seems that they have done all the test cases required to be done.
0,"The author did not converted all cases discussed in  the test plan. The code follow 3 characters: is DRY, following ruby style guide, is commented, does not contain long methods and variables and functions are property."
0,All the variable names and ITs written in the code have appropriate names and no changes are needed in them.
0,The names are inttuiteve and easy to understand the code is simple and direct
0,The newly added tests  follow good ruby convention
0,The test cases are thorough. A lot of it has been added. Commendable in terms of the volume of work done.
0,Variable and function names are proper.
0,The code is written really well and all the names provided in the code seem reasonable to me.
0,Code is easy to understand.
0,Yes testing related name and variables and quite intuitive and understandable easily which variable relates to which particular thing
0,The names are intuitive. Good coding practice
0,"1. The newly added code is mainly in test files or spec files.


2. The code has relevant variable,methods and class names."
0,The names used are intuitive and easy to understand their usage.
0,"Yes, the code added is great and intuitive, and a lot of work has gone to change class to instance variable and they have explained why. But the tests are not implemeted"
0,"None of the befores, IT are too long.


code doesn't need to be extracted into different methods.


Few more comments would have made the code better.


COde is DRY and it follows Ruby Style of coding"
0,None of the functions are too long
1,"Some of the methods are way too long. Could have bifurcated.


Could have separated common set up in some other setup methods."
0,The code looks proper and the function size is proper.
1,The code nicely written. It is very systematic and easy to read. Ruby Style Guide is followed and overall the code seems DRY to me.
1,"Code is good. Just in tests, the code could've been reduced in some cases where same object is being mocked multiple times."
0,"now the tests  written which have been implemented, the factory creation and adding test cases for review_response_map.rb followed the ruby styles well by using the factories for creation of the testing scenario."
0,"Long codes are usually of 100 lines, but all the changes the author have done are small. So the coding standards are maintained."
1,"1. The test context are not tool long and the methods have included are to the point.


2. Some test contexts like .feedback_response_report are too big and difficult to understand.


3. These big contexts need comments to understand.


4. The code follows Ruby Style Guide.


5. I did not find any tests or the specs that are DRY."
0,"1) The function are not too long


2) No need to extract code into separate methods


3)Comments are not necessary as the code is short and easy to understand


4)I feel that it follows Ruby Style


5)No"
1,"The code perfectly follow the principle of ruby, though some function are too long; all cods need to be extracted into separate methods. There is no enough comments to solve the trouble so that some codes I can't understand."
0,All the test cases are passed and they have covered edge cases as well
1,"They also tested that after deleting responsemap2, responsemap1 was not deleted. But there was no check for actual deletion of responsemap1."
0,"The functionality seems to work and the test cases added, have passed."
1,"I am unable to find a way to manually test the work of the authors but according to their screencast, the tests work without any failure."
0,"Since it is not a deployed version, I cannot test their working and rather since its a testing project the build is what we have to be concerned which is successful from their pull request."
0,"Last time the authors didn't provide the pull request. This time it can be seen that the authors have contributed a lot and have been more careful. All the cases are working fine, I didn't find any edge cases failing."
0,"1. The video clearly explains what files are modified.


2. The video explains how the test cases are passed.


3. The team has not included the steps to test the implementation manually. Hence it is difficult to manually test the application."
0,Their task was to write test cases. I don't think manual test is required.
1,All features are achieved and intended. But the features does not work correctly for edge cases. Because there is no enough information for code that I can pull.
0,Write up is written excellently. It covers all the points and explains the project very well
0,The project explains in details what is they want to test in this case they want to response hierarchies
0,"Yes, the write-up explains what the project is about and what work the team did as part of the project - Testing various response maps by writing factories."
1,"Could have explained the write up more thoroughly.


One of the subsections has title 'Work to be done'. This gives a false idea that this is still pending (it actually is the work that had to be done, and they did it)."
0,Not able to find the write-up or video
0,"The write up is well written, specially the sections have been divided such that the reading becomes easy."
0,"Yes, the write up is updated and easy to understand."
0,"The video gives a hands on easy understandability too which is good, They have explained quite clearly with also mentioning suggestion files to refer to understand their implementations, since it is related to testing implementation. 


More information regarding the functionalities of the response map in format of images will be easy to understand."
1,"Last time the author failed to provide the write up url. This time the author has provided the write up, but it should be more comprehensive. Test plan is explained in just one sentence. Testing requires the same amount infact sometimes more time than development itself."
0,"1. The problem statement describe the problem clearly.


2. The work to be done section explains what is expected in the project.


3. the team has clearly written what files to be modified.


4. Overall the wiki page has proper flow of information."
1,The writeup is well detailed out. It would have been better if the video was smaller. But it was well done. Test plan could have explained the approach used.
1,"In the writeup, your team just copy words from description of oss project, but there is not enough explanation for what is going with codes. The good point is that your team lists all files that had made changes. But your team did not explain how to make change and why need to make changes. This part need to be implemented."
0,Test plan is incomplete.
0,testplan looks complete because it covers all the cases which are mentioned in the requirement document and it covers all the edge cases as well.
0,The whole project is about testing only so they have done a good job of explaining the testcases
1,"The test plan section includes details of tests for two ResponseModelMaps. The team has described what was tested, what the inputs were and how the factories are being used.


For other tests, the team has asked to refer the git repo. Bit more details of the other tests would have helped."
0,A Test Plan has been provided in the wiki but is really short - just 1 sentence.
0,Test plan looks complete.
0,They have mentioned that they need various spec files under spec_models and they have their tests implemented too. As stated last time now they have added the unit tests too which satisfies their primary objective of the project which looks better now and the video also explains those tests with easier understandability.
0,Test plan is explained in just one sentence. Testing requires the same amount infact sometimes more time than development itself. The authors have not explained comprehensively the testing plan.
1,The test plan is generic with explanation of few test cases. It would have been better if the approach for it was detailed out.
1,"There is no enough information for test plan. There is not enough information for how to handle cases for pre-condition, edges cases, invalid input values and other possibilities."
0,"Yes, writeup explains why team did the work in specific manner and how they have used Rspec to do the testing."
0,The text was easy to follow and they explained that they used factory design pattern for testing and also they created
1,"Could have explained why unit tests were important for these scenarios.


The principles were accurate. They used the methods suggested in 'The Magic Tricks of Testing' video lecture."
1,"The write up explains it really well, how the authors have worked on the project. But under the work to be done section, it seems like they have just copy - pasted the lines from the ""OSS projects on Expertiza"" doc."
1,Yes since it was a testing project they infact have a predefined tasks to complete so went with them(having no option to go in a particular way) and explained with reasons why they need to implement something like the factories were needed because each response_map needs its own object. But explaining with sample examples will make the write-up more easy to relate and understand which I think you will be incorporating it in the video which is not yet made due to technical difficulties as stated in the write-up. I would suggest while explaining try using some examples and relate your tests with them which will be better to understand
1,"The author have not provided much insight of the things they have performed and how they have performed. Instead of just providing the file names to be changed or created or the file convention, the authors should have provided the details about the work they did, so that even the layman could understand."
1,"1. The page description explains how and why authors did the work the way they did.


2. The team has listed all the files which they have modified.


3. I could not see any explanation about design principles. I could understand that the project includes only testing. Hence, the design patterns are not required."
0,They have what was asked to them.
1,"Your teams' writeup did not provide enough information for the reason why these part need to be refactored and functions for these tests. I wasn't able to test the test plans because a link to the github repository with the code is not there. The pull request doesn't give access to the code to test, and since the video or the screen shots don't show test results, I can grade this."
1,"After browsing the new-added code in the pull request, I think the variables, methods, and class names are all reasonable and suggestive of the functionality, actually what the author did is to refactor variables and methods. So, I think in the new-added code, there is no variables, methods and class names not reasonable and suggestive of the functionality."
0,"The team could have used a couple of visual aids to make the doc clearer, as of now, no visual aids were visible on the design doc."
0,"This wiki include introduction, problem statement, use case diagram and test plan. 





But the project purpose has not been clearly indicated.


I suggest that you add ""Project purpose"" section in the ""Introduction"" chapter.





The design of this assignment is not stated, the wiki only provides a use case diagram.


I suggest that you should explain your design with some words."
0,"This wiki used a use case diagram to illustrate its design. But since no words is provided it is not clear what the design is about. So I can't tell whether it covers all the functionalities required.





I suggest that you should talk about what functionalities are included in your design."
0,"The wiki doesn't provide a word about the changes. 





I suggest that you should talk about what you have changed in your design, and give corresponding explanations."
0,"The wiki doesn't provide any code or logic design.





I suggest that you should add code design for each functionality."
0,"The wiki provides only a use case diagram without any explanation. It's hard to judge whether this diagram is reasonable.





I suggest that you should first add some explanation for the current use case diagram, so we can make an assessment.





Then I suggest you add more diagram to support your logic design, and give corresponding explanations, of course."
0,The design document explains in detail the intended purpose of the design document and provides enough details to make the reader understand the problem.
0,The team has incorporated all the required functionality as per the given documentation on mutation testing.
0,The team has given only one example of mutation test. It would be more clear if they can provide more mutation examples.
0,The team has been given clear instructions has to the placement of the test files and the design document reflects the same.
0,The existing execution flow is a bit difficult to understand. The team can provide a brief description about the same to make it clear to the reader.
0,The design doc seems complete with proper flow charts and testing plan.
0,"Looking at the requirements, it seems like design doc covers all the required functionality in the project."
0,I was able to understand the explanations provided but felt some explanations were redundant.
0,"Since the design is just doing Mutation changes, I don't think it may cause any additional 'smell' or existing code might get complicated"
0,All UML diagrams follow proper conventions.
0,"The completeness of the design doc is almost perfect: the write-up contains a short description, the introductions of several terminologies such as Servo, Rust, Web-platform-tests and Mutation Testing, detailed project description such as setup, steps, strategy, execution flow, design pattern and testing. However, I still don't get what purpose is for this project. Maybe they should put more focuses on the purpose of the project, such as why they need to do this mutation testing? Is it for the performance or for finding bugs?"
0,"It seems that everything on the project write-up follows: the initial steps and the subsequent steps they are going to do, the mutation strategies they mentioned, the execution flow of the mutation testing, and the strategy design pattern they are going to use. I think the design does incorporate all of the functionalities completely."
0,"They introduced the bug in the existing mutation strategy and proposed multiple mutation strategies for mutation testing. However, I can not really understand how these strategies will help to fix the bug in the existing mutation strategy."
0,"They are going to use the strategy design pattern, which allows them to deal with different if-condition they will meet during the mutation testing, and the design sounds like a plan for me because it seems that they have considered all cases they might face during the mutation testing."
0,"They offered the execution flow and the UML diagram for their strategy design pattern to illustrate their thoughts and design for the problems they want to fix, and these diagrams are clear for me to understand what they are planning to do for this project."
0,"All relevant details are present on the wiki page. However, it can be structured better to improve the overall appeal of the page. Example: 'Testing' should not be a part of project description, but a separate section itself!"
0,"The design incorporates all the functionality required. The team can however think about some small additional extension features that they can implement, related to the scope of the project and add it to the list of functionalities."
0,"The team seems to have a good understanding of changes required, however it is important for the team to write test cases to test their changes. I would recommend having a test first development approach."
0,The execution flow diagram can be improved by grouping logically similar components in one component.
0,Project purpose and project design are elaborated well. The test plan should be elaborated more
0,Yes it incorporates all the functionality required
0,All the points are covered but the content is a bit inadequate. Should have been elaborated for a better understanding
0,The design can be refactored to check for the existing gems
0,The diagrams provide a good insight to understand the project
0,Mutation testing is explained thoroughly in this project. What is the purpose of the project and the design about how they are going to achieve it is mentioned vividly.
0,Yes. The design doc mentions everything that the problem statement asks them to.
0,Explained clearly to be understood by any layman not aware of Servo and Mutation testing. Good work!
0,"Design seems fine as the project requires only mutation testing, i.e., changing a part of code and checking whether the mutation tests fail. Code smells are not seen as per the design. Everything mentioned in this question seems fine."
0,Flowchart explains everything required. Diagrams are easy to understand.
0,"I think this design doc is complete, because I didn't know the Mutation Testing before, and this is my first time knowing mutation testing, but following the author's description, I have a basic understanding if it, and the background information is specific, for me, it's easily to follow up."
0,"In the final project doc provided in syllabus, I didn't find the topic ""M1754"", so I can't evaluate if the design doc incorporate all of the functionality required."
0,"I checked changes proposed by the author, it's mostly the refactor changes, and I think the author explain it very clearly."
0,"As I mentioned before, in this current version, the author proposed changes are mostly the refactor changes, for these changes, I didn't find problems."
0,"In the design doc, the author draws the execution flow diagram, and I think it's very clearly and also helpful for reader's understanding."
0,The design doc is very effectively made which includes all the functionality required.
0,The author has briefly explained the changes needed by giving proper explanations for it. The presence of proper diagrams showing flow charts of the functionality along with written USE cases makes it much easy for a person to comprehend the author's idea. The author also mentions that they will try to make use of the code as much as possible and avoid redundancy which further strengthens the author's viewpoint.
0,A major drawback in the document is the lack of visual aid which is making it difficult to follow.
0,Use case diagram depict the functionality of the design doc
0,"Yes, the use case diagram has been explained well along with the given user interface screenshots. They are self explanatory. The UML diagrams do follow all conventions too."
0,The visual aids are really good the Use case diagram which has been shown here is very descriptive as well as the author has given a description regarding each step in the USE case which helps to understand the project in a much deeper way.
0,"I think use case diagram can be written better, by using multiple links denoting ""what leads to what"""
0,"UML chart is very helpful, very good job team. Some screenshots also help me a lot to understand your project. But I recommend you guys add some mockup screens(screen after finished your project) to your doc."
0,Proper Visual aids are used to show the use case and work flow.
0,The visual aids provide enough details and give a clear insight of the project
1,"More detailed explanation needed on modification proposed, also focus more on how to handle the third party api's;"
1,needs a test plan
1,"The team has proposed solutions of all the problems in their design document. However, the extensive use of screen shots makes it feel little bit hard to follow, because each image breaks the flow of reading. Another point I would like to make is, they have missed mentioning the essential part  of how they will actually implement the proposed changes in their design doc."
1,"I was not able to review the team on this basis, because they have not included the actual implementation in the design document."
0,"The design doc is pretty clear and complete. The problem is that Servo uses the Web Platform Test (WPT) suite for testing, but does not perform an evaluation of the breadth of the tests. The goal of this project is to use techniques from mutation testing to evaluate the performance of the WPT suite when bugs are deliberately introduced into the code base. All the parts are covered in the document."
0,"The aim of the project is not to create a full browser but is rather to create a highly parallel environment that allows for many components be handled by fine-grained, isolated tasks. All the functionality are incorporated in the doc with details."
0,The explanations given by the author is great. They provide the steps to build the changes and showing pictures to make it more easily for readers to understand.
0,"The designs are reasonable and they use Strategy Design Pattern which is good. Although the new design may increase the response time in some way, it is acceptable."
0,"The diagrams are really good, they give clear pictures to show their ideas. It helps a lot for me to understand the project."
0,UI test can be performed to validate the validity of mutation test cases
0,Yes. Mutation Strategy Test.
0,"I have tried to understand the project, but I am not very familiar with servo project. I think they did a good job."
0,The explanation is in details. And they explained why they don't need to include the test plan.
0,"There are execution flow, and Strategy Design Pattern."
0,Changes to be implemented has been mentioned but details/outline regarding their implementation is not provided.
0,The design doc  seems very much complete as they discusses in depth what they are doing and how do they want to do it
0,The doc seems to be complete as they have given ways to complete the functionality required in this project
0,The changes and additions given by the author are adequately explained.
0,The design proposed by author looks clean
0,They have provided 2 visual aids which adequately describes what they are doing and how will they do it
0,They details document is quite through
0,"it is not clear as to hot they are planning to implement ""find heuristics for identifying false positives"""
0,Explanation provided only in terms of flow chart
0,Is the project supposed to be done using Python. Shouldn't they be using RUST.
0,They have made good use of diagrams
0,Use cases provided by the authors help in understanding what the system comprises of. Although the explanation of these use cases do not seem relevant.
0,"Visual aids like UML, UI have been given for easy understanding on the team's plan of approach"
0,"The visual aids are all helpful. They provide a more clear understanding of what the authors are trying to convey. The UML diagram is explained in great detail, along with the use cases."
0,Screenshots and UML diagrams explains the requirement and design changes. They provide a more clear understanding of what the authors are trying to convey.
0,Several good images have been provided and also a detailed UML diagram has also been given. this makes it very easy to understand the objective of the project.
0,"The author's team has taken effort to provide a use case diagram and also explaining each case along with its pre and post condtions, making it easy to follow."
0,The design doc explains the complete requirement of the project.
0,It includes all of the functionality required.
0,as this a new feature addition there is no need to mention the changes required.
0,Right now design seems sound
0,Provided proper execution flow diagram and design pattern diagram as well.
0,The flow of control and the UML diagrams highly boost the overall understandability of the document.
0,"The documentation is complete with all the necessary details of their plan of implementation. Even though a basic testing plan could have been provided, the write up was still descriptive enough."
0,"Visual aids are used very nicely.


Flow diagram, Use cases diagram used by the team make is very easy to understand this project and proposed design."
0,"Except for the testing plan, this design doc is complete. It nicely explains the purpose of this project and How team is going to make those changes."
0,Detailed project description along with the design is present in the wiki.
0,"Explained thoroughly with the use of visual aids. No UML diagrams, but the application flow and use case diagram explain what is to be done. All diagrams are easy to follow and provide enough details for basic understanding."
1,"A use-case diagram and a flow diagram has been provided and a diagram that shows the computation of the composite score. 





A mockup of the user interface would greatly improve the document. 


A block diagram mapping out the files to be changed helps too.





There is not much difference between the application flow diagram and the use case diagram since both essentially tell me the same thing i.e the sequence of events that will take place. One of the diagrams is redundant."
0,Visual aids like flow diagram have been appropriately inserted.
0,Very well written document with UML Diagrams and database design explained properly.
0,The team has made excellent use of use case diagrams and control flow diagrams.
0,"The overall design looks good. 





I found these deficiencies -


1) There is no test plan


2)  There are no mock ups


3) The points under the Requirements heading do not actually describe the requirements, they mention the 'flow' . 


For example, in the Requirements heading the author has written the following - 


""1.The user should login as an instructor.


2.The instructor should create an assignment by checking allow self-review option.""





1 & 2 are pre-existing functionalities, and are not requirements. Infact, 1 & 2 are steps or part of the flow of a use case.





Please change the heading name for better clarity.





4) The 'Files to be modified' section is at the bottom. It should be moved up, and ideally transformed into a block diagram so that any viewer can quickly see whats to be modified in the existing Expertiza application."
0,"About the visual aids, I think the author did a good job of it, he add some very helpful tables and diagrams, for example, in the database design part and application design part, the author added some useful diagrams, even the working flow, I think it;s very useful for reader learning about what you need do and why you wanna do that."
0,"Everything related to problem statement, design and future implementation has been mentioned properly, just that test plan is missing from the wiki page."
0,"Proper visual aid is included in the document such as the application flow, Use Case Diagram, Database design and table about the method to calculate the composite score. All these diagrams help in better understanding of the design and proposed implementation."
0,"Test plan is missing completely. Apart from that, this is a good design document."
0,use case and application flow diagrams helps to understand the flow the things they are going to proceed
0,"The design doc looks complete with all the reasons, choices, diagrams and expectations."
1,"Yes, the use case diagram is well explained and explains itself. Also the table showing the grades has been done well. I suggest they either have  a flow chart of they have a class diagram along with the use case diagram."
0,The diagrams are clear and concise.They ate helpful for the reader to understand the approach of the author.
0,The most complete design document so far except the test plan. The problem description is properly elaborated along with proper explanation of requirements. Has good amount of diagrams and planned changes. But there should be a test plan.
0,"I think this design doc is very complete, because it include description of project, the background information, the objective, and the idea of how to implement and design it. In my opinion, a good design doc is just like this. But I think the author also could improve something, for example, in requirements part, I think there is no need to say that much, because the author did the application flow following, which is the same as the requirement, and more reasonable, I think the requirement part can be delete."
0,Project description and problem statement is clearly explained.
0,"The problem statement is not specified accurately. In the sense, they can specify exactly what are the current issues and what they intend to do. Also, the project design is just two sentences. They haven't specified the design of their project> I also do not see any test plan."
0,Testing plan is not included.Otherwise the design document is complete.
0,"This wiki has already included project purpos, probelm definition, requirments and design, which covers most of the important parts.





However, this wiki fails to provide a testing plan. 


Therefore, I suggest that you add a testing plan next time."
0,"The detailed description  is included in the design document, But I have a few suggestions:


The problem definition is too short, please provide more detail about that. And the data base is fully implemented."
0,The authors design a complete design doc and It's easy to understand the task of this group.
0,The authors have been complete in incorporating all the necessary functionalities.
0,Design doc incorporates all the functionalities required.
0,The wiki mentions what functionality needs to be covered. No changes in design required as per my understanding.
0,The complete functionality has been covered and explained with the help of pictures.
0,"As mentioned, tests are missing completely."
0,"the link in the question has projects from Spring 2017, and cant find this project"
0,"The design seems sound, but some explanation towards the impact of calculating the composite score has on the runtime could have been provided."
0,All the required functionality is present with proper explanation of everything. The Use Case diagram and application flow along with planned changes deal with all the required functionality.
0,"Team is adding the changes to the correct class.


New design wont be making this code smelly. They are trying to use the existing code, So code will be DRY.


New design does not look complement. 


I guess design explained in this doc is enough to solve this problem."
0,"Yes, I checked the final project document of this project, and there are two implementations job, and in the author's design doc, it incorporate all the functionality required."
0,All functionality is included in the document. everything is captured
0,Seems fine. Nothing to point out. Simple implementation of a formula to calculate the composite score is required. Good topic to work on! The team has put efforts into the design document.
0,"Yes, all the functionality as part of the google doc has been incorporated into the documentation. However, the test plan is missing which is an important part of their project. They could also specify their tasks in detail."
0,the design doc shows the flow diagram of how the things would be approached.
0,The document does not explain what features would be added to what controllers; it only mentions what is to be modified. So I could not determine if the methods are added to a wrong class and/or any kind of impact new code would make to the existing code.
0,Datadesign and user flow diagram shows that author has complete idea about what they are doing. Also they are following DRY principle to avoid code duplication.
0,The author is trying to mix self review and peer review into 1 module. I would probably try to separate it out. Going back to 'peer review only' should involve as less steps as possible.
0,Design doesn't seem to have any gaps.
0,"According to the document, this assignment requires 3 main functionality to be done:


1. It should be possible to see self-review scores juxtaposed with peer-review scores. 


2. Then implement a way to combine self-review and peer-review scores to derive a composite score.


3. The author(s) should be required to submit their self-evaluation(s) before seeing the results of their peer evaluations.





According to chapter ""Requirements"", only the first functionality is clearly stated, but it is not clear whether the other two are covered.





In the ""Application Flow"" chapter the 3rd functionality has been implemented in the ""Pre conditions"".





In the ""Method to calculate the composite score"" chapter the wiki finally mentioned the 2nd functionality.





In fact, all the functionalities are covered, but they are not well organized, which make it not clear about what functionalities are designed.





Therefore, I suggest that you should modify the content in your ""Requirements"" chapter, to explicitly mention the oth"
0,The design talks in detail about the changes and database design. The design patterns being used are also mentioned. The required changes are also included in the design and the plan looks proper that would not cause issues as most changes are being done in already existing code.
0,"Most of design are shown in this wiki and fully implemented, which is good. But I hope if they can provide possible file that would be better."
0,"At the current version, I didn't  find problems."
0,neat table of calculation is present that is very helpful to understand the requirements
0,the design incorporates all of the functionality required.
0,"I don't think they need to add any methods to any class as this is just an algorithmic design to the problem, In no way would they cause any merge conflicts with the original branch, More focus on design should be there."
0,The description covers the big picture and then moves on to explain the smaller details which makes the description easy to follow.
0,The classes chosen seem apt for the placement of methods.The designs are simple and easy to understand.
1,Team has explained this project nicely. They have mentioned all the files that need to be changed and in what way those changes they are planning to do.
0,"This wiki provides only the design of functionality, no design of code is provided, so it's impossible to evaluate the quality of the logic design.


I suggest that you should add code design for each problem."
0,"There is no problem in the design proposed, which is detailed and everything looks good."
0,"1) the methods are well designed.


2) the design is simple and easy to understand."
1,"The changes that the author needs to make is shown by a table to calculate the composite scores based on the self review scores and peer review scores. The calculations seem legitimate. However, if mistakes are made by the reviewers (given wrong rating), it will indirectly reduce the composite score. This could be handled by using the ""mode"" i.e., the most common rating found in all peer reviews rather than taking the average of the ratings in peer reviews. I might be wrong, but that is what I think would be the best and it would be appreciated if you give it a thought and try with all the permutations and combinations."
0,"Explanation looks adequate. 


However, I found 2 issues - 


1) The files to be changed could be mapped out to a block diagram for better comprehension.


2) The document does not mention what functionality has to be added to what source file. Only the sources to be changed have been listed."
0,"Changes are very good, the author has proposed Design patterns they will be used in the implementation, along with that method to calculate score has been explained elaborately"
0,This is perfectly explained. Each scenario and edge cases are written well.
0,"The design doc provides a comprehensive explanation of the high level design and the requirements,"
0,"The explanation of planned changes looks proper. Database changes, file changes are properly explained which is very easy to follow as the description is in detail. The use of diagrams makes it even easier to follow the explanations."
0,"I think the explanation of current changes are good, it clearly and easy to understand. It's mostly about the design of database, but I think this project also needs some code implementation, I think the author should add this part, and give a good explanations."
0,explained in detail. therefore easy to the document.
0,I find the explanation of the problem lacking in accuracy and detail. They haven't discusses their plan of action and how they want to implement their changes. The logic has been discusses well using the table.
0,Author has shown a valid approach .It seems a good way to start the project.
0,"This wiki gives clear design of the requirement, and also provides multiple diagrams to support the description.





However, the wiki fails to provide explanations on why they designed it this way.


I suggest that you should give an explanation for each design."
0,The explanation and description are fully implemented
0,the quality is very high. they have a detailed explanation of the changes.
1,"This wiki employs two diagrams and one table to illustrate the functionality design, which helps a lot for the reader to get the idea. 





There is a little problem with current visual aids: no picture of the page is provided in this wiki to illustrate the effect of the design. 


I suggest that you should also include some snapshots of the page to enrich your wiki."
0,"The design flow look good, but they did not provide us enough detailed information. Try to use UML diagram."
0,they do have a visual aid. it can help the reader understand this project.
0,"The authors explain well what Mutation Testing is, it would be better if they give more description about their project scope."
0,The Initial steps and Subsequent steps mentions all the project functionality requirements.
0,The changes proposed are replaced the existing mutation strategy with the newly added mutation strategies. The proposed mutation strategies still lacks exhaustive explanation for newbie to follow.
0,The design pattern seems not sound for just displaying an UML.
0,Two UML diagram helps viewer to digest the processing model.
0,"The author just added some sentences from google doc.


I am giving some suggestions:


1. brief discussion of 2 lines what is the functionality, why the previous project was rejected, what changes you are needed to be done. ( project purpose)


2. your project can be divided into 5 issues. showing due dates, showing submission links, file uploads. each of these issues can be divided into problem, solution and design sections.(project design) .


3. As explained in the doc I think you people need to implement test-driven development. Try to add some more matter to it."
1,"The page involves the problem statement and the analysis as well as the test plan, generally it is complete with all the clear structure and adequate content, but in the analysis part they should provide more explanation about the way they did and try to design how they will do to realize those appearance on the page."
0,Looks pretty informative.
0,The design document addresses all the major headings that are necessary.
0,"The mockups are good, but it lacks explanation on changes needed to be done in the files."
0,"The design document has been started upon very nicely, including a lucid and concise problem statement and how they have planned the changes, screenshots make it easier to follow on which pages they are planning to make changes. But the test plan seems to be just one sentence long for both TDD, UI testing. I think that the team can work on planning their tests and mentioning their approach properly in the design doc. Also I found why team is taking such steps is missing from the document, adding on which the design doc would be better."
1,The documentation seems to be incomplete. Not much details about the design or test plan is shared. No UML diagrams given.
0,"Following things are missing-


1)UML Diagrams


2)Database structures for tables that are going to be used.


3)Way of problem approach"
0,"Yes, in the design doc, we can see the Problem Statement, Design Analysis, Test Plan, all these sections are necessary. Especially for the UI Testing, the newly added functionality would be tested manually by the UI testing. The time line added should show the deadlines and the recently made changes to the project by reviewer or the author. It should also navigate author to the page he wants through the preview link provided for each stage in timeline."
0,"The design doc looks complete with important aspects related to the project covered, project purpose and future test plan. Couldn't see a detailed design analysis though."
0,Use case diagram is missing. The test plan needs to be more detailed
0,The project purpose are not explained clearly and so does the test plan. I think you should talk more about how you solve the problems with more details.
0,Project purpose is defined clearly. But the project design and the approach to generate those timestamps is missing.
0,All parts are completed.
0,"1. The design document is very well written.


2. The most important part which is missing in the document is Use case diagram or data flow diagram or any other UML diagrams.


3. The document includes existing limitations and tasks involved which is explanatory.


4. The team has also included information about the database which is very important."
0,yes most of the sections are available
0,The page is complete and has a good flow. All sections include adequate details.
0,"The design document is very comprehensive and well organized. It includes everything from the problem statement, the design to the test plan and visual diagrams."
0,"All the important things like Project purpose, design, and its test plan have been thoroughly explained and documented. The project description includes ""At present the calibration functionality is limited"", which uses calibration, so it will be better to explain calibration first and then use it or explain calibration somewhere else. As calibration is used various times in the description, its explanation seems to be very important."
0,"The project purpose, project design, and/or testing plan have been stated in the design doc. But I think that you guys should add some comments about use case and draw a use case chart in order to understand your project deeply. What's more, the content about how to set up an expertiza environment should be deleted from your doc, because I think it makes no sense here."
0,"The design doc is very completeness, include the introduction, the problem(clearly classified), how to solve the problem, design idea as well as the test plan, all of them are full with many details and logic is clear."
0,"The design doc could have included a separate section for ""project purpose"", ""project design"". The test plan section is already present, so that seems in place."
0,The required sections are present in the doc and seem to complete.
0,"The design document is thorough with the problem statement, the proposed design, and the testing plan. However, it does not address the steps that will lead to the change and how are they proposing to work on the desired features."
0,"Their design document is very complete. They have a detailed instruction, what and why they proposed such way to solve the problem, and they have a very detailed diagram to show the control flow."
0,All design doc gives a sense of completeness as they have exhaustively covered everything ranging from installation to the test plan.
0,"The team has provided enough details about their project in the design document including Problem statement, the work to be done and test plan."
0,"The author has explained each of project purpose, design and test plan in detail and therefore the document is complete."
0,"The document involves all required sections.


But after giving details on setting up Expertiza, the author has jumped directly to the problem statement. Some background information would have been helpful for understanding.


In existing limitations, the very first point says:


1, No support for varying rubric by round feature.


it is hard to understand this, as to what rubric they are talking about and why its a limitation.


So some background information and explanation on why its a limitation and what is the expectation can be included."
0,"As mentioned earlier, the project design is not explained thoroughly, hence difficult to say if each functionality will work correctly."
0,"The functionalities have been covered up to a good extent, but just one one proposed diagram as timeline has been showed."
0,All the functionalities are mentioned.
0,The design document addresses the feature that they are asked based on the Final Project document.
0,"Which page shpould have the implemented code?


Give us a clear idea."
0,"they have involved most of the requirement of the functionality, especially for visualizing the timestamps of the items, they give a sketch graph of what it will be like on the page, however, for the hyperlink part i did not see their design of that, which should be added."
0,"The author didn't explain the functionality at all.


Suggestion:


explanation about the method that the team is planning to draw graph would have been helpful .Like using javascript or some gems."
0,Appears to be complete
0,"Yes, the design doc explain the functionality required well, especially for the time line designed. 


In this project a time line in the student task list page would be added to navigate student to the due dates and the necessary links easily and keep a track of them. After the addition of the functionality, the student task list page would have the timeline as shown below.(Actual visualization of the page might differ from the static page displayed). We will be using HighGraphs to generate the timeline."
0,All the functionality required are covered.
0,All the functionalities are stated but not clearly explained
0,"Yes, all the functionality are covered in the  design document."
0,"The changes proposed by the team seem to be fine, the files which they have planned to work on upon with why those files is a good step but the writeup on the whole misses completeness, as the testing plan is not sufficient, although screenshots have been put up proper explanation is missing. Also giving the timeline option on task list is a good approach, but apart from it, the timeline associated with each deadlines or timestamps can be shown on that particular assignment page also. Proper explanation is missing on the whole."
0,Need more explanation what exactly they are going to do. Just file names are not enough.
0,The authors have provided visual aids and a design analysis. They can add additional description to make their document even better for readers to follow.
0,just one diagram is shown
0,"They have provide very good graph to show the UI design in the page, but the explanation is not enough, for the part they design the timestamp, which has a good appearance but lack of explanation of why they do the every step, should try to say more about the details."
0,"No information added at all by the author.


As suggested add problem, solution, and design for each issue. in the design section add UML diagrams, Images and tables used."
0,No explanation provided.
0,"I think some UML diagram, or database tables are needed. For a design doc, these elements will make the doc easier to read and understand."
0,Simple and clear explanation along with the files names which need to be changed mentioned. Explanation was easy to understand.
0,Explanation about the approach to solve the problem is needed.
0,I think the explanations lack detailed information of how they achieve the changes step by step.
0,"The author has stated only the objectives of the project. Though the screenshot shows the expectation, there is no use case diagram stating the actors involved"
0,No new methods are mentioned. No class diagram given.
0,Design is  proper and seems to be a good and simplified approach to solve the timestamps for student submissions.
0,More effort should be expended on the design.
0,The Design appears sound and I don't see any flaws with the plan.
0,"looks good, but no implementation details."
0,"The designs seems not so complicated and easy to understand, there is no code involved in the page so there is no methods in wrong class, all of their work is to show more information on the page, which will not influence the response time."
0,"suggestions:


1. mention the code snippet where the changes are made in each issue section so that it will be easy to follow for the reviewer.


2.As already said explain about the gem or javascript library you are planning to use for this project."
0,Nothing about implementation is specified and hence cannot tell anything about design
0,The methods and the code that the author plans to add is not available in the design document.
0,The system approach seems to be good.
0,"They didn't mention the code changes in the design doc, so I can not judge this. But i think the response time will not be influenced too much."
0,"Design sounds good with no smelly code, also doesn't look complicated."
0,No classes is introduced in the design doc.
0,No UML diagrams given.
0,screenshots have been provided along with the expected change but there is no UML diagram
0,Mockups are informative. But there are no UML or class diagram.
0,The design document has screenshots for the design analysis but there aren't any UML diagrams to help aid reader understanding.
0,"Future view is displayed, but flow of details that will hapen is not given"
0,"They have provide the graph of UI design in the page about the timestamps part, it is a good design but i really think if that appears in the page will take too much space and seems not compatible with other contents, so I suggest they should make the arrow smaller and maybe narrow the content box just to a line of word and if user want to see the details they can click a link to unfold the content."
0,Only screenshots are provided. Use case and UML diagram are missing.
0,The time chart for submission timeline helped in understanding the flow of the project. Enough details to make the reader understand what the team is planning to accomplish.
0,"No UML diagrams in provided in the design doc, such use case or sequence diagram, but the mockups of screens they provided are pretty well. Especially for the time line design."
0,No visual aids
0,"2nd and 3rd images are helpful. these images basically explain how the page looks after the graph is integrated. It would have been much better if some matter is added on top of the images.


Suggestions:


1. The first image is of no use because it's just a login page.


2. 3rd graph would have better because this graph needs to have due dates, hyperlinks, file uploads.


3. UML diagram explaining how code integrates with each other would be of great help."
0,UML diagrams are missing
0,The diagrams are okay but I think there are much space to improve.
1,"1. The design document has a very good description about the problem requirements.


2. The document does not have any diagrams which show the flow  of implementation.


3. There is no information regarding application flow is missing. I would suggest you to include this particular daigram. Because it helps to understand what exactly you are doing in the project. 


4. The important use case diagram is missing."
1,"1. The description about the problem requirements is written.


2. The source called credly has been mentioned which they will be using for the most important part of the project.


3. All the functionalities are properly explained in the document."
1,"1. The authors have explained the design clearly in the all the sections.


2. The diagrams are always better because they are self explanatory. I would suggest you to include the diagrams.


3. The description is easy to follow and is adequate."
1,"1. The authors have described the problem requirements properly in the requirement specification unit.


2. The authors are clear about the methods and where to add them.


3. The design is simple but again there are no flow diagrams which can explain.


4. I could not find any information regarding the response time of the system in the document.


5. The team should spend more time to analyze each and every requirement and also to make some UML diagrams."
1,"1. The images are included in the preliminary mocks section.


2. There are no diagrams at all to check for the helpfulness.


3. The diagrams are necessary to help understand the project. I strongly suggest you to include the diagrams.


4. No UML diagrams are present in the document."
0,Many blank titles have been added to the document without any explanation whatsoever.
0,Only the basic requirements of the project documentation are discussed.
0,The explanation only discussed what is given in the documentation. Some more explanation could have been given towards possible implementation methods which would have made the documentation easily understandable.
0,The design talks very little about the implementation of the project.
0,No Visual aids have been provided to explain project other than the badges the team is going to use.
1,"The problem description explains clearly about the feature and it was very easy to follow and understand.


However while going through the document I realised that similar content is provided in all the sections like Project description, Problem statement, requirement specification.


So the order can be changed to Background, Problem statement, Project requirements and all the above content can split and put in these categories. That way the flow of the document will be nice and easy for readers.


In the requirements, the files to be added are mentioned. So those files could have been listed under Files Modified/Added section rather than leaving the section empty."
1,"The entire functionality provided in the project description is covered in the document.


The author can include the files involved section in the document which was given in the project description."
1,"the changes to be made are very well explained. They have split the tasks in various sections which makes it easy to follow. However for certain points, a small explanation can be given below that as to why they are doing this task and why the db needs to be changed or UI needs to be modified for this."
1,"The topic says lgithweight badging system but how I am not able to understand how it is lightweight. Because it will take time for all the images to load for the instructor as well as the student. So if the response time should be maintained, you can provide some explanation for that."
1,"There is no UML diagram or flowchart provided. The badge icons are included, but where exactly they plan to place the badge in the instructor view and in the student view can be shown by taking a screenshot of existing view and adding these icons or showing arrows for their location. That way it would have been very easy for the reader to understand."
0,"Design doc gives us the brief information about what is the requirement of this project but it does not tell us about how team is going to implement those changes.


Testing plan is not included in the doc."
1,"Design incorporate all the functionalities which are required, but it does not tell us about the testing plan."
0,"team has not proposed any changes which they are planning to do. Design doc consists of only requirements, Project description. nothing is mentioned regarding proposed changes."
1,"Team has not proposed any major changes that need to be done in this project. 


So I cant comment on the methods which they want to change in particular class.


Design changes explained by team are not complicated.


Cant comment on the response time of the system."
0,team has only mentioned the preliminary mocks for the different badges. Except that there are no visual aids in this doc
0,Most of the document is incomplete
0,No functionality written
0,The author hasn't proposed any changes
0,No design proposed
0,no Diagrams included
0,Well the understanding of the project is good but there is no test plan and more importantly the action plan is not clear like what modules and methods need to be changed.
1,More description as to what are modules and methods will be added and why they are needed and maybe a brief of design patterns which improve the design.
1,"Adequate explanation is given for program description, current work and the work that is needed to be done."
1,Badges required are given properly. They can try to add uml diagram of flow diagram to better explain the design plan or action plan.
0,The design document is incomplete. Only the subheading are added. The actual plan of work is not mentioned
0,All the required functionalities are mentioned
1,The content is easy to follow
0,Design should be refactored to consider the use of existing gems
0,There are no visual aids provided.
1,"The details of project purpose and design plans are clearly specified. However, they have not explicitly stated the files that will be modified and testing plan. They can include a class/ UML diagram to represent the relationship and structure of the classes."
1,Most of the functionalities are specified but they are not detailed as in they haven't explained the designing pattern.
1,Explanations are provided but using proper subheadings and diagrams can make it easier for user understanding.
1,Explanations are properly provided but no specific implementation is explained.
1,They have provided the table names but they need to add UML diagrams and a visualization of tables they will create as it becomes easy to follow.
0,I see that the wiki contains the page copied from the projects document page nothing else is added.
0,"As mentioned I see no details in wiki, how you implement, Use cases, tests etc"
0,I see no changes proposed to tackle the problem
0,Please go through the additional comments to see the expectation of wiki page
0,As mentioned no UML diagrams
0,"No design at all mentioned in wiki page.


I want to give some suggestions:


1. There are different tables that need to be added. Show a UML diagram how these are related."
0,"The author had exactly copy pasted from google doc. So there is nothing much to review.


Suggestions:


1. Add a description on top of the page which explains brief background about the project.(project purpose)


2. it seems there are 5 issues in your project. add problem, solution and design for each issue so that it makes easy for the reviewer to review.


3. Some functionalities like ""badge should be configurable"" can be tested with RSpec. Add a test plan section for each section"
1,"The wiki does not have any explanation at all.


I am trying to give some suggestions.


1. explain your solution clearly in solution section of each issue.


2. add pictures of dummy tables in the design section."
0,"1.No methods are added in wiki at all bu author). My suggestion is also to add code in solution section of each issue so that it will be easy for reviewer to understand the code.(add method(s) to a wrong class


2. Add UML diagrams, Dummy tables, and screenshots so that design won't look complex.(new designs look complicated)"
0,"the team had copy pasted the images also from google docs which does not seem good at all.


As suggested


1. Add dummy tables ""badges"", ""assignment_badges"", ""awarded_badge"".


2. This project has completely new functionality so adding a UML diagram of whole structure will be helpful."
0,There are a few missing sections in the design doc
1,"The author finished part of the project and posted it in the design doc, there are some other parts still need to implement, e.g. the file changed, and work completed part."
0,"After checked the final project doc provided in syllabus, I think the author posted every requirements  in their design doc, which is a very good job."
1,"Because the author didn't post their implementation part, so I can't know what they have changed."
0,"In the  project requirement part, the author post idea of the design of database, including added the primary key and foreign key, I think these changes are no problem."
0,"In this current version, there are no many visual aids available."
0,Files to be modified is remaining
0,"Yes, almost all functionality is covered."
0,Well explained.
1,Some of the problems could be to elaborate more on number of files to be changed.
0,No UML diagram present
1,Project is described well. Test plan is not complete.
0,The functionality is completely covered as mentioned in the requirements
0,All the feature requirements and approaches are explained adequately
1,The approach seems to be good in terms of DB. UI could be refactored a little
0,No UML or use case diagram or screenshots are provided. Difficult to visualize what is about to be developed
1,"the project is a continuation. 


the current design document does not have much content. 


so many headings are there but there is no content under them yet maybe because implementation has not started."
0,"yes it shows the description along with requirements of the project. 


they are stated clearly."
0,"the explanation is very easy to understand. 


the preliminary mocks help."
0,the design is very good and hows whatever is required.
1,"there is only a preliminary mock used. 


there could be a flow chart used to make the design more visually appealing"
1,"-The Wiki page look good, which explains what is the project about


-But there are no screenshots


-There are no UML diagrams


-Didn't describe what files and tables to modify"
1,#NAME?
1,"-They haven't written much in wiki page, can't judge the overall explanation


-The same is present in the google document"
1,"Design proposed is not complicated but a bit broad. The first task states that they found where the problem is, but their approach isn't well explained."
1,The authors have presented what methods need to refactored. They have given an overview of what that refactoring will eventually lead to. It would have been easier to understand if the team had explained how that refactoring will lead to the desired results or how they plan to go about it.
1,The authors have provided just a very narrow solution. Instead of just attaching the code snippet they should have explained it in more detail.
1,The solution for the problem is very easy.
0,Some visual aids need to be added to make the doc more understandable.
0,The design looks a bit complicated as there is no UML diagram.
0,The design doc does not contain any UML diagrams. So it is not easy to understand the design easily.There is no test plan in the design doc.
1,The functionality seems complete to cover the requirements for the project.
1,The changes seem fine in accordance with the requirements.
0,"The team has not given any visual aid in terms of a UML, use case diagram or architectural model that would have helped the reviewer to review better."
1,The team has listed all the scenarios that they are going to cover and the approaches that they are going to use in order to do the same. It looks like a good start in that perspective.
1,"The team has given some thoughts on the list of metrics which can be used, which is appreciatable but could have better explained why they are using it.


For example, They can have cited few actual scenarios where the metrics they mentioned are currently in use."
1,"The design Doc is almost perfect. The code snippets of the current implementation shows only the model part of execution. They team could have added a section about all the controllers and views that are also going to be effected to change or if they think no changes are to be done on that, even that could have been explained."
0,"The team could have added details about their test plan. Also the key concepts of Design principle, Design Patterns though are present in the document needs to be highlighted enough as they are key portions of the design doc.


Example: The team could have added them to separate sections or bolded them out."
0,No visual aids used other than code snippets.
1,Design seems to be adequate.
0,The code is mentioned however no description is given. SO it is hard to follow.
1,COmplete functionality mentioned in detail. Please mentioned a proposed test plan.
1,"The document has been written very well. However, the required submission is mentioned as a wiki page. Please take care of that in future."
0,"The purpose and design are stated completely along with the model improvement, but the test plan is missing and hence the document is only partially complete."
0,The author has failed to provide any visual aid with which understanding the project would become easy.
0,Most of the details are explained well. Test plan was not included.
0,"Only tree_display/list example has been given. So we are not aware of what functionality is being looked upon in other 3 use cases





2)expertiza.ncsu.edu/review_mapping/response_report


3)expertiza.ncsu.edu/grades/view


4)expertiza.ncsu.edu/users/list"
1,"The example given tells about the aim but does not cover how exactly they will achieve it. For example, the document just talks about reducing delay, minimizing SQL calls but have they explored if it is really necessary to make those calls or in reality its possible to reduce calls. We are provided no data on that. For now its just being assumed that they can reduce calls."
1,I think the in depth analysis is required whether what they are thinking is possible or not. They should provide an example as in if they can reduce SQL calls without affecting the functionality.
0,The visual aids are appropriately used.
0,"The design documents includes the project purpose, project design but is missing the testing section. They should include how the team plans to check the refactored code to check bugs and if any existing functionality breaks by adding this refactoring. Even if there are existing tests present which will automatically check their refactoring, I think they should mention it in the wiki page to clarify."
0,Yes the design incorporates all the functionality which is basically identifying the pages decreasing the performance of Expertiza. The team seems to have followed it well.
0,"The authors have only mentioned what code they will change, but haven't mentioned the changes they will make, so can't really judge if their work will make the code smelly or violate the DRY principle or things like that,"
0,"At most places, the visual aids have been used well in the favor of the team, they have explained them well. I felt the explanation of the first visual aid (Flamegraph statistics) could have included more details, it was hard for me to follow. The author could probably have mentioned how the graph is displayed and what the various terms mean."
0,"The authors have included project purpose as well as project design and described it thoroughly. However, I couldn't find any test plan in the design document. They have proposed a solution however they haven't mentioned how they are going to test it."
0,The authors have incorporated most of the functionalities as mentioned in the requirement document. However they have yet to incorporate test plan in design document as well as UML.
0,The team has proposed a solution which they believe will reduce the cost overhead incurred due to many SQL query calls which results in delayed response of the controller. They have also explained using code snippets which further helps in understanding of the problem.
0,The code that the team plans on incorporating are profiler gems that will not affect the original code in a significant way. The team should try to successfully reduce the lag time with the proposed solution then they would get full points.
0,The graphs used certainly help in understanding the problem a lot better. The team should also try to add UML diagram and test plan in their design document.
1,"Exceptional work.  You guys seem to be 75% done with your project already!  The majority of the project requirements are outlined in the design doc.  There still needs to be work done on the actual refactoring of the code identified as the cause of lag, but I imagine this is still pending.





Is a Test Plan section appropriate for this project?  If so, consider speaking with your mentor about the best way to test, and include a section in your Wiki about it.





Also, I am not sure how much you guys are planning on tackling in terms of refactoring, but it may be helpful to specify which of your fixes apply to which pages ��� e.g., does you your proposed changes improve load times on expertiza.ncsu.edu/tree_display/list only?  Does it affect the other three pages outlined in the project description?  More info here would be helpful."
0,"The design is only missing the actual details of the planned refactoring of the code that has been identified.  Otherwise, all functionality outlined in the project description is included."
0,"The low score here is only to denote that these changes have not yet been proposed.  The team has identified some of the code that will need to be changed, but still needs to decide how exactly the refactoring will be performed."
0,Please see the note above -- the only reason for the low score here is due to the in-progress status of the work.
0,"Overall, the visual aids are very helpful.  It would be helpful to edit the screenshot of the flame graph to make it more understandable (i.e., even with your descriptions I was not able to see how it showed that the controller was slow).





I would also recommend cropping the screenshots that include the MiniProfile boxes and making them larger so it is easier to read.  Again, marking up the screenshots with circles or text will be helpful in understanding what is being viewed."
1,Test plan is missing in the wiki page. Project Design is missing in the wiki page. The authors should include these important missing part.
0,The project design is missing in the document. The authors have included the proposed solution but it should be more comprehensive rather than just attaching the code snippet.
1,The solution looks pretty straight forward. They just need to refactor few things in children_node_ng
0,"The authors have failed to provide any UML, class diagrams. They have not mentioned the use cases as well. I hope they will soon make the changes in the wiki page."
1,"The design doc is quite completeness, structure is plentiful and involved each step of their work, but the weakness is that they did not describe clearly for the task content in the first part of Task Description, reader can not get the main idea of the project at the first glance of the description, btw they should give an explanation about the proprietary words they use otherwise readers will have no idea of that, also they did not include the test plan in their doc."
0,"The design doc has involved completely the requirement mentioned in the topic sheet, they also introduced their idea about how to improve the performance of the specific page as well as gives some basic code, which is quite wonderful."
0,"The team gives adequate explanations about the way they did the work, full of details of every step with vivid picture of the performance."
0,"They provide some of the basic codes of the way to improve the performance of the page response, i did not find any complicated codes needs to be modified, the basic code they give for the first step to give a change."
0,"they give many screenshots for the appearance of the page, as well as some explanations about the graph, i did not find any unreadable diagrams in there wiki page, quite a good one!"
0,All sections are impressive. Sadly the section of test plan is missing. This project would definitely require an automated test plan.
0,All functionalities addressed.
0,"The team has already solved one of the tasks it seems. Yet, the proposed solution for the second task is a bit vague to me. Refactoring of code can happen from various angles. Please mention what exact features you want to refactor in the code snippet present that actually reduces the time time to load the page."
0,Visual aids are descriptive.
0,"The details of the project tasks have been mention well, but no test plan has been shown."
0,yes all has been covered
0,"Most of the work has been well explained, maybe which pages to be optimized could be done much better, as there's a lot of scope to do so."
0,Author did good job. They included proposed solution as well.
0,"Yes, Design incorporate all the functionalities"
0,Authors provided good explanation to the changes they have proposed.
0,Authors plan seems good. They used good approach.
0,Visual Aids are used properly . Authors provided enough details.
0,"The details of project purpose, design, and testing plans are very clearly stated in the doc. It is easier to understand the purpose of the work, I like the Analysis section provided by the author to provide a visual representation of the problem."
0,"Yes, the team has included all the functionalities required to be implemented as a part of the project. I like the project description provided in the document, it already has all the small changes required to be done as part of this project."
1,"I appreciate that author has provided the list of the file needs to be modified and provided the details of analysis done by the author. After reading the write-up, though I know the problem and the details of the functions causing the issue, I am still not able to figure out the solution to the problem. For example,  update_fnode_children method is one which is causing the issue and needs to be refactored but what exactly needs to be modified and how that will improve the performance. I believe this will be included in next submission."
0,"I believe that this part can be better graded as we move ahead and start working on our implementation. Still, if possible now, I will suggest if an author can provide some structure of the code which an author is planning to refactor."
0,"Author has provided enough visual aids in the section ""Analysis of page"" to understand the purpose of the work and the problems related to it."
1,It would be more helpful to label and explain further into the FlameGraph;
0,expands further on the approach for solution
1,Test plan section missing
0,It captures all the required functionality
0,changes are explained comprehensively
1,tmp_res is not an apt variable name
0,visual aids used help understand the design better
1,Test plan is not given in design doc.
0,The design for the project is missing. They have only stated the problem statement.
0,The author have not detailed out the solution. It would be better if they give more details.
1,The author has not provided any UML diagrams.
0,"The project purpose of improving page loading is clear, also design pattern and testing plan are included."
0,The project description follows the requirement about identifying the Expertiza pages needed to be improved and solutions.
1,"The approach part explains how they using flamegraph generation method and statistic to identify loading time. However, the most important solution part is skipped, this section needs more specific explanation."
0,The authors mention how identified component causing the delay.
0,"The design processing is clear, but visual aids is missing. It would be better to add some UML or User Case Analysis."
1,"Everything else looks in order. However, the writeup is missing the part which describes the project purpose. When that is added, the design doc will be complete."
1,The design doc specifies which files and tables need to be changed and also includes the test plan. It looks good for now.
1,"The authors have mentioned what they'll be changing, but have provided few explanations. Detailed explanations will make the purpose and the approach clearer."
1,"For now, none of the designs look like they would make the code smelly, or the response time might increase. Looks good for now."
1,"A couple of images of the badges were included, but no other diagrams like UML diagrams have been used."
1,Limitations to the current system is missing. Project purpose was clearly mentioned in proposed plan. Description of Badges is very important section and it was written very clearly. System overview/ Project design section is not mentioned. But it's contents are partly covered in other areas.
1,"There is a ambigous term Teammate. In one sence the document says that a best member of the team will be awarded a badge of ""good teammate"".


In other sense, it says review other's work. Then the best reviews team will be awarded the badge. So it didn't sound clear who will receive the badge."
1,"The proposed changes are very clear. Only a diagram representing flow of the proposed plan will make the design document more clear and comprehensive.


A system over view section can be added briefing about the project overall."
1,The design looks proper and it's not going to be smelly according to the description in design document. The proposed design looks good enough. Need not spend more time in designing.
1,"Only figure showing 'edit' and 'teammate' are shown in the document. No use case/UML diagrams are shown. Adding a flow chart with nodes like ""add a badge"" and showing actors with permition to access nodes will make the design document more clear."
1,"The document could have been formatted in a better way, also does the project involve building only 2 pages? If so, I do not think it is sufficient work for a group of 3-4 people. They have given sufficient explanation regarding purpose but given no design from an implementation perspective. Test plan section is present."
1,"The design has considered all the required functionalities. 


The authors also have explained what exactly needs to be changed, and their plan for accomplishing the said tasks."
1,Write up is with little to no explanation regarding how their implementation design would look like or is their implementation really is lightweight(Some comments on this)? Overall inadequate writeup.
1,"Mock-ups for badge present, no information of how the code will be implemented, i.e., reusing existing code or completely rewriting. The former is preferred as the latter may lead to smelly code and would involve more rigorous reviews. As a new DB is being added the response will increase, how will this affect User Experience? Thoughts on this would be appreciated."
1,The team could have used additional visual aids to convey their information much more effectively. None of the aforementioned aids were found in the document.
1,"The project purpose, design and testing plan is provided by the authors. However, they have not introduced other important aspects like introduction about Expertiza"
1,The authors have gone through the design document completely and have given the to-do things as is in the requirements document. If they go through the minute details as to how they are implementing it would have been much better.
1,The explanations provided are too abstract and small to follow how the authors are going to implement the changes. They should add more content and explain how they are going to implement it.
1,I think that the team needs to expend more time on the design and write to-do steps after discussing with mentor so that their work is elaborated.
1,The team has used very few diagrams and that too of the badges which they are going to implement this semester. They need to add UML diagrams and a visualization of tables they will create as it becomes easy to follow.
1,"The design doc includes the appropriate headings but fails to explain how they arrived at what changes they are making in tables and why they chose that design. How they are connected. For someone who has not explored the functionality, it is tough to understand this."
1,The idea of assigning badges is pretty straightforward. So I do not think they have missed anything noticeable but again the connection between various changes they propose to make is not obvious. So I cannot comment on how far they have thought about the design.
1,The design incorporates many things but they are just straight forward statements which only the team working can understand. A little bit explanation for each point is required. For example :- what exactly the new method do that they are inserting and how they work together to make the functionality work.
1,"I feel they should expend more effort in the schema design. I do not understand why they have chosen three tables. According to me, one table should be enough that should be indexed along the reward type and existing tables should be modified to add a column with the boolean variables. Again, they have not explained very weel why they chose this schema, so I might be incorrect there."
1,No diagrams for flow of control or how the classes are related is given. That could be added here.
1,No UML diagrams or expected screenshots on how the badges will look like on the page.
1,Functionality wise the doc covers all the requirements
1,Explanations are properly provided for the proposals. But lack of diagrams make it a little bit non intuitive.
1,Visual aids are completely missing. Screenshots of the webpage with badges is expected.
1,"The details of project purpose, design, and testing plans are very clearly stated in the doc. It is easier to understand the purpose of the work, I like the idea of including a section like "" Description of the Badges"". One suggestion, Since I can see additional classes and models coming in as a part of this project, I will appreciate if an author can include a class diagram to represent the relationship and structure of the classes."
1,"Yes, the team has included all the functionalities required to be implemented as a part of the project. I like that author has provided enough details about the models needed to be added as a part of this project. One suggestion, the document shows that some team has already done this project and it was rejected because of some reason. It would be a good idea to include some details about the work done by the other team. Like what was their approach and how things are done differently this time."
1,Author has provided enough details about the proposed changes and I like the idea of the addling one-line description of what changes needed to be done as a part of a modification of each file.
1,"I believe that this part can be better graded as we move ahead and start working on our implementation. Still, if possible now, I will suggest if an author can provide some structure of the classes, which an author is planning to implement."
1,"Though an author has provided enough details about the changes to be done as a part of this project, and since I can see additional classes and models coming in as a part of this project, I will appreciate if an author can include a class diagram to represent the relationship and structure of the classes."
1,"The design doc covers all required parts. However, I think the project design part needs more details. The authors need to give us more details about what kind of code they are going to insert in those files."
1,The design incorporated all of the functionality required. But more details are needed.
1,The authors just gave us an overview about how they will make the changes and they look reasonable. More details would be helpful.
1,The authors did not mention the specific implementation. So I cannot know if the new code will make the code smelly or not.
1,There are two pictures of badges which look good. More visual aids like UML diagrams would be helpful.
1,Under files to be modified.  I think the student view should also be modified. Since the student who receives the badge should also be able to see his badge when he logs in.
1,"Yes. They have covered all cases mentioned in the Documentation. In fact, except for the Test Plan, they have written exactly what is there in the Requirement document"
1,"""In Expertiza students are required to give reviews to the work of other teams."" This is wrong since the Good Teammate badge is awarded when one is giving the teammate review, so this line should be removed"
1,They have not mentioned about the methods.
1,They have added diagram of the badges.
1,"Explanation of why only two why two badges would be created is not documented well, there could be possibility that more badges can be created."
1,Yes according to the design requirements all functionality is incorporated.
1,The heuristics of how the badge will be assigned to the student is not addressed. Is the project only dealing with nomination or will address the issue of assigning the badge.
1,Almost same as requirement document. Nothing much useful is added.
1,It includes all functionalities.
1,All changes written on the wiki is given the requirement doc.
1,It might have performance issues similar to the previous team. No changes are explained clearly.
1,No UML diagram or mockups. The icon does not help in understanding anything.
1,"Authors have came up with the good design document with good amount of information regarding their project and design. However, I feel that they could not come up with the actual design. I somehow could not find the difference between the actual problem definition and their design. I found the same information in both of them."
1,"The team was able to cover all the functionalities in their design document, and they have done good job in giving attention to details."
1,"As I said in the first review comment, I could not actually find the design proposed by the team in the design doc. So I am not able to assess the quality of the design."
1,"As I said in the first review comment, I could not actually find the design proposed by the team in the design doc. They have mentioned that in which files they will be doing changes but, they have not actually mentioned they what changes they will be doing."
1,"The team has used visual representation of the badges that they are going to use. However, that does not contribute toward explaining their design. Team has not used any other visual aid. I would encourage the team to use some kind of visual aids for the final submission of the design document."
1,"The total design doc is very neat. Good job. But I think this doc lacks the project purpose and project design parts. What�۪s more, some mockups of screens are wanted here, I recommend you add them to your doc."
1,"Yes, all of the functionalities described by mentor are written in this doc. But some explanations are wanted here"
1,"Changes seem good here. But lacking explanation makes me hard to understand your changes. For example, you can add some comments below your file that you will change."
1,"There are some new tables designed in this project, which is reasonable. But I think some methods should be newly added for realizing the badges, which is not mentioned in your doc."
1,"Two badge pictures are very good. But UML char, flowchart, mockups of screens and tables are not written in your doc. So It's hard to understand your doc deeply."
1,"The design document could also contain a few more details like the system design, use cases, screenshot of the views that are going to be changed, students aspect of badging i.e. where will the badges appear in the student profile."
1,All the functionality required has been covered in the design document.
0,The proposed implementation mentions the files that will be changed. I think description about how the particular use case will be implemented can be included along with the screens that will change for both the instructor and the student.
1,"I could not find any design proposed by the team. The files which will be modified have been mentioned, which gives only a little idea about what could be the possible outcome. Example: student_task/list page should mention which page is being referred to, along with a screenshot or a description of how to reach that page."
1,"Visual aids present are the badge icons that will appear in the application. However, the UML diagrams, screen mockups are missing from the design document."
1,They have described everything in the design doc very well. They have even explained in  detail about their description
1,They could have added screenshots/UML or system design for better understanding to users.
1,They given in detail explanation . about the changes they would propose along with what files they would change.
1,They have even  mentioned how they would make changes that would follow DRY principle also no existing gem file could simplify them
1,They could have added the UML diagrams or screenshots to improve the design doc.
1,"I see the project purpose in ""Problem Statement"", project design in ""Modified Files"" and test plan. Just the name of ""Modified Files"" should be changed into ""files to be modified"" since there are no files modified yet I think."
1,I think the team explains the change pretty good. I totally understand what are they going to do.
1,No diagrams.
0,"The design document ins complete and includes all the features like test plan, project design, project purpose, possible extentsion. The use case diagram helps us understand the project better. but can mention the files need to be created"
1,The document is good but test plan is missing
1,"On their wiki webpage, they described the introduction for the background of Expertiza, the definition of the problem, the scope. Next, they mentioned the requirements of their project, the use cases that they will face, the database design they will use, the diagram of classes they designed for implementation, and the design practices for their projects. For me, the completeness of the design doc is great enough."
1,"The design docs is great and captures all the changes that need to be done in detail. I however expected to see additional visual aids such as screen shots for the proposed changes, that way I can visualize how the design document implementations look like.





Check some formatting issues and fix them. Like this one -  The writer clicks the ���Upload paper�۝button. Remember the space after the close quote mark, and after full stops, commas and so on. Makes a great article."
1,Testing plan is missing or its not mentioned whether its required or not for the project.
1,"I think for the current design doc, the use case part is good, it's complete and clearly, but other parts are not as complete as use case, I think the author needs to improve other parts."
0,I don't think this design documentation is completed because the only thing I see in this document is use cases of the project. Important topics such as project plan and problem statement are missing in this project. It is difficult to deduce from the use case what the project is all about. The use cases have been written very well.
1,The authors have done a good job in the project design document but have failed to include testing plan which they can do it before 2nd submission.
1,There's no test plan.
0,"Testing plan, project design missing"
1,Test plan could also be mentioned.
1,"Everything seemed complete, with visual aid supporting your design, requirements are listed.  Designing practices are listed, but can be explained in more detail and add some edge cases in this project"
1,The team has properly covered design doc but they have failed to provide test plan for their project.
0,Use cases are clearly mentioned
0,"All 3 requirements are incorporated in the design documents. However, an improvement could be to write one or two liner descriptions for each."
0,"In the requirement section, they gave us some ideas that the problems they are going to face. And next, they gave us some use cases that they might face in this project, and some database designs and class diagram that they will use to deal with the problems they mentioned in the requirement section. However, although with this information, I still have no idea how they are going to implement their solution with these use cases, database designs, and the class diagram for the requirements."
0,"As it is, the design document incorporates all the functionality proposed. It is aimed and extending the scope of assignments from just regular class assignments to other types of submission and I think the team has implemented that well."
0,"In the final project requirement doc, there is a description as follow:





There is considerable latitude in designing a UI.  Perhaps a particular ���course�۝ or ���assignment�۝ should be designated as a classroom or professional activity, or perhaps there should just be a way to select how to submit and how to review.  The team and the mentor can discuss this and make a decision.


In the design doc, I don't think the author mention it."
0,"Yes, this project does incorporate all the functionality as specified in the google document. The use cases cover all these functionalities but there has been no tasks or plan of action specified to let a reviewer know how they are going to go ahead with this project."
0,Yes the authors have provided all the functionalities required in the design document.
0,"All stated in ""Requirements"""
0,All aspects covered
0,Problem definition is mentioned well. However the background of the requirements are not in detail as mentioned from the topic list. Review bidding has been moved to E17A7? That point is not clear.
0,requirements can be more specific
1,No changes are proposed. Only the requirements are documented.
0,"They gave us lots of information, such as use cases that they might face in this project, and some database designs and class diagram that they will use to deal with the problems they mentioned in the requirement section. However, although with this information, I still have no idea how they are going to implement their solution with these use cases, database designs, and the class diagram for the requirements."
0,"The changes are adequate and the explanations are clear and concise. The explanations are easy to understand. Too much use of etc. Try to limit that especially in a design document that is meant to be complete. If you have to list fields, list all of them."
0,There are no explanation given regarding the tasks to be performed. Just by specifying the use cases it is difficult for me to gauge the quality of explanations. I suggest them to add a plan of action and a design component so that they can be more explicit in their documentation.
0,"Authors have failed to provide proposed solution, testing plan. The information provided by the authors is not enough to understand the work they intended to do."
0,"It's all stated in ""Database Design"" and ""Class Diagram"""
0,Very well covered changes
0,Actual sample code is not given. The description seems adequate. DRY code to be followed during coding.
0,"Need more explanation not just listing 3 steps.  When you mention Try not to violate DRY principle, How?"
0,The author has not provided the solution that they will use and the test plan
0,Not much information is provided upon the design and thus a proper review can not be provided on the design
0,"There is no design proposed, only functionalities are explained with diagrams"
0,"They offered a couple of concrete ideas, such as use cases, the design of database tables and the class diagram to show us how these classes interact with. In the end, they also offered the design practices that they will follow. These thoughts for me are clear and make sense to me."
0,"The table for contributors has some non-conventional names like Contributor Id and Paper ID. Keep these consistent with Ruby standards and use underscores instead of spaces and keep the type lowercase. A lot of field names have a similar problem, like Name and Description. While I think Rails may actually fix some of these for you during migration, have then presented well in the design document. You have already indicated this in your 'Designing Practices', yet not implemented in your UML."
0,"for the current version, the author just talk about the design of database, so there are nothing for specific implementation description, I can't give any advice of it."
0,Currently I do not see any wrong methods added to classes and no code looks smelly. The design is simple and sleek and won't disturb the rest of the project. The class diagram also seems to be compact and will be integrated easily.
1,"Nothing is mentioned about the authors plan to add methods, class or change any logic in the code base. They should include these details as soon as possible."
1,No design offered
0,more effort should be expended on the design especially in the designing practices part of the project.
1,"Nothing mentioned about changes to the code thet will be done to class methods variables, etc"
0,Mockup screens are missing but provided good use case diagram along with class diagram
0,Only database design and class diagram are drawn. An improvement could be to draw data flow or sequence diagram
0,"They drew the use cases, database designs and the class diagram for us to understand their thoughts and the solutions easily.  From the use cases, we can easily to understand what actions might occur between the presenter and reviewer, such as signing up, adding contributors, creating a submission, uploading paper, reviewing submission. For the database design, we can see how they designed the table for Paper class and the table for handling with many to many relationship between contributors and paper presenter. For the class diagram, we can see the relationship between User, Presenter and Paper class. As a result, the visual aids they offered are useful for me to understand the ideas."
0,"Adequate visual aids, but I still expected screenshots."
0,The link between user login/sign up to upload paper is missing.
0,"I think for the use of visual aids, the author did a good job, for database design, they draw the different table to explain their plan and give the class diagram for explaining the relationship between 3 class: user, writer and paper. As a reader, I can easily understand the objective of author's job."
0,"This question is only based on the class diagram and the use case diagram. The use case diagram has been explained brilliantly. All use cases have been covered. The class diagram is also self-explanatory. However, they could have shown a diagram which indicates the flow of control."
0,The best thing about this project document are visual aids provided by the authors. They have provided UML diagrams to demonstrate the working of the application.
0,"Yes, there's a class diagram and a UML diagram in use cases which are very helpful to understand."
0,All diagrams are easy to understand
0,UML diagram is descriptive.  Static html page could have been created for better aid.
0,Visual aids are very good and make it easy t understand.
0,The team has fully incorporated functionality.
0,All of the requirements are listed.
1,"for the current version, the author give a good explanations of changes."
0,"There is a test plan provided in the wiki which covers manual as well as the automated testing part of the project. In the automated test cases part, the authors have provided how they aim to approach the test cases."
1,"The team has proposed solutions of all the problems in their design document. So from the visual description it appears that the design is very simple to follow. Team has missed to mention the actual implementation details, so it's not sure whether the design is actually simple."
0,"This wiki first gives clear definitions for the 3 problems:


1. Implementation to see self-review scores juxtaposed with peer-review scores. Design a way to show them in the regular ���View Scores�۝ page and the alternate (heat-map) view


2. Implementation of the methodology to combine self-review and peer-review scores to derive a composite score


3. Checking if the author has submitted the self-evaluation(s) before seeing the results of their peer evaluations(already implemented).





Then it uses an application flow and a use case diagram to describe the design of changes on the system. The wiki also provides descriptions for the diagrams. 


In this section, it is difficult for me to determine which problem this design is aimed for. It seems this section is about problem 1 and 3.





I suggest that you should explicitly indicate which problem this design is solving and how.





After that the wiki briefly introduced the database design. It is too simple to explain this change.





I suggest that you should explai"
0,"According to the assignment document, 3 main designs are made: 


1. It should be possible to see self-review scores juxtaposed with peer-review scores. 


2. Then implement a way to combine self-review and peer-review scores to derive a composite score. 


3. The author(s) should be required to submit their self-evaluation(s) before seeing the results of their peer evaluations. 





From the description and diagram provided in the wiki, I can see that the design is able to solve the problems stated in the first section. 


This wiki also provide the logic design on the score composition algorithm.





But the wiki doesn't talk about how they are gonna to implement it with code, so it's hard to tell whether it follows appropriate principles or using appropriate patterns. 





I suggest that you should provide your code design for each function design so as to show the principle or design patterns you used in your design. For example, you could use a class diagram to show the architecture of your code."
0,The team has added strategy pattern to decide the change at runtime. Also the design allows for a little modifications to run a new variation of mutation test.
0,The design is clear and tackles the specific problem statement mentioned and the steps seem clear enough.
0,The author has clearly written the problem statement and explained where ever necessary. And necessary figures and flow diagrams have been provided for further understanding.
0,Class diagram has been added where necessary and explained in detail.
0,There is no test plan as the project it self is about testing the existing test scripts.
0,"In my opinion, the design they provided sounds reasonable. They mentioned the problem of the existing mutation testing, and next, they mentioned their solution of the problem with several code blocks, a graph of execution flow, and the design pattern they are going to use in the project, which is the strategy design pattern."
0,"Compared to the last submission, the completeness of the design doc is great: the write-up contains a short description, the introductions of several terminologies such as Servo, Rust, Web-platform-tests and Mutation Testing, detailed project description such as setup, steps, strategy, execution flow, design pattern and testing. However, there is something I felt they missed, for example, I still don't get what purpose is for this project. Maybe they should put more focuses on the purpose of the project, such as why they need to do this mutation testing? Is it for the performance or for finding bugs? Maybe they should mention about what they can acquire from the mutation testing. That would be a great help for us to understand the goal of their project easily."
0,"For their design pattern, they chose to use the strategy design pattern, which can help them reduce the redundant code when facing similar but still different situations. And their execution flow clearly shows us what situations their program will face during running and what decisions it can make to go through different results. Also, they offered code blocks to show us their solutions, which for me are simple enough to implement."
0,"They offered the reviewers a clear execution flow graph, the UML design pattern to describe their strategy design pattern with relationships and functionalities inside. In addition, they also gave us some code blocks which include their implementation of the project. This also gave us another concrete view of the solution of their project."
0,The design includes a test plan. It consists of the steps that would be tested in the RSpec tests that the author aim to write. These look good and it seems like that these steps would help to perform good testing.
0,The design looks good to me. The authors have also provided the principles and patterns to be used.
0,"1. The changes the authors have proposed are relevant and sound enough. 


2. The authors have clearly written about the existing issues or the limitations. 


3. The authors have included the refactoring steps and the implementation information which is really good. This gives the information about the principles and the methodologies the team is going to follow. 


4. Overall, the document has good explanations and is of good quality."
0,The team has chosen an appropriate design and aim to reuse the existing code.
0,"The design looks good and by using proper explanations of the design patterns used, it becomes lucid for the reader to understand."
0,"Yes. In their project, they plan to use MVC and DRY pattern. But in my opinion, there are some other patterns you also need to use. For example, Test Driven Design is a good approach to accomplish your project. If you will use it. It's better to write this in your doc."
0,"The design appears to be sound, and follows all the appropriate principles."
0,"Design seems to be good and they are not creating any unnecessary file and also they have divided their tasks into front end, db refactoring, etc which suggests that their approach would follow MVC structure and would be DRY."
0,"Their design appears to be proper and they have taken into consideration to avoid making the code ""smelly"""
0,"Very good test plan! All of the features mentioned in the design doc are written in the test plan. This test plan has 3 part, instructor, TA and students, good design. But I think this is not a completed test plan. For example, In the last line of your test plan, you say to test the varying-rubric-by-round feature, I think some detailed steps are needed here. How to test this feature?"
0,The test plan is pretty comprehensive.
0,The test plan seems to be good but it would have been better if edge cases would have been handled as well.
0,"I'll have to repeat one of my statements that I have already used before but it clearly explains the question.


The design seems to be very clear as the use of proper flow charts that cover almost every possibility like whether something happens or not and what would be the corresponding result for that which makes the design very simple to understand and the reader can easily comprehend the flow of the design using this flowchart. The presence of UML diagram helps in presenting the responsibilities of the student, instructors and TA's even more effectively."
0,"I have to say very good job team. You have mockups of screens, UML chart, and process flow chart. These diagrams help me a lot when I'm reviewing. But I suggest that you should add some mockups of Database table you will modify. These mockups of the database tables will help your team to work smoothly. For example, you will change ���calibrate_to�۝ field in the response_map table to ���expert_review_to�۝. You should draw a new table for the response_map table after changes."
0,"The team has provided ample visual aids, which describe the changes to be made to the system. Good work!"
0,"The authors have provided screenshots, flow diagram and use case diagrams. These help in understanding what the author are trying to convey."
0,"The visualization covers screenshots, flowchart and  use case diagram which clearly helps to understand the changes proposed. Although, it would be better if they also add a screenshot showing how and where a student would be able to see if it is a expert review or student review"
0,The visualizations complement the explanations very well. The screen shots of the user interface help understand where the changes will be made.
0,"1. The use case diagram and flow diagram clearly explains the changes to be made to the system.


2. The diagrams are self explanatory.


3. The team has a very good understanding about the project."
0,They have provided a clear flowchart of how the vary-rubric-by-round feature would work. The team has also added a UML diagram.
1,Edge cases need to be written. ex: When a student does not submit the assignment on time.
1,"The test plan looks good and exhaustive.


It does include a plan, but some concrete steps could have been explained."
1,Test plan shows how to test and not which edge cases or conditions are to be tested.
1,The test plan is comprehensive enough explaining how the UI testing will be carried out.
1,"Yes, the tests are complete and explain the given functionality."
0,"No, the changes that the authors have made or are willing to make hasn't been stated clearly. They have just discussed the design in brief."
0,"No. The design given is just a brief overview of what they are supposed to do. It doesn't cover what strategy or algorithms they plan to use, which design patterns they wish to use, etc."
0,There is nothing to test in this project
0,The execution data flow diagram is very helpful and also the design pattern diagram.
0,Design is very clear and authors have mentioned all the changes that would be done in this project in the wiki.
0,The design deals with all details with the required file changes for the required functionality. There is a proper explanation of the proposed changes
0,The authors have clearly mentioned what the objective of the project is and what they are planning to change to achieve that.Its is easy to understand their goal in the project.
0,The authors have adequately explained about the project they are doing
0,The design appears to be sound and they have used strategy design pattern which is good
0,They have tried to be as simple as possible
0,They have used visualization adequately
0,They have written that it does not require testplan but i think it does require a testplan
0,"Yes, they explained very clearly in the first part. There work is to write python code to change the source code to let tests failed and change it back. Mutation Testing"
0,Yes. There strategies are replacing existing code conditions. I can't think a better way. They explained using  UML of strategy pattern.
0,"Yes, there design is very simple. There code use regex which is also the best practice for this problem that came to my mind."
0,"Yes, there are execution flow and UML, very clear."
0,They explained why they don't need test plan.
0,"The design doc is pretty clear and complete. The problem is that Servo uses the Web Platform Test (WPT) suite for testing, but does not perform an evaluation of the breadth of the tests. The goal of this project is to use techniques from mutation testing to evaluate the performance of the WPT suite when bugs are deliberately introduced into the code base. All the problems are explained well in the document."
1,Detailed explanation is given for the issues as well as the proposed implementation. Use cases are explained properly.Contains all the information necessary and easily understandable.
0,"The design of the project is to create a highly parallel environment that allows for many components be handled by fine-grained, isolated tasks. After checking the descriptions, I think the design appears to be sound. And they use Strategy Design Pattern which is also appropriate."
0,"The designs are reasonable and simple. Also, they use Strategy Design Pattern which makes the logic design simple."
0,"The project seems to be a little complicated, but the diagrams are really clear helping to understand what they are going to do. The diagrams explain the design step by step which are really helpful."
0,no tests are necessary for this project as said in the doc.
0,yes the changes required by the system is very well explained
0,"the design is very detailed and yet very understandable 


all the required subheadings are there which makes this even more clear"
0,yes more number of screenshots and flowcharts are present which makes the concept very clear
0,yes a very good test plan has been included in the design where different kinds of tests are present
0,"The design document is extremely thorough. 


the purpose of the project is stated clearly. 


the problem and solution is explained well."
0,"it clearly states what exactly the project aims to do. 


what functionality needs to be fixed 


all the reasons this project is important is clearly stated."
0,"the quality of the explanation is very good. 


it is not hard to follow. 


it is extremely detailed and is expressed in simple terms going step by step such that any viewer can understand"
0,"the design is sound. 


the fixes are useful and the plan of testing is also good."
0,"screenshots have been included in the design document to ensure that the viewer can note where exactly the change will show. 


no flowcharts are used because that would not be required."
0,yes the authors have explained whatever changes needed to be made to the system
0,"yes the design is very sound 


all the patterns are mentioned 


the test plan has also been included with a design pattern"
0,"yes the desing is very simple , a viewer who is reading for the first time understands well"
0,"there are tables shown for database design such that a viewer can visualize better. 


the diagram for use cases also helps to a large extent. 


below use cases a flow chart would be a better option instead of plain text."
0,yes there is a test plan included
0,there is no test plan
1,tables and screenshots of appropriate sizes has been put into the design document
1,"yes the design is very simple and clear. 


all the required data has been included in the design"
1,"yes it follows all the appropriate principles. 


it uses all the appropriate patterns required, 


the page has been completed, all trhe required fields have been added."
1,yes the authors have explained the changes to be made in the system.
0,Authors have explained all the changes that are needed for the requirement in very simple and lucid way.
0,The team has done a good job explaining the problem statement of the project and the changes they propose to solve the issue. They have used visualization perfectly as desired and have put the efforts in designing the solution in the right direction to achieve their goal.
0,"Yes, the proposed changes to the system are easy to understand. The author has clearly explained the problem statement, solution and supported it great diagrams and mockups!"
0,"Everything related to problem statement, design and future implementation and the test plan has been mentioned."
0,This is one of the best design documents I have seen.
0,"The test plan was missing last time, but now a complete detailed test plan is in place.  The problem description is properly elaborated along with proper explanation of requirements. Has good amount of diagrams and planned changes."
0,"I think this design doc is very complete, because it include description of project, the background information, the objective, and the idea of how to implement and design it. To explain the changes to be made, the author gives the  overall description, Files to be modified, etc. That's part is clearly and resonable. But I think the author also could improve something, for example, in requirements part, I think there is no need to say that much, because the author did the application flow following, which is the same as the requirement, and more reasonable, I think the requirement part can be delete."
0,Not much need to be updated
0,Very well explained document clearly specifying the current issues and the overall system description and the changes they plan to make. Maybe the purpose section of this project could be touched upon a bit more.
0,yes the explanation is complete and easy to understand.
0,All necessary functionalities have been described.
0,Design appears to be sound. I dont think changes are needed on that front.
0,The design is well structured and follows the design principles and appropriate patterns for implementing the feature.
0,"The design appears to be sound.





I found scope for minor improvements -





In the Design Pattern section MVC has been mentioned as a pattern. Here it would have been helpful to mention what source files are changed in each layer. The 'Code Modification' section mentions the source files. Both these sections could have been combined.





The 'Files to be modified' and 'Code modifications' sections contain duplicate data."
0,Appropriate patterns and principles have been used.
0,"They have mentioned that there are no design changes, and have explained the existing design patterns used."
0,The design doc provides a comprehensive explanation of the requirements and use cases that are being covered and the choices made to resolve these.
0,"The design appears sound, the explanations, use case diagrams and design patterns being used are explained properly."
0,"Yes, I think this design doc is sound and following appropriate principles. The author gives a part named design pattern which introduces the design pattern used in this project."
0,Design looks promising following appropriate principles and using appropriate patterns
0,"No mention of any design patterns have been done. Also no mention of the architecture they plan to use has been done. However, it seems that they will use appropriate patterns while implementing the project."
0,yes the  design seems perfect for the requirements.Proper use of patterns and approaches is shown.
0,The design is straightforward and simple.
0,Design is simple.
0,Yes. The design is crystal clear and the team has done a good job to keep it simple and detailed.
0,"Yes, the design is clear, as per the sequence diagrams and explanation of the potential code modifications."
0,Design is simple and clear
0,I am a little concerned about mixing peer review and self review in 1 module.
0,"Yes the design has been made very clear, especially since the choice of design has been very simple to understand."
0,Design is simple and proposed changes are easy to follow with the help of explanation provided. and seems a nice design.
0,"I don't think this design doc is simple,  I think in this design doc, the author could add more screen shot about the whole project, it will help reader understand the project, in this current version, there are too many description and no some important screen shots, for me, when I read this design doc first time, I met some problems of understand."
0,Very easy to understand everything
0,"Yes, the design is simple and well articulated. No issue with the integration with the master branch should occur while implementing this project."
0,the design doc is simple and easy to understand.
0,"From the description and diagram, I didn't find anything redundant, and the function design is as simple as possible. 





But, since this wiki doesn't provide any design on the code implementation, I can't tell whether the code design is as simple as possible. 





I suggest that you should provide your code design for each function design so I can determine whether your logic design is as simple as possible."
0,The flow diagram and UML diagram adequately describe the design which the team seeks to implement.
0,Team has used all sorts of things that can be used as visual aid.
0,"Too good. Use Case Diagram, application flow, screenshots of html pages and tables for calculations. It has got everything that a wiki page needs. Good work!"
0,"The sequence of steps have been illustrated well and the mock ups help understand the design better. As stated in my previous review, the block diagram highlighting each modified component is not provided."
0,"Use case diagram mixes use cases and components block diagram.


Instead of showing database, should have mentioned 'Save',"
0,"The team has made maximum use of visualization including use case, flow diagrams and mock up screens to explain the design details in very clear manner,"
0,All the required functionality is present with proper explanation of everything. The Use Case diagram and application flow along with planned changes deal with all the required functionality. More diagrams have been added after the 1st submission.
0,"in this design doc, there are two main figures, one is application flow and another is use case diagram. With these two figures, we reader can get the basic understanding of this project's objective, specifally, we know the working procedure of self-review functionality. As an advice, I think the author could add some screen shots of some changes in this design doc, it will help understanding."
0,All are clearly explained
0,"Great use case diagram with appropriate information regarding use cases and actors have been employed. The flow chart seems very intuitive as well. However, a class diagram would be great too."
0,there are sufficient uml diagrams to explain the strategy followed.
0,"This wiki provided two figures of the page, which clearly describes the effect. It's clear the summary report for assignment has been improved.





It also employs two diagrams and one table to illustrate the functionality design, which helps a lot for the reader to understand the changes on the function. 





But all the diagrams only describes the function, no diagram on the code is provided.





I suggest that you should also provide some UML diagrams to describe your code design. For example a class diagram is useful in describing your code architecture, a sequence diagram could better describe the logic sequence for the student and instructor's application flow."
0,A detailed test plan has been added which clearly states the team's motives and expected outcomes.
0,Design doc includes test plan which explains all the testcases team is planning to write
0,The test plan is well tabulated and explains all the test cases the team is going to perform.
0,"The test plan is comprehensive and consists of test cases with preconditions, testing steps and expected results. 


However, the testing methodology, and framework details should be added."
0,"Very elaborate test plans are mentioned, which cover all basic test cases."
0,Very elaborately written tests.
0,"The team has made an excellent attempt at formulating test cases, but the author could have went with few test scenarios first to avoid making it seems too few."
0,"A complete test plan with required steps, functionality and other applicable details is present now."
0,"In this design doc, there is no a part named ""test plan"", but in the final part, the author gives the test cases of this project. In this part, the author gives the different cases of testing the functionality of the self-review after modification. I think this part is enough to describe the test plan of author, but as an advice, I think the author can add the test plan plan for stating the test plan more clearly."
0,"design includes the test plan. Tests are clearly explained with test date, pre, post conditions, objective etc"
0,"Very well documented test plan, covering every aspect of the test cases from the test data, pre conditions and expected result. One of the best testing strategies I have seen."
0,Yes there is a full flagid test plan for the project.
0,"This wiki provides a complete test plan, with four test cases. This is the best test plan I've ever seen so far.





The test plan include test object, pre-conditions, steps, test data, expected result and post-conditions. It contains almost every important information for a test.





I think there is no need to improve it, but in case you still want to improve it, here is a suggestion: You may add more details about how to implement the tests. For example, you might want to use RSpec for the test. In RSpec you might want to use mock or something else to create the pre-conditions and use expected statement for the expected result."
0,The screenshots of the changes to be made clearly describe them.
0,The design seems sound and uses proper design patterns.
0,The design as shown in the screenshots is simple and straightforward to understand.
0,The screenshots greatly increase the understandability of the project.
0,Only the file the team aims to use for testing is provided. No test cases are given.
1,"The changes are very well explained using appropriate mockup screens. 


Few things are not clear, are the badges awarded automatically to the student/team once their score reaches the threshold or the instructor has to manually assign? 


Does the individual badge also appear along with the badge that the team earned?"
0,"There is no design section or plan in the document. They have explained the changes to be made but what is the principle followed is not explained.


It has to be MVC."
1,"The design appears to be simple: once the badges are created and activated for an assignment, they will appear/will set by the instructor for each student or team.


But how the team and student isolation is brought out, if the DB migration is going to exhaustive because for every assignment there is now a new modification. So this can make it complicated."
1,"There are lot of mockup screens showing the delta between the current display and the proposed display which helps in understanding clearly the changes to be implemented.


However, a use case diagram/class diagram would have been helpful in understanding from design perspective


Like for instructor and student, what are the use cases and roles."
1,"There are no test cases listed in the test section. It is mentioned that they will add it.


Based on the functionality, for now they can add tests like, checking if the the badge is activated for the student once the instructor provides it.


Checking the rendered output for every action like - activation, viewing the page where badges are to be displayed etc"
0,"Authors have explained what changes needed in great way.


Authors have mentioned database tables, files which need to be changed.


They have also mentioned what testing related changes that are needed."
0,"Design doc is well written. It follows all the principles and patterns.


They have also mentioned what changes need to be done in really great way"
0,"Yes, Design appears to be simple as possible.


I dont think it can be made more simpler"
0,Authors have shown the sample page views on which badges will be displayed in the great way
0,Authors have mentioned which all files will be added for the testing purpose and what testing they are planning to do
0,excellent improvement from last time
0,Some of the designs have been implemented as well
0,The design is very clear
0,some of screen shots have design implementation
0,test plan is missing
0,"Action plan, design, requirements and test plan-everything is covered."
1,Maybe more explanation is needed around test plans
0,The review 1 feedback has been incorporated and the design document now explains well the changes that need to be made to the system.
1,"I could not actually find the design proposed by the team in the design doc. They have mentioned that in which files they will be doing changes but, they have not actually mentioned they what changes they will be doing or what patterns they will be using."
0,The approach is not complex
1,The screenshots are given but it would be more helpful if they had provided UML diagrams of the system.
1,They have mentioned the test plan but have not really commented on what functionalities will be covered in the test plan
1,"The details of project purpose and design plans are clearly specified. They have included the modified files and the screenshots of how the functionalities implemented are different from existing one. However, they could include more details about the design pattern and explain them with help of UML diagrams."
1,The functionalities are properly specified but more details about why this design pattern is being followed or that why they have modified these files or design strategy could be given.
0,No details about why and how this design pattern are interpretable.
0,They have provided screenshots of the functionalities being implemented and how they are different from the existing functionality. But no class diagrams or use case diagrams are provided for explanation of the designing strategy.
1,"Although not all the edge test cases are included like what happens when some students did not receive a badge at 94 marks. And after that, the instructor updates the threshold to say 92.  But they have properly included the simple scenario test cases for each modified file."
0,"Compared to previous version this wiki has a drastic changes, it includes all of the things of a perfect wiki.





I liked the visualization presented, it made me easily understand the project you are working on."
1,"I do not see any design pattern, but the design implementation is mentioned in project description. Please include MVC design pattern if it is your design pattern."
1,The design is mentioned in project description. But i think it can be shifted to separate heading with more details included. That  would make it more meaningful and easier to read.
0,"As i mentioned in above comment, the visualization helped me clearly understand the badges used and the the screenshots explained me clearly understand how this is implemented, how it looks when implemented."
1,There is no test plan but the team mentioned the test file to be created and also cited that more information will be included as the project progress
1,"Good:


1.Introduction on top of the page is very good. I am able to understand the project clearly.


2.""Preliminary Mocks"" section is very good and very easy to understand.


Suggestions:


1.In Project Requirements section more matter can be added to each issue."
1,"Good:


Tables information is good. Wiki explained each table clearly.


Suggestions:


The user can keep separate design section for each issue so that they can be easily tracked. Now its almost difficult to see where they are."
1,"Good:


1.Adding badges in ""Assignment Participants "" section seems easy good.


Suggestions:


As already said please add ""design"" section for each issue to track easily design for each issue."
1,"Visually the page is best. Wiki explained everything in sequential order.


Good:


1.Add dummy tables ""badges"", ""assignment_badges"", ""awarded_badge"". 


2. Screenshots are also very clear. They are very easy to follow.


Suggestions:


1. UML diagram can be added to some issues so that design can be easily understood."
0,"Good:


Wiki says that they need to write the feature test and required changes will be made by them in badge_system_spec.rb."
0,It seems the design was already given in the project description. It had in-depth details of what changes to the db has to be made.
0,Yes the design does seem simple enough
1,They do have before and after photos and the images of the tables but it lacks software design diagrams.
1,"In the file modified part, the author listed all the files changed, which is complete, but I think the author could improve it with some screen shots and comments, which will be better."
1,"I think this doc is simple, but I think it still needs to be more completed, for example, the author maybe add some figures and diagrams for simplier understanding to reader."
1,"I think in this the use of visualization is the most urgent part the author needs to improve, a good figure or diagram can help reader a lot and give a more clear and accurate understandting of project."
1,"In the Test part of the doc, it only inlcude one line description, but the author said the more specific test plan will be showed in the development process."
0,Yes authors have adequately explained the changes to be made.
0,"Yes, the appropriate design principles have been explained."
0,"Yes, it looks quite simple."
0,More visualizations could have been used.
0,No test plan
0,The files and their contents that will be modified are explained clearly
0,The principles used to solving the problem are sound
0,"The design seems to be slightly complex. However, the implementation would be easy and direct"
1,"No UML or class diagram is provided. Since it is the implementation of a functionality, there should be a separate class diagram as such. However, the screenshots are meaningful"
1,"The test file that will be changed is only mentioned. However, the test plan is not explained completely"
1,"-Wiki page looks good but could have included more description about the solution


-All the descriptions are about the screenshots or the table.


Suggestion:


-Try adding description about the approach"
1,"-Design is very clear and easily understandable with all those images.


-It is the most simple design a team can go with


-Looks very simple not at all complex to a naive user


Suggestion:


-Don't put too much of spaces between lines, try removing them"
1,"-Team have included they will be implementing test plan but it has not yet been included in the wiki.


-Test plan section looks empty.


Suggestion:


-Write some thing in the test plan section in the wiki"
1,"1. The design document has an adequate description about the problem requirements. 


2. The document does not have any diagrams which show the flow of implementation. 


3. There is no information regarding application flow. The description is adequate enough which explains the changes to b made to the system. But the diagrams would have been better. 


4.I would suggest you to include this particular daigram. Because it helps to understand what exactly you are doing in the project. 


4. The important use case diagram is missing."
0,"1. The design appear to be simple and sound.


2. The team has included the detailed information about the database design by mentioning about the table structure.


3. The team has included the designed badges.


4. The team has proper description about what they are changing.


5. The appropriate principles and using appropriate patterns have been described."
1,"1. The authors have explained the design clearly in the all the sections. 


2. The diagrams are always better because they are self explanatory. I would suggest you to include the diagrams. 


3. The description is as simple as possible and easy to follow.."
1,"1. The team has included the preliminary mocks which are good.


2. The team has not included the UML diagrams which is very important is design phase of the project.


3. There is lot of description about files to be modified, user interface to be changed and methods to be implemented.


4. It is always better to explain your design in diagrams which will help to understand the flow of the application."
1,"1. The team has mentioned about the testing and is not adequate.


2. The team has also mentioned that more information will be added as the project progresses. But the design phase testing plan is important.


3. The test plan of design phase and the overall project always changes.


4. I suggest you to include the test case plan of the design phase.


5. It is mentioned that the tests will really check the modifications made to the project. But it is not clear."
1,The changes that have been made to the system have only been mentioned but they haven't been explained. The author fails to explain why they refactored the code like they did and why it creates a change. I couldn't really understand what the code meant.
1,"The authors have failed to provide any UML diagrams including class diagram, user case diagram for describing the changes to be made to the system. If possible kindly add those missing things to the wiki page."
1,"No appropriate class diagram is added, there are lots of screenshots instead, but those screenshots are not helpful for a design doc."
0,The article very well explains what needs to be done and why.
0,"The project deals with refactoring, so there does not exist a significant design or pattern change. As the document says, DRY principle is kept in mind while optimizing code."
0,"Yes, I believe the design doc is pretty simple."
1,"The required visualizations are there. However, a bonus point could be for showing how the classes are related that they are looking to modify."
0,The test plan is satisfactory and emits the idea of what they will try to do to measure the optimization effort..
0,"There is not much design in this project, but it appears to be sounds and seems to follow the patterns."
0,"Yes, it seems to be as simple as possible, since it only involves refactoring a bunch of code pieces and making sure they work. The author has also mentioned the test plan this time, which is a big plus"
1,"I dont see much change in visualizations from the last review, like I has mentioned the visuals are good but don't really click with someone reading the doc up as different components of the visuals havent been explained well. This part still needs some reworking."
0,Yes the authors have adequately explained the changes they are making to the system in a simple manner. It becomes easy to follow with the use of graphs and easy language.
0,"The design appears to be sound, the team did mention about he principles and design pattern that they are going to implement however they didn't include exactly what changes they think would need that design pattern."
0,Yes the design appears to be simple and clear. It becomes easy to follow with the use of graphs and easy language.
0,The test scenarios mentioned will help in finding out if the implementation has positively affected the system or not.
0,"The general approach for addressing the project requirements is effectively described.  I am grading ""4"" here is due to the fact that it is unclear from the Wiki alone whether the proposed fixes apply to all four of the pages listed in the project requirements, or only the first one.  If the fix applies to all the pages, a note saying as much would be helpful.  If there are additional fixes needed for the other pages, then similar information should be included for those pages.  Also, more detailed explanations for the proposed changes would be helpful as the project progresses, but I understand that this information may not be known yet.  The ""Proposed Solution"" section is adequate for now."
1,"Please see the note above -- there should probably be more detail about the other three pages in the project requirements, or a note explaining that the fix affects all the pages.  Otherwise, the design seems sound -- I do not think you need to specify that it is MVC, all of our Rails projects are MVC, and this is assumed."
0,"The Wiki does a good job of thoroughly explaining the process for addressing the project requirements.  There is a lot of information leading to the ""Proposed Solution"" section, but once we reach that point, the pseudocode is concise and understandable."
0,Please see the notes on the previous review about cropping and highlighting some of the screenshots for readability.  Otherwise very effective use of visualizations.
0,"The manual tests described in the new ""Test Plan"" section adequately cover the project requirements.  You guys are effectively optimizing Expertiza, so testing the speed of the required pages is appropriate."
1,The authors should be more thorough with explaining the changes to be made to the system. Instead of just attaching the code snippets the authors should focus more on explaining it.
0,"The project design looks quite sound, the authors have mentioned about the MVC and DRY principles and how are they implemented in the project."
0,"The authors have done a decent job in explaining the identification of pages using flame graph, miniprofiler statistics, but it becomes bit difficult to understand these technical slangs for naive users."
1,"Authors have provided the Test Plan but I didn't find it much comprehensive, the project looks very critical, hence the authors should really work on providing the edge cases and extensive testing."
0,"The authors gave adequate explanations in the page about what they will change in order to cover all of the requirement, they not only considered about the functionality and the viewing, but also think a lot about whether the performance will be changing after that, which is really good."
0,"They design is full of adequate descriptions and details, completely satisfy the requirement, i cannot figure out what kind of appropriate patterns they should necessarily use, but nothing disobey the design principles."
0,"Last time their description is complex and hard to follow, but this time they change that, all of the paragraphs seems simple and has a clear logic, seems like they improved a lot since last time."
0,"They have many diagrams in the page, each was followed with several sentences to explain, all of them are the key points to clearly describe their job in this program, none of them are useless."
0,"The design include the test plan, mentioned about how to set up the environment for test and how to do the test, in fact this project focuses on the time shown, so seems like no test code is needed in their work."
0,The problem statement portion states just a few lines without elaboration. Its hard to know what exactly is the issue in the system.
0,"The design approach needs more explanation like what is mini profiler, how will it help the team, significance of the flamegraph."
1,It does appear complicated to me because there's less explanation and more codes in the document.
0,There are certain screenshots which help to understand the project a bit better but there are no diagrams innovated as such to help visualize the proposed solutions better.
0,Test plan seems good.
0,Design is well explained
0,Design is good with appropriate patterns.
0,"yes, Design is simple and clear"
1,"Yes, Visualization are good enough to explain everything.


However class diagrams are still missing."
1,More automated  test cases can be included . Little more description of the test plans needed.
0,"Yes, the team has included all the functionalities required to be implemented as a part of the project. I like the project description provided in the document, it already has all the changes required to be done as part of this project. Moreover, in the section Proposed Solution of the design, an author has provided enough details to understand the problem and its solution."
0,The author has organized the designed document in a proper structure which makes it more readable and easy to understand the flow of the work. I really appreciate this as it was a good learning for me too.
1,"The design is simple and very clear but I was wondering if we can put some more details about the refactoring of the classes impacting the performance. For example,  children_node_ng action is the one impacting the performance so we can more how this action is impacting the performance and how refactoring the mentioned methods will improve the performance."
0,"Author has provided enough visual aids in the section ""Analysis of page"" to understand the purpose of the work and the problems related to it. Thanks to the author for including the FlameGraph Statistics in the design to provide a clear picture of the time taken by a particular page to load."
0,"In this project, performance testing is the major part which the author is already performing while analyzing the time taken by each case. One suggestion, please do test the refactored action children_node_ng."
0,It would be better if some more explanation on optimization part of design analysis.
0,"Give some automated testing also, I am sure there are plenty automated testing tools for network performance testing"
0,The wiki has improved from last time and some of the changes suggested are included.
0,Patterns implemented are mentioned.
0,Design is straightforward and concise.
1,Activity diagram could be included.
0,"It was missing last time, added now."
0,"The author has described it very well. It mainly is performance improvements. Although they have given that they need to reduce number of SQL calls, they have not given insight into how they are going to do it."
0,I dont think design is applicable to the project is about performance improvements.
0,Visualizations are given. Class diagram and use case diagram not given but I don't think they are required.
0,Test plan is given and it seems very straight forward.
0,"The three sections, introduction, project description, and project design, explain clearly what the project is to do."
1,The author doesn't mention what design pattern or principles they are followed.
0,"The authors use two long paragraph to introduce their project design, it would be better if essential processes are extracted and listed as steps"
0,Sound test plan is listed in the page.
1,"The authors have mentioned what files and tables need to be changed. However, a 1-2 line explanation regarding why those files/tables need to be changed would have made the purpose really clear."
1,"The design appears to be sound, and appears to have followed the proper principles. Good job!"
1,"The design looks clear and simple. Unnecessary long statements and paragraphs are avoided, which makes the design very readable."
1,"A use case diagram has been provided, along with sample badges. The visual aids do describe the changes made to the system."
1,"The design does include a test plan section. However, a 1-2 line description for each test, as to why that test is necessary for the project would have been really helpful. The tests mentioned seem to cover all the functionalities though, so well done."
1,"The ""good temmate"" reward/badge wasn't well explained. Does this mean in each team a member who got best teammate review is given, or, on the whole class a student is selected?"
1,"The design and the plan are well designed. No description about how you crack your problem statement except for ""files to be modified"" section. Should have been great if you include ""Design Plan""."
1,"No such specific section for ""Design"". But overall description and test plan were clearly explained.  The ""Description of Badges"" was very important for this specific writeup and it was neatly described."
1,"The use case diagram is big. We have to slide it all way right. Better you  have a resized version of it. And, can a student see who has got a badge for a specific assignment if he didn't get? Does it feature consider privacy issues. If yes, have you checked if that is a good idea for a student to see other's badges. 





The database in the usecase diagram may not be that necessory. It just makes the diagram more clumsy as it's anyway understood that whatever actions are performed are stored in the database."
1,"You've said that you are using TDD methodology. So a section explaining TDD should have been there.


Then the test plan section will look sound and complete."
1,"The authors have taken into consideration the review comments from the last round and improved the formatting of the document. They have also added a Use-Case Diagram to better facilitate understanding of their project. 


But they have failed to address the review comment involving the amount of work involved as pointed out in the previous review."
1,"The design has considered all the required functionalities. 


The authors also have explained what exactly needs to be changed, and their plan for accomplishing the said tasks. But the authors should have given a low-level design of which components in the expertiza system will be affected.The project makes no mention of any particular principles or pattern being applicable to their project, any comments on this should have been incorporated into this."
1,The authors have mentioned which files their changes would be incorporated in and have given minimal explanation for each of them respectively.
1,"The authors have added the Use-case diagram which was missing in the previous round of reviews, once again have failed to visually depict schema changes to the DB and UML diagrams of class where code would be added."
1,"It was suggested to the author to provide a more detailed test plan so as to better gauge how effiectively they would be testing the new code, but unfortunately only minor changes were observed. Although they mention tests pertaining to their core functionality/UX, overall test plan has to be classified as shallow.


Additionally as a new DB is being added the response will increase, how will this affect User Experience? Thoughts on this would be appreciated."
1,The authors have explained the changes that need to be made to the system but they haven't explained them in a lot of details. They should describe the code as well as the pattern they think would mostly suit in their project.
1,The team has not mentioned the pattern and principle they are going to use to implement their project. They have however studied the requirement document and know the changes that need to be made in the system.
1,The design could be improved by adding extra details as well as making it as simple as possible while still conveying more.
1,Yes they have used great visualization that describes the changes in an easy way for a layman to understand.
1,The test plans are present however they are not too helpful to completely understand or test the functionalities. They should include checks to the database changes as well.
1,"The changes are just said.! No explanation why the changes are being made and why those components have been chosen. For instance, they should have explained why they are creating three tables and if the design is normalized or not.  I am still not able to get why they require 3 tables and why not it can be done in 2. I maybe wrong but no explanation exists whats the functionality of making 3 tables."
1,There is not much explained on the design principle perspective. I feel they could have touched upon some of the design based point while the current wording is pretty straightforward. How their changes
1,The design is indeed simpler than required.
1,"They could have shown where exactly they are trying to put up the badge.





Also, the use case diagram has some mistakes-  For instance, the 2 use cases for student and instructor to view badges is one directional. It seems as if the database is initiating the functionality.


Improvement is needed in the effort spent."
1,"Test plan is not upto mark. They are pretty much testing the simple scenarios.





Test plan should contain a lot of edge cases for their project. For example, what happens when some students did not receive a badge at 94 marks. And after that, the instructor updates the threshold to say 92. Will there be a job running to update the students who should now get the badge. There are lot of edge cases and this is just one of them.





Lot of improvement needed."
1,Changes are explained with use case and database design but it seems like data flow diagram is missing
1,There is no mention of any design principles.
1,The design appears simple and clear.
1,Use case diagram is clear but there is no proper data flow visualization present
1,Very high level description on test plan. Need to go into more details.
1,"Yes, the team has included all the functionalities required to be implemented as a part of the project. I like that author has provided enough details about the models needed to be added and files to be modified as a part of this project. One suggestion, the project document shows that some team has already done this project and it was rejected because of some reason. It would be a good idea to include some details about the work done by the other team. Like what was their approach and how things are done differently this time."
1,"Yes, the design proposed by an author seems good to me and it follows appropriate principles. The author has considered all possible relationships between reviews, student, and different badges before designing the solution, following the appropriate pattern which is really appreciated."
1,The design is simple and very clear. I appreciate that author has provided few details about what changes need to be done in different files rather than just providing the names of the files to be modified. This makes the design more clear when the reader tries to understand the changes to be done in each file.
1,"Thanks to the author for including the Use-Case diagram in the design. This is really helpful to understand the interaction between the involved components in the review functionality. Also, I appreciate that an author has included the section ""Description of the Badges"" and provided the images for each badge with description."
1,"The test plan is complete and this will test all the changes done by an author. But I have one suggestion, that we can organize these test plan in a proper structure like in a tabular form with columns like  Test ID, Test Condition	Expected Result and Procedure. This will be helpful for both, reader and an author while implementing and testing functionality."
1,"Overall the changes are well explained. But in ""Files to be Modified"" section, I think the authors need to give us more details about what kind of code they are going to insert in those files."
1,The authors have clearly explained the design they are going to implement. It follows appropriate patterns and uses principles.
1,The authors just gave us an overview about how they will make the changes and they look simple and straightforward. But I think more details without adding much complexity would be helpful.
1,The visualizations are appropriately used. The use case diagram and pictures of badges are helpful for clarifying their tasks.
1,"The test plan are included and contains almost all scenarios and use cases. It would be better to consider some edge cases, e.g., what if the instructor assigns the ���Good Teammate�۝ badge to a student whose grade is below the threshold value."
1,yes they have explained adequately
1,Sound design but limited scenarios have been proposed for implementation
1,It is very basic as they are implementing only 2 scenario for the respective 2 badges
1,"No class diagrams, just a flow chart depicting the flow. should have made separate flow chart for student and instructor and separate chart for different scenarios i.e., for the 2 badges"
1,Manual test. The tests do not cover corner scenarios. Scenarios where only few team members have reviewed and there are still pending reviews
1,"As I said in the first review comment, I could not actually find the design proposed by the team in the design doc. They have mentioned that in which files they will be doing changes but, they have not actually mentioned they what changes they will be doing. So it is difficult to understand whether the design is simple or not."
1,"They have added the use case diagram into their design document, which aids very much in the explaining their design."
1,The presented test plan by the team in the design document is very sound. The tests will actually test the functionalities and are not shallow.
1,"Yes, the changes are demonstrated in problem statement part and modified files part. But I think some pictures and details are really wanted here. There are some reasons.  First of all, because your task is adding badges, some mockups of the related screen are necessary here.


 Secondly, because you just say you will insert some code into related files, don't talk about insert what, how to write your code and what methods you need to newly create. Please write your change as detailed as possible."
1,"The way they design their project and modify the files are reasonable, which is easy to follow. But in the doc, they don't say what design pattern they will use. I recommend you to add a part called design pattern, describing the design approaches you use. For example, you will use MVC frame and TDD, you should mention them in your doc."
1,"By checking the content they have written, I would like to say very good design. But I also would like to say some details are wanted. Because all of the design steps in your doc are just copied from project description offered by the instructor, I want to see something new and meaningful."
1,"UML diagram and badger pictures are drawn in the design doc, very good job. But I suggest you guys draw some mockups of screens and database tables in your design doc. There are some reasons. First, mockups are the best reference if you write the test plan and use TDD approach. Then, Mockups can help you and your teammates to understand your project better and low the risks of making mistakes when developing."
1,"Yes, it does have a test plan. But I also suggest that add some details to your test plan and you should demonstrate your test plan step by step.F example, 1. login as instructor 2. create a assignment 3.give review to student reviews 4.set badges of students. 5.view badges of students.


What's more, you should split your test plan into 3 part, which are student, TA, and instructor. Because different roles have different views and features."
1,"The use case diagram has been included in the design document. However, I could not see the screenshots or mocks of how the UI will appear. A little description about the screen where the changes would be reflected, gives a better understanding of the functionality.


An insight into how Credly is been integrated or used to implement badging would have been a better approach to clearly explain the changes."
1,"The design pattern has not been mentioned, however I think there isn't any class level changes which would affect or change the existing design pattern."
1,The design looks clear and appears to be simple without violating the dry principle.
1,"The UML diagram and the image of the badges provide a fair idea about the design. However, it is not clear which page in Expertiza will be affected by the changes. A screenshot of the existing portal with an explanation would be helpful."
1,"The test plan includes the scenarios that need to be tested for the implementation. Both, student and instructor flows have been tested properly."
1,"Yes. I understand the process of ""badges"" clearly by the Use Case Diagram and the Description of the Badges. However, I don't understand why it is written in ""Good Teammates"" that ""This is evaluated on a scale of 100% by the teaching staff"". Shouldn't the grade is given by other teammates?"
1,The design appear to be sound but no patterns included.
1,"Yes. By looking at the ""Tables to be Modified"" and ""Files to be Modified"", I think the design is organized and simple."
1,The team includes the use case diagram which is very helpful to understand the process. I think it will be better if they can include some mock up screens.
1,Good TDD method and good test plan.
1,The features to be added is written well. But the exact changes which need to be done can be explained more.
1,"I don't see any patterns being used. It might not be applicable also.


The design is missing the how the new change embeds with the existing DB entities or ruby classes. Existing things are not considered properly during the design.





Missing design for Good teammate badge."
1,"The DB design seems faulty to me.





First of all, there should be badges for students for each assignment. so awarded_badges should have assignment_badges_id as FK.





And how is Good teammate handled? it should have some team and badge association, similar to assignment and badge."
1,Use case diagram is good. But the class diagram or ER diagram with the entities involved is missing.
1,The test is simple and most of the cases are written. But it needs more explanation and edge cases coverage.
1,They have explained the files to be modified but they have not explained the existing implementation and how the changes would improve the implementation.
1,They have included a new section  tables to be modified  in the wiki page which makes the implementation more intuitive.  But I could not find any appropriate patterns usage.
1,From the overview of the approach given by the author  the design appears to be simple. The author could have given more explanation of the implementation.
1,Inclusion of the badges is a nice touch in the wiki page but they could have added screenshots of how the current   application looks like or screenshots explaining where the badges would appear.
1,They have included the test plan but a more detailed test plan could have been written along with some edge cases if possible.
0,"The wiki page summarizes the issue that though the instructor can see the submission records of students currently as a table for each assignment, student can't see the time stamps of submissions and deadlines of the assignment easily. 


The Use Case Diagram is really clear to understand. However, in the Design Analysis section, I think it's better to put the design in the picture showing changed view instead of screenshots."
0,"According to the design doc, their designs is let student be able to visualize the submission records as a timeline including:


1. Timestamps of hyperlink submission records


2. Timestamps of file upload record


3. Due Dates


4. Peer review link with round number and timestamps


5. Author feedback to other�۪s review link with feedback hyperlink, timestamps


The design has covered all the problems and it is reasonable."
0,"Yes, I think their idea and design is simple. The design intend to develop a timeline omitting the need to scroll and being concise."
0,"The diagram is of good design which clearly explains the design. But in Design Analysis section, you could do some modification on the screenshots to show the change . It will be better."
0,"Yes, it has test plan included. The test plan covers the TDD approach and manual test on UI. The tests are useful."
0,"Yes, the authors have adequately explained the changes to be made to the system. They have a separate section to list files to be created, and another separate section for files to be edited. After the above two sections, they have implementation section that talks about the changes to the flow of data in controller and view. It could not have been explained better."
0,"On their wiki webpage, their write-up described the introduction for the background of Expertiza, the definition of the problem, the scope. Next, they mentioned the requirements of their project, the use cases that they will face, the database design they will use, the diagram of classes they designed for implementation, and the design practices for their projects. For me, the completeness of the design doc is great enough. Especially they offered the requirements and the use cases in the write-up because I didn't see these in the write-ups from other groups. And these make their idea more concrete and easier to understand."
0,"The authors seriously needs to work on the design document, the authors have not provided any details about the changes to be made to the system. They have only provided the code snippet. How will the reviewer understand the reason these change needs to be there?"
0,"Yes. The design document explains the changes clearly in the ""Requirement"" part. ""Files to be created"" and ""Files to be edited"" also help a lot to understand the  changes."
0,"The design docs is great and captures all the changes that need to be done in detail. I am happy that you have added visual aids such a screen shots, UMLS, code examples and stick figures These are very helpful for the overall design on the document. The is commendable."
0,"In this current version, I think the author modify many things,  the author added some screen shots and background information, descriptions about the project's objective. All these parts can help reader understand this project more clearly and accurate. Additionality, The author also posts their changed codes into the design doc, I think it good! With the codes and figures, reader can understand the design doc easier."
0,"Most of the explanation has been done through visual cues. I was expecting some more textual based explanation because using visual aid I am only able to understand UI changes or UML Diagrams but now understanding the tasks that the team would accomplish to make these changes. Apart from that, very well documented."
0,"Authors have given a sufficient explaination to understand the project. However more details would be welcome, like the meaning of the ""role"" id in the usercontroller"
0,The updates done are sufficient from a design doc standpoint. Added UML and UI diagrams are informative.
0,I do not see much explanation in your wiki. I only see list of requirements.  Try to add some idea on what approach that you are planning to use.
0,The author has described the problem very well. The database changes and files to be created and edited are given with sufficient description.
0,"They need to add more explanation, because in their wiki, they just told us what they will do, however, we need more information about why they will do that, which can help readers to understand their whole work."
0,"the design diagram in the documentation is really clear, and gaces the details how the process is working."
0,"The design appears to be sound, following appropriate principles and design patterns. The team has used use case diagram, database diagram and class diagram to explain the proposed design. This is quite exhaustive explanation, therefore covers all possible changes in a well structured manner."
0,"Because their project involved the front-end and the back-end, they use MVC framework here to separate the functionalities of models, views, and controllers, which is a nice design. And they are going to use the standard naming convention for variables and methods, which is also useful for maintaining the project afterward. And they are going to apply ""Do not Repeat Yourself (DRY)"" principle, which is also good for keeping the functionalities for themselves and other developers in the future. Although they are not going to use some fancy design pattern, such as the strategy design pattern. However, sometimes a simple idea is better than a fancy idea. But I found that they didn't mention the model part in their write-up, which is in charge of communicating with the database. It seems that they put too many jobs in the controllers, but some of jobs should be done in the models."
0,"As it is, the design document incorporates all the functionality proposed. It is aimed and extending the scope of assignments from just regular class assignments to other types of submission and I think the team has implemented that well. Great use of class designs."
0,"In all, I think this design doc is sound and follow appropriate principles, but in this design doc, I didn't see the design pattern used in this project, I think the author needs to add this part, with the illustration of design pattern used in this projcet, reader can get more clearly and accurate understanding of the jobs the author have done and check if these changes meet the appropriate design patterns."
0,"Yes, the design does follow the appropriate design patterns and uses proper convention. They have only stated what kind of patterns they are going to use. They haven't mentioned the way in which these patterns would be implemented."
0,"As I already mentioned the authors have not performed their task properly, they have only stated the design practices but failed to explain how?. I can't see any input from the authors."
0,"The team declares that they will follow MVC structure, standard naming and DRY principle in the design process, which is great. However, I think they might also include their test design patterns like TFD or TLD."
0,Expaination of the design patterns would be appreciated. Design appears to be sound
0,The design proposed is in line with the problem statement mentioned. Specific algorithm changes to be done for the bidding as mentioned in the project overview not mentioned however I assume it was taken over by another team.
0,The screen shot looks good on supporting for things that  you are planning to do.
0,Yes the design appears sound. Designing principles are only mentioned but how to achieve them is not givem.
0,"In the designing practices section, they only mention that they will use MVC, DIY, but we need the explanation and reason to prove that these principles is appropriate."
0,The design appears to be simple as they have clearly described the code and where they plan to change it.
0,"The design has been explained in detail, however there is a designing practices section that just lists down the standard design practices. The authors could improve it by explaining in each point, how they will implement that practice. Example, they could explain how they're not violating the DRY principle. As for the simplicity, it is as simple as it can get."
0,"Yes, because their project involved the front-end and the back-end, they use MVC framework here to separate the functionalities of models, views, and controllers, which is a nice design to avoid of dependencies. And they are going to use the standard naming convention for variables and methods, which is also useful for maintaining the project afterward. And they are going to apply ""Do not Repeat Yourself (DRY)"" principle, which is also good for keeping the functionalities for themselves and other developers in the future. Yes, Although they are not going to use some fancy design pattern, such as the strategy design pattern. However, sometimes a simple idea is better than a fancy idea."
0,The changes are adequate and the explanations are clear and concise. The explanations are easy to understand. The addition of explanations to the code added and what they do it good and helpful.
0,"Yes, the design is simple and clear and to the point. The changes that the user plan to make are implemented in a concise manner which would not affect any other modules of expertiza."
0,"I think for this part, the author did a good job, in the design doc, the author added many figure to help reader understanding the project, when I read this design doc, these figures help me a lot, I just follow the screen shots the author provided and do the same as the use case mentioned. I think this design doc is friendly for reader."
0,"Yes. The design appear to be simple and clear. However, there are some impropriate uppercase in the beginning of the names of variables and methods  in ""Class Diagram""."
0,"With the current details, it appears complete."
0,The mentioned approach to the problem seems to be simple and straightforward.
0,"Provided all required diagram like use case, db design, class diagram. gave relevant information to understand what they are trying to do. aslo the mokc up screens are provided."
0,"The visualization used provides a good snapshot of the functionality that they're implementing, therefore the usage of class diagrams and other diagrams clearly describe the changes to be made to the system. However, I feel an additional data flow diagram or a sequence diagram would have helped improve the context explained by the visualizations."
0,"They drew the use cases, database designs and the class diagram for us to understand their thoughts and the solutions easily. From the use cases, we can easily to understand what actions might occur between the presenter and reviewer, such as signing up, adding contributors, creating a submission, uploading paper, reviewing submission. For the database design, we can see how they designed the table for Paper class and the table for handling with many to many relationship between contributors and paper presenter. For the class diagram, we can see the relationship between User, Presenter, and Paper class. As a result, the visual aids they offered are useful for me to understand the ideas."
0,There is a very good and extensive use of visual aids to enhance the design document. Screens shots that show the user interface are use. We have code examples and list of files to be changed. UMLs and stick figures are also used. This has greatly improved the document.
0,"As I mentioned before, I think class diagram and other figures help me a lot when I first read this design doc, I think the use of visualization of this design doc is good enough, in addition, as an advice, I think the author can add some comments with these figures, it will be better."
0,"Yes, the class diagrams, use case diagrams and the UI Screenshots seem to explain the changes well and they have also mentioned the necessary theory along with these diagrams for novice users to understand the diagram."
0,"The best part about this design document is the use of visualization, the authors have provided use cases, database design and class diagrams to demonstrate the working of the project."
0,Yes. The class diagram and the use case diagram help a lot for understanding.
0,"The Use Cases are easy to understand. However in the use cases, nothing is mentioned about the Reviewer."
0,Adequate use of UML diagrams and screenshots.
0,I like the screen shot on supporting your work.
0,I feel visualizations are very well used. They have put great attention while creating these diagrams.
0,"Visualizations including UML, class diagram, screenshot have been given in their wiki. Both of them are clearly, and easy to be understood for the reader. This part is good."
0,would be great if mentioned about the automatic testing as well
0,"The test plan talks about automated tests, but then goes on and talks about 2 manual testing scenarios. Details for automation test cases are missing. If the team does not plan on writing automated test cases, then it should be mentioned in the documentation. Otherwise, the team should provide more details about the test plan for automated test cases."
0,"The test plan only described what events they are going to test, such as when users publish papers or users edit the attributes of papers. However, what I expect to see is what kind of tests they are going to implement, such as integration tests or unit tests. For the unit tests, what units and what corner cases they are going to test. For the integration tests, what controllers and what the flow of usage they are going to check. If they can mention these details more, this part will be easier for reviewers to understand their idea."
0,The test plan is not comprehensive as it does not describe the tests or the framework to be used. The test plan just explains what is to be tested without actually specifying how to test. I expected to see at least mock-up code for the testing and the test framework to be used.
0,"Yes, I found this test part in the final of the design doc, but I don't think this test plan is complete enough, the author just brifely introduce some plans. I think the author needs to improve it, for example, can list some pre-conditions and  expected result."
0,I am not very convinced with the test plan for this project as it is a very shallow test plan. They haven't mentioned how to implement these tests and what the test cases will uncover. They need to follow a specific testing pattern to write these tests.
0,"The authors have included the test plan stating the automated tests they are going to implement, but I find them bit shallow. It's a very generalized test plan, they should provide the edge cases which they need to test and if it's gonna impact the implementation."
0,They have described their test for UI but omitted the test plan for the methods to be written. I think it will be better if they can include the automated test plan.
0,Nothing is mentioned about automated tests.
0,Test plan is mentioned on how to do it manually. No scope for automated cases? If so please mention a sample case
0,I think your need to add what your are planning to do with your project not what the page can do or that steps to get there.  You need to add the steps for your future project.
0,Test plan is added which was previously not there. They have explained the test case that must be satisfied.
0,"Yes, they added test plan in their wiki, but this part is not clear enough. They mention what they will test in the future, it is good. But they should add some example or demo of their code or pending test."
1,"Design appears simple thanks to multiple diagrams like use case, class diagram and db changes."
1,"Just as I mention before, explanation is needed. Even their design is clear, without necessary explanation, it is still hard to understand their purpose."
1,The design looks good and screen shot also looks good.
0,Many commits periodically
0,"All code seems to follow good RoR Design practices, as described in class and in the online lectures. There does not seem to be server-side validation of many user actions, however."
0,"The interface is straightforward, but has several form fields that are extremely particular and do not accept valid entries, often emptying the form on errors. For example, the LinkedIn profile field would not accept my (the reviewer) LinkedIn url as valid, and kept clearing the form every time."
0,Was unable to find any instances of not following best practices.
0,Yes it follows good coding practices.
1,"follows the good practices that I am aware of. The views don't contain much ruby code (other than a few collects), the models perform the validations for the data types, and the controllers implement all the CRUD functionalities. The naming of a few files (mainly the application_tracking) files doesn't seem 100% accurate as they perform more than just application tracking methods. Very well done though"
0,"1. The code was written following good Ruby and Rails coding practices


2. There were lack of comments in the code, which is necessary for a new person reviewing the code base. For example in the companies controller, some amount of comments for each of the GET/PUT/POST methods would have been useful."
1,"The proper naming convention i.e snake case for naming symbols, methods, variables and Camel case for classes has been used. In the models eg-Application model and other models used, the in-built DSL  Rake methods such as validate, have been written without parentheses. The code is clear to read and self explanatory which doesn't necessitate comments.


There is a controller named as ApplicationTrackingSystemController. It violates the Ruby way of naming classes on nouns eg:-  ApplicationsController, CompaniesController, JobController etc. The name ApplicationTrackingSystemController is the functionality of the entire app and doesn't illustrate the function of the class.


Single line definitions can be adapted for empty methods eg- In the show method of jobs_controller. The method can be defined as def show; end


In the Users Controller, there is a statement ""puts Viewing all users"". This statement can be displayed in the vie for the index method, thus clearly separating the r"
1,"Your code looks great on GitHub!  Most of the models, controllers, and views are setup similar to the scaffold build in RubyMine.  One thing that I would recommend doing is either in your GitHub commit messages, your ReadME file or in your code, you should document any Ruby files that act as helpers to other Ruby files.  For instance, try documenting any Ruby files that work with the gem Devise.  I am not familiar with this gem and some documentation on why is it used would be helpful for me or any other reviewer to understand your thinking process for this project."
0,"It follows the best practices to the best of my own knowledge. I see most of the functionality its stored within the models, and the views do not perform business logic. The controllers implement the CRUD functionality required. Models contain validation fields and the errors returned are succinct and inform the user of how to correct their forms. To improve maybe add a password confirmation field in your /users/new functionality. Also include a method of preventing non-logged in people from accessing portions of the site they should not be able to. For instance I can visit the site while logged out and simply type /jobs and view all open jobs as a non-user."
0,"I like your use of third-party gems, such as devise for authentication, to keep the coding ""clean"" and readable.  I would suggest also using ""CanCanCan"" and ""Rolify"" for authorization.  There is also a tutorial for using the three gems in conjunction(Devise+CanCanCan+Rolify)."
0,"I think they did an excellent job especially they thoroughly completed the authorizations of controllers by using ""before_action""


But there're still a few flaws:


1.there is no validation for company attributes except for company name.


2.In user model, user should not ""belong_to"" company because a user can be a job seeker who doesn't have such a foreign key. (you may add ""optional: true"" to ""belong_to :company"")


 


3.In the partial ""_form.html.erb"" of user view, the company selection field will be shown in both recruiter and job seeker signup view and make choosing a company mandatory. (you may create a radio button for selecting role and a if statement before company selection field)"
1,Code is clear and easy to follow. Use of enums for types in model would make it easier to update in the future and easier to use throughout the application.
1,"You all have done a good job following the ""good Ruby and Rails coding practices"". It looks like all of your major components were built using a rails scaffold, which is good because it helps to organize the code in a good ""ruby on rails"" way.  You also did a good job following all of the ruby on rails style guidelines such as using ""each"" were it is appropriate over ""for"", and using 2 space indentation.   I have taken one star off though because you did not comment all of your code very well.  Specifically the models could use with some documentation.  For example, ""app/models/company.rb"" has no documentation.  While it isn't necessarily a difficult to understand file with only 4 lines of code, it would still be helpful for anyone working on the project say in the future to know exactly what the model is used for.  It could be adding something simple such as a small inline comment explaining what the validation is for, and what the model is used for as a whole."
0,The interface is simple and intuitive while there is not much information in README.
0,The code follows good practise. The readme is also well defined.
1,"Easy to follow and use the user interface here. I like the big jumbotron approach. Also the table views for indexing having lines delimiting the columns and rows makes it easier to read. I would maybe see if you change the ""been clicked"" color of the links in the home page. It becomes hard to read them. Or maybe change the color of the background, either way."
0,User interface is above and beyond.
1,"The app is deployed on Heroku platform. The README file contains the login credentials of the admin. The app is simple to use and the flow of views comes naturally without having to search all over the place. I appreciate the optimistic ""Find your Dream Job, guaranteed!"" message at the welcome page and also the Help prompt. The Home and Logout button are available on all pages and thus making navigation easy for the user. also,the password authentication is much like the ones that most websites use.One suggestion would be to keep the Log-In and Sign-Up links next to each other just as a matter of convenience.The README file also instructs the user to run rails db:seed to initialize admin details. I was able to correctly login in as admin so you might want to edit that line from the file."
0,The interface is quite user friendly and easy to use. It displays all the necessary information.
1,"1. Yes, the user Interface is easy to use.


2. The ""sign up with Google "" functionality does nit seem to be working


3. The steps written in ReadMe were not enough. A new reviewer may find it difficult to test all the functionality sparsely written ReadMe file"
1,"The user interface looks very nice and it's easy to use.  I also appreciate the Admin details in the README file so that I can log in as an Admin.  There are a couple of things that I noticed that you should consider fixing.  First, when I check the ""Sign Up Now!"" button, you should switch the order of the sign up and login page.  I think the user should be first treated to the login in page and then if they want to sign up, they can click the sign up button and be directed to the sign up page.  Second, I think you should reconsider the way you are handling user roles.  While I get what you are trying to do with setting roles other than then Admin to a Boolean, I think the functionality to determine a user's role could be condensed to one column in the Users table.  For instance, you can make the User's role a string and maybe have the User select which role they want to sign up as.  Alternatively, you can use the Boolean values to display text that displays the"
1,"The UI is aesthetically pleasing in addition to being intuitive.  A usability suggestions would be to add a ""Log in"" button next to the ""Sign up now!"" button.  Even though there is a Log in link in the upper right hand corner, the appearance of log in/sign up options appear together on similar web applications I have seen."
1,"The application interface is good, sparse but easy to follow. There are some missing functionality buttons. I cannot seem to find a logout feature/button, nor an apply button when viewing an open job listing. I would suggest including these two buttons to make the user interface with the system more intuitive. I am also not sure which/what system you are using to deploy the production version of this system but I would also suggest updating the URL to something more human readable if possible. Overall a good job with room for improvement. I really like the table view you added to your index and show values, where there are lines separating the cells."
1,"The application was very intuitive to follow through  and also was visually appealing . Log in  button if present in the central view , would have been better


 Back buttons if present would be helpfun in navigating"
0,UI is concise and easy to understand and the admin account information has been involved in README.
0,The signup webpage keeps telling me that my Linkedin URL is wrong while I was entering a real Linkedin URL.
0,Overall pretty easy to user. Would be nice to be able to quickly switch between pages instead of having to go home every time.
1,"Good number of tests in the test folder. They mostly focus on the controllers, and the happy paths of the controller. Would recommend including some tests that are expected to fail, and edge cases. Maybe include some user interface testing as well via Capybara."
1,"The application is deployed successfully to the AWS cloud.via IP. Visually, the application looks good! everything is very intuitive, and the design is easy to follow.  The read me is a little bland, but gives just enough information for the user to get up and running."
0,"No, apart from the built-in tests, there are none. But as the README file indicates, the team is working on it."
0,The UI is very good. Description should be present in the readme
0,No tests have been made for both a model and controller at the moment.
0,Testing appears thorough and follows best practices to my knowledge.
0,I cannot find code for testing.
1,"I see test cases for the functionality, but do not feel that it is thorough. My definition of thorough is that the tests are coded to all the bullet points for a particular role/table in the program description."
0,testing is yet to be implemented fully
0,"Some functionality were missing and could have been well tested.


For example,


1. In the user sign up page, when the admin logs in as user, the header of the page has ""Admin"" written two times.


2. The ""Logout"" button could have been put on the right hand side of the page header instead in the left hand corner in between the type of User."
0,"Yes, they do, but one of the members seems to commit much less than other members."
0,"I didn't see any tests in the test folder, and I couldn't find any spec folder for Rspec either."
0,"They have wrote 4 controllers for users, jobs, applications, companies respectively testing actions such as index, show, destroy, etc, but no model test."
0,"Yes, as can be seen from the commit history and the messages, the team pushed changes onto the repository throughout the project period."
0,Controllers are tested with what looks like generated tests. No models tested.
1,"Yes, the team did thoroughly test at least one controller.  Take for example the ""test/controllers/companies_controller_test.rb"".  Here, the team has successfully and thoroughly tested all of the crud operations associated with the controller.  They have not however tested any of the models.  This should be done!  here is some documentation on testing in ruby on rails that you might find helpful. http://guides.rubyonrails.org/testing.html"
1,40 commits but seems only two people work on this project
1,No mention in github readme. However you can use Rspec if you havent and mention it in readme.
0,Many commits  over the past week.
0,Yes.
0,The git hub pushes were regular
1,"There are consistent updates, and it seems like there may have been pair programming going on. I see multiple commits per day, and they each have detailed names and comments on them. The only thing I can suggest here is maybe some more evenly spread committing from all teammates. Very good job on this."
0,"Yes, they has one branch with 76 commits from about Feb 18 to Feb 27."
0,Code frequently committed over the course of a week.
1,"Yes, the team did an excellent job pushing continuously thought the projects life cycle.  It appears they have committed 84 times which is a lot!  This is an effective way to make sure that everything is implemented in small pieces, and that it is not all implemented in one big chunk. Implementation in small pieces allows for the project to develop more fluidly, and is less prone to error.  Good job!  One suggest I have with regards to pushing, is using issues.  Using issues helps to segmentation the project, and allows for chunks of code to be pushed toward an issue.  This is something my team did not do either, but we are going to try it in the future.  Maybe consider using github issues in the future as well!"
0,There are git commits for every new feature implemented. The git documentation can be more refined.
0,"No extra features have been implemented so far, and I am not able to create a job and hence am not able to verify if the person receives a mail or not"
1,All the main models and views have been thoroughly tested. The naming convention for tests has also been properly followed. Good work!
1,"The team has thoroughly tested almost all models & controllers. Multiple test case have been added for each model. All field validations have been tested.


Extra credit features have not been implemented."
1,"The model does not look to be thoroughly tested because , for example:


1. When I keep on clicking the back button, after it takes me out of the application, then when I click on the forward button , it logs me back in without authenticating the credentials


2. Even while , signing up as an job seeker, the company dropdown is enabled which should only be the case when a recruiter is logging in"
0,The GitHub pushes were not that frequent
1,"Pros:


- Good number of commits at regular intervals.


- Good and balanced contribution by all the team members.


- Clear commit messages.


 


Suggestions:


- Try to work on multiple branches."
1,"The base edits were done two weeks ago and after that each edit was done prior to the last submissiond eadline. However, a consistency has been maintained in pushing changes. They have pushed after implementing almost every single feature, so it helps to track the files changed in every edit"
1,"The team has been pushing changes throughout the project period, with the number of commits increasing steadily as the deadline approached (perhaps you guys needn't push everything to the last minute next time). All 3 members have contributed more or less equally. Good work!"
0,"1. The code follows good ""Ruby on Rails "" coding practices"
1,"Pros:


- Good number of validations added for each models.


- Proper naming conventions used.


- Proper relationships described between each model.


 


Suggestions:


- Add comments to explain the code."
0,The code is well-formatted and concise
1,"Variable and class names have followed the standard naming conventions, and the models have extensive validations. However, I think the views have a lot of ""if-else"" statements - we've learned in class that most of the code should be in the model. It's probably easier to write code directly in the views, but it might not be very maintainable in the long run. Another thing that I noticed is that you guys have used an integer to represent user type, and check for the type of user in the view to render certain elements on the page. I think it would be better to use an enum in place of the integers - that would make your code more readable. 


Other than that, I think you guys have done a really good job writing code and documenting it!"
0,"The User interface is not that easy to navigate. For example take the following examples:


1. While logging in as an job seeker, the first user page that he encounters is cluttered and not easy to navigate


2. The ""Logout"" button is top of the ""Home "" button


3. While logging in  even as an job seeker, the the companies dropdown is available which should not be the case.


 The ReadMe file is well documented"
1,"User Interface Pros:


- Simple & easy to navigate.


 


User Interface Suggestions:


- In signup page, hide the company field if user type is selected as job seeker, and hide phone number field is user type is given as recruiter.


- Successful sign up message is displayed twice. Remove one.


- Align the text and fields to make it look cleaner.


- Add basic styling.


 


README:


- Very well written with clear headings and descriptions.


- Admin login credentials are given in the beginning as needed and is hard to miss."
1,"I was unable to login into the system using the username and password provided in the README file for admin.


The link given for linkedin form format in the README file is not working"
0,"The README file is very well written, with clear instructions on how to carry out actions. 


The user interface is minimalistic but easy to use. The buttons work the way one expects them to work, and the form validations are on point.


However, I noticed that there are some buttons such as ""deleting a company that a user is not a part of"" that is displayed for every recruiter or job-seeker. While you guys do generate an ""Access denied"" message if these buttons are clicked, I think they need to be displayed based on the type of user that is logged in.


I also think you can try and change the layout of the buttons a little, to make the pages more appealing."
1,"1. The name ""jobapplications_controller.rb"" doesn't conform to camel style which should be ""job_applications_controller.rb""


2. The code in views/users/new.html.erb and views/users/edit.html.erb are the same, so they can be extracted and put in _form.html.erb in order to avoid duplicate code."
1,"Code is  not hard to understand.


I see what you are trying to do by using another model ""role"" to classify each user. And in users_controller, you have CRUD for jobseeker and recruiter. I don't know if this is a clean way to do this.


https://codepany.com/blog/rails-5-user-accounts-with-3-types-of-roles-devise-rails_admin-cancancan/


Check out this post. I think it is helpful.


I am not a big fan of cancancan. I recommend pundit."
1,"1. The Code was written with good Ruby and Rails coding practices.


2. Comments could have been included in the code base for intuitive understanding of what each method in a controller does, i.e to what functionality a method performs when invoked."
1,"There are some instances where you can implement a more DRY approach, look at users_controller line 24 - 35. Each of those 3 functions does the same thing, why not make a generic method to show the users? I would also like to see more being done in the models rather than in controllers. Overall the vast majority of the code seems to follow good practices, I did not notice many glaringly obvious issues or code smells. The work here is good but there is a good room for improvement."
0,The code follows the good ruby and rails coding practices. It is well defined and not that hard to read and understand.
0,The code seems to follow good ruby and rails coding practices.
0,"Code seems to rely heavily on complex if statements and JAVA-like style. However, in general, the code follows a structure of a good RoR program."
0,Ruby and rails common practices seem to be withheld both ins style and in the model-view-controller architecture.
0,"1. They didn't update the README file because they still say their app runs on http://localhost:3000.


2. The buttons on home pa"
1,"1. The ReadMe file could have been better.


For example there were two admin login credentials"
1,"A lot of effort went into the user interface and it shows. It is much nicer looking than the generic rails views, well done. I especially like the forms highlighting in red when there is a bad input before the user even has to submit the form. However, this could be improved by also outputting a message while the box is highlighted with what rules the current input is breaking. For example when creating a new user as an admin the password field will show an error when under a certain number of characters, but the user wont know why. Another thing I might suggest is shortening the length of the text input boxes, they don't need to be across the entire screen (specifically I see this in the sign up/new users pages)."
0,"Cannot see the UI , seems to be a problem with the server."
1,"Interface is relatively clean and easy to read. The main page has many links 'crushed' up against each other, but every other page is relatively easy to read and simple to use."
1,"For what works it is pretty easy to use and works well.  There is one MAJOR flaw.  I keep getting errors when I try to create a job recruiter or job seeker.  Because of this I could not check most of the boxes below.  While there already might be users in the system I did not know their password (besides the admin) so I could not check recruiter and job seeker functionality.  Overall though.  The admin seems to be fully functional, except there should only be one admin."
0,"I don't see testing has been done yet. Don't worry, we haven't done it yet either."
1,"There were some testing lapses in the functionality.


1. For example, Phone Number validation was not correctly implemented. A user can be created even with an in valid phone number like ""919""


2. While a new company is being created, the ""Founded"" and ""Size "" fields are are using a numeric increment-er, which is even taking negative values for the Year and Size fields"
1,"There are some tests in place but they mostly seem to be testing the happy paths on controllers. I don't see many tests in the models folders where the business logic should be being tested. Could also implement RSpec, maybe capybara too."
1,There are some things missing in each of the controllers. But these can be easily worked on.
0,Team needs to test the model and controller properly
0,Yes! The jobs model/controller seems to be very tested. The reason I did not give 5 is because I was never able to test with a job seeker/recruiter so I am not sure how it does with these users.
0,They did a better pushing job than us.
0,Yes the GitHub pushes were regular and consistent
1,"Several commits a day, multiple team members committing, good use of branches for bug fixes. I see a few commits by EC2 default user, not sure how to count those in whether or not the number of commits was fairly even among team members. Overall very responsible with committing changes in small incremental steps rather than 1 big merge."
0,The team seems to have commited on git plenty of times.
0,A few changes were made but no one has published for a few days.
1,"1. You can combine job_seeker and recruiter somehow into an entity like user, which I think would lead to less duplicate code.


2. Some statements in controllers/recruiter_controller.rb can be extracted and put in a private method, e.g. current_user = User.find_by_id(session["
0,The code follows good ruby and rails coding practice. It is readable and can be easily understood.
1,"Your code on Git looks good so far.  Most of the code that you have written seems to be similar to the scaffold build in RubyMine alongside code that you have written yourself.  There are a few minor issues regarding some of your Ruby files that could be improved in terms of ""good Ruby and Rails coding practices"".


First, you should look back at your code and double check that your instance variable names correspond to the action(s) it is storing information in.  For instance, in your recruiters controller, all of your controller actions except view_jobs are storing a recruiter user as @recruiters.  You should only keep this pluralized name if you are gathering all recruiters from the database.  Otherwise, you should use a singular name like @recruiter for the new, create, and destroy actions.  Not only will this help differentiate in terms of what actions handle one or many recruiters, but it will also be easier to use each instance variable for other classes."
0,The code is neat and easy to understand. Have followed the practices that are considered good.
0,The code in git is clean and easy to follow.  The use of enums in the model file for job_application status shows proper placement in a central and single location.
0,Default testing along with additional tests related to models and controllers has been done
1,There are enough number of commits to justify that the team has constantly pushed their changes onto GitHub
0,"90 commits by a 2 person team, very thorough in commits and updates. Good work"
0,Yes the team has continued to push changes continuously.
0,The team kept on pushing their changes throughout the project period. The number of commits is also good that is 90 which is clear indication that the team is working on the project throughout the project period.
1,I am not sure if the team has only one member. I could not see other people's commit.
1,"The code followed the good Ruby and Rails coding practices. The code was well maintained. The code implemented almost all the functionality. But here are some points that I observed could be improved.


Points to improve


1) When the admin tries to create a user for the first time it pops up an error but creates the second time we create the user.


2) The URL could accept standard conditions or display appropriate messages to guide users in entering a valid URL.


3) The revenue field in a company is taking 0.0 for every input provided.


4) The job seeker also has a field company."
0,The code follows good ruby and rails practices.
0,Yes the code on git follows good ruby and rails coding practices.
1,"Very intuitive, the views are nice. The home page buttons could be space slightly better but there is nothing wrong with them. For a few forms (user sign up/create/update) if you try to put a password that is too short it crashes. Update this so that instead it gives an error and tells the user what to change and to try again. On users there is also no validations for your phone number field. Please update the color of text after the buttons have been clicked, its hard to read them. I really like the Jobs in this company portion of the company show view, same for applications and jobs. The job seeker application process is a bit wonky, would add an apply button to job show and index."
0,"The user interface is elegant and well designed. The navigation is easy but could make some changes to make it easier. Like guiding the user to enter text fields in an appropriate format. 


The README File contained information about admin login details and deployment details."
0,The interface is easy to use.
1,"Buttons on the main screen is not that user friendly.(becomes grey out after 1 use).


applying to a job is not straightforward."
1,"The spec folder has tests for the search controller and the user model. the tests are okay, they cover a decent amount of the possible paths, but they are not fully tested. The test folder contains the scaffold created tests, I do not see any team added tests in these files."
1,The team made good effort to test all the functionality of the application. They tested the models and controllers but there are some functional issues which I have mentioned in above review comments.
0,Models and controllers need to be tested.
0,"Follows good ruby practices. The variables are stores in snack_case, the models contain the business logic, the controllers implement the CRUD functionalities, and the views are mainly there to provide the UI not to perform business logic."
0,The default tests which are generated after running scaffold has been implemented.
0,The user interface is very easy to use and attractive. The interface displays all the required information and links so that the user can easily access the application.
0,Cannot find code for testing.
1,"There are some inconsistencies which were observed. For example the admin cannot edit application information,only the applicant can do so. Similarly the recruiter cannot destroy a company, only the admin can destroy a company. An applicant shouldn't be able to edit jobs which is being done here."
0,The code on git follows good ruby and rails coding practices.
1,"The naming convention has been well through out


The indentation has been taken care of


There is a bit of Java style which has been followed for example array assignment in seesions, that could have been done a bit better but overall a very good code"
1,"Your code on Git is very organized and everything based on what I saw follows good Ruby and Rails coding practices.  I like how you organized your views for the admin, recruiter, and job seeker in separate folders so that you demonstrate specific functionalities for each User.  Your models look good also.  I noticed that for models like company and job that you don't have validations for your attributes to check if they are present or not.  While it's not a major issue, I think that you should be checking if the user actually enters in information to create a Company.  Otherwise, you are allowing the User to make blank Companies and Jobs associated with blank Companies, which would not be a good idea in a real world setting."
0,The decision to make separate controllers for each role has allowed the team to separate business logic related to the different roles.
0,The code is well written and formatted.
0,The code has followed good practices but readme needs to be more informative.
0,"1. README looks like a sample text file not being revised too much.


2. The user interface is not friendly, no ""back"" or ""home"" button for me to go to other pages."
0,"Yes, the application is easy to use."
0,"The Readme file gives a great deal of information about what the project is, who the admins are, how to start the project and what each role will do and what their functionality will be. I liked the way they have systematically given everything."
1,"User interface was very easy and intuitive!  Well done!  There were a few things I noticed and tested that I was not able to do below.  I was not able to view the admin's profile due to a NoMethodError which states that the user is not associated with a company.  When logging in as a Recruiter, I am not able to delete any of jobs he/she created due to again, a NoMethodError in which the user_id does not exist.  Finally, while I was able to view applicants as a recruiter that posted an application for a job, I was not able to update the status of said application.  Besides those, most of the functionality is present and the page routing looks efficient!


Some minors things I have with the program.  While I don't mind the switching of user roles, it would be good to have this done when the user edits their profile so that one user is associated with one role.  Alternatively, you can keep what you have, but only show the switching of job seeker or recruiter if th"
1,The screen real estate is used well.  Switching between roles is easy.  Using table borders in the View All pages would make the pages easier to follow visually.
1,The UI is pretty easy to understand but navigating through the pages is a bit tedious. Admin account has a lot of loopholes if a user is deleted. The readme is very well described but the navigation still is tedious.
1,Navigation is a little tedious as some pages do not have Back option So interlinked links are difficult to get back to. Readme file is well described.
0,The UI is pretty easy to use. Can use more colors and components for UI.
0,They got some code in the test files but I think they didn't run it to find out most of the bugs.
0,"The recruiter model has some errors being displayed on the screen. For example, while viewing jobs posted by the recruiter, an error is displayed on the screen. Due to this, the recruiter cannot perform many of the tasks which he/she should be able to."
0,"Other then default controller 


Job application controller has been throughly tested and looked into, regex match has been looked into"
1,"Thoroughly tested at least one model and one controller by Rails testing.  If any of you are doing unit testing for the OSS project, I highly recommend you check out RSpec and practice writing tests on your application as practice so that you can use it for your OSS project."
0,There are some tests for the job application model.
0,The team has tested the applications model and applicants controller.
0,"Yes, the team has tested models and controllers for respective functionality."
0,It looks like they just started it from six days ago which means they don't keep commiting during the period.
0,The changes have been pushed regularly.
1,"the amount of commits is around 144, which does state the work has been continuesly pushed into but some of the later commits have been just about readme, but still the team did a good job in keeping the commits on time"
1,"Based on the number of commits, it looks like a lot of your commits for the final submission week happened on the due date and after.  While that's fine since you all contributed to the project, I think all of you should try to at least work and commit your changes every 2-3 hours a day so that you don't overwork yourselfs with getting everything done the day of submission."
0,The commits have been fairly consistent throughout the project.
0,There are a number of commits but most of them done on the day of deadline and a few after.
0,Regular updates are done. Can go through bugs and change their code.
1,"The code is clear and easy to follow. However, it is pretty much the basic code generated by scaffold generation. In the authorize method of the application controller, the notice just says ""XYZ"". This could be changed to a more specific message.The homepage controller has only two empty methods, create and new. This implies that its function is just to manipulate the views. I feel that this could be implemented in the user controller itself instead of creating a new controller for it."
0,"Pros:


- No violations of Ruby on Rails coding practices.


- Proper naming conventions used.


 


Suggestions:


- Validations need to be added. (regex, empty values, etc.)


- Relationships should be defined clearly. (eg: has many, belongs to)"
0,"The code follows good Ruby on Rails coding practices. The code implements most of the functionality. The code was maintained properly in Git. However, There are some functionality issues that I have come across during my review process. They are


points to improve


1) The job seeker is associated with a company by default which needs to be changed.


2) The recruiter was not able to see the applications that the job seekers have applied."
0,The code follows the good ruby and rails coding practices.
0,Code followed mvc architecture . code followed the basic steps / conditions for rails application
0,The code follows good Ruby on Rails coding practices. The models clearly describe the relationship between different tables of the schema and contains validations including regex validations for email. The controllers contain code for basic CRUD functionality. The views do not contain the logic and are used only for displaying necessary information to the user. Two space indentation was used instead of four space indentation. The team used DRY concepts and I couldn't find code duplication. The only odd thing was an empty homepage controller and also no validation for website field of company.
0,"The author does a good job following ""good Ruby on Rails coding practices"".  Their controllers/models area ll indented with 2 spaces and ""each"" is used instead of ""for"" when applicable.  most crud operations are documented well, but as a whole, the documentation could use a bit of work.  I have suggested it to a few teams now, but using Javadoc really helps with code readability by giving the reader a better understanding of what the code does.  It also helps give the reader context, by explaining the parameters that go into the function and the return value that comes out of the function. If there is one suggestion that I have for your team in the future, it would be try javadoc.  Here is a helpful resource regarding javadoc and how to use it! https://dev.liferay.com/participate/javadoc-guidelines"
0,"The README file contains login credentials for admin. There is also information about the implementation all bundled into one paragraph. This is however just the specifications given as part of the project. It could contain more detail about how to use the app rather than listing out what has been implemented.


There is no Home button or Logout button on all views so it becomes difficult to navigate through the application."
0,"User interface is very simple and basic.


 


README can be formatted better with subheadings and bullet points. It is hard to read. Doesn't explain all possible things that can be done in the application clearly."
0,There is no user interface. All the actions can be performed through links. The user interface could have been much better. Like using stylesheets to make the interface elegant and smooth.
0,the application was easy to follow through
0,"Deployment:


The application was deployed on the Heroku platform and the corresponding github repo was also shared. The deployment was done properly and I had no issues opening up the application and running it. As soon as I clicked on the deployed app link, I was redirected to the home page of the system, which was the login page. The database migrations were also done properly as I was able to register and login.


 User interface:


The user interface was minimalistic and easy to use. Everything was self explanatory and most pages were linked properly. Only the back button of the view job applications page was wrongly linked, otherwise everything was fine."
0,"Yes, the application has been deployed successfully.  The user interface is clean, and though it is a little bland, it is easy to use.  The ReadMe is helpful when getting up and running with the application.  It does a good job explaining how to login as an admin and such.  One area I see for improvement still is in the readme layout and styling.  Github allows for the use of markup to style and edit readme and wiki documents on github.  This is a great tool for creating tables, headers, and bullet points to help make documents more readable.  If I were to give your team one suggestion moving forward with this section, it would be to give markup a try to help make the ReadMe and other documentations more readable.  Here is a helpful resource regarding markup shortcuts, and how to use them!  https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet"
0,"No, the testing has not been implemented."
0,"Extra credit features have not been implemented.


Testing of one model and one controller has not been done."
0,The models and controllers have not been tested properly. The code for testing the models and controllers is not present. The could also have developed the testing code.
0,"The admin model hasn't been tested at all. The configured email and password is not being authenticated.  When the show button is clicked while viewing the company/job information , the recruiter is being able to edit the job &/ company info even if not belonging to that company. Furthermore, if a recruiter leaves a company, the jobs created by him/her are retained and can be edited/destroyed by the same recruiter which shouldn't happen according to the spec file. All these things should be take care of . You just have to put certain conditions in the appropriate views to display links to certain pages."
0,no clear implementation of testing was found
0,"I could see that the team had tested four controllers, namely, companies controller, job applications controller, job posts controller and users controller. However, none of the models were tested."
0,"most of the controllers were thoroughly tested so good job there!  That being said, It does not appear that any of the models were tested.  In the future, model testing should be done!  Also, javadoc would be helpful when writing tests, as it allows readers to better understand what each test does.  I would suggest trying to javadoc tests in the future.  Here is some helpful information on testing in ruby: http://guides.rubyonrails.org/testing.html"
0,All the 6 commits are made at once on 03/02/2018. The changes and progress made are not reflected in the repository.
0,"Cons:


- Very few commits done


- Entire project has been pushed in one commit


- Did not work on multiple branches


- Only 1 contributor"
0,It seems like the team have been working offline and pushed the code into git after all the code has been developed. There are only 6 commits. The team pushed their changes once a while.
0,The major problem which was observed during the last review still exists. There are few commits to judge the changes which were pushed through in the given span of time.
0,very few commits were found during the complete developmnt process
0,"There were only 6 commits in total, that too by one person and four of those commits were after the deadline. For future projects, I would recommend to start pushing early and have more frequent commits. This will ensure continuous integration practices are followed."
0,"It does not appear that the team pushed many changes to the project as there were only 3 commits to master.  Committing and pushing to github regularly is helpful for many reasons.  One, it makes building a large, shared application much easier as everything can be built in little bite sized pieces.  And two, it helps the rest of the team know what is going.  Github provides two really helpful features I suggest you trying to use in the future.  These are branches and issues.  With issues, you are able to lay out a plan for your project and assign little pieces of the plan to each of the members of your team.  This way, everyone can contribute, and knows what everyone else is working on.  Branching is helpful, as it allows you to make a new branch for each issue.  This way, when you are merging into master, the only changes that need to be reviewed are those that are contributing towards a specific issue.  This makes it easier for the reviewers to unde"
1,"In the companies _form view there is a long list of options to select that are placed on subsequent lines and im unsure if thus would count as good practice. I dont know if the good coding practices include the logical if statement within the jobs index view page, as this sort of style is well known to be used in other languages such as Java or C. Throughout the models, there seems to be a great use of ancestry to create the relationships that make the MVC idea work well. Within the controllers, i can see that you all used the relationships between the controllers and views well, to create the logic for searching through the list of jobs in the jobs_controller ruby file.


After looking through all of the project, I think you all showed pretty good instances of rails design, though im unsure of a few matters. Truth be told, i think my group did a similar type of if conditional, just wondering myself if a better option is available."
0,The code follows good ruby and rails coding practices. They have maintained the required MVC structure.
0,"They create really similar models and similar controllers. Controllers, like admin, job seeker, recruiter could be just one controller. Models, too, like, auser, ruser, user, jobseeker, recruiter, admin could be just one model."
1,"The team has followed good Ruby and Rails coding practices. The code was properly maintained and well organized.


The team has improved a lot of functionality changes when compared to the first submission. There are so many functional improvements. I observed some other changes that need to be added/improved to make the application much better.


Points to improve


1) Headquarters should have been a text field instead of existing states.


2) Company field could be dropdown of existing companies.


3) Website Url validation regex could be much better to accept different types of website URLs.


4) Job seeker account cannot be created from admin.


5) The Recruiter was able to publish jobs for any company.


6) The Recruiter was not able to view applicants for a job.


7) The job seekers functionality is not implemented. Like job seeker is not able to sign up and login etc."
0,"From the looks of it, the team followed good ruby and rails coding practices. The controllers were simple and easy enough to manage. However, they seemed to have been unchanged from the one the the default scaffold generator makes. The models also seemed pretty standard (they give associations and validations in the models). The team used the models. Unlike the other teams' work that I have reviewed, this team defined a functions in the model for other part of the app to use, which is definitely the ruby on rails way of doing something. The example is job.rb. The team also made their veiws straightforward. THey mostly avoided using ruby code in the views, which kept things nice to look at. Overall, the team used the MVC well."
1,"Naming does appear to have taken care of, every controller name gives specifically what it doing like the widget contoller or static page controller,


I would suggest that that the admin, jobseeker and recruiter controller should have been clubbed and formed as a user controller, it would have been better


I would suggest using before_action even in job application controller


Naming is good and one can get a clear picture of what it does


comments is something i didnt find"
0,The code is easy to understand follows the good ruby and rails practices.
0,"Yes the code was well written. It  followed the MVC architecture , and functionality was also goof"
1,"The code is well structured throughout. Proper naming conventions has been used for variables, classes and methods. Most code is self-explanatory and commenting for code not auto-generated by Rails isn't necessary. The access specifiers have proper indentation for the code following it. Devise has been used for authentication. So everything good there.


However, devise authentication hasn't been used the way it should have. Roles should be used to manage access to certain pages. Even a recruiter can view all users of the application via the url. Also, there is some redundancy in the code like creating multiple views for each user when it could have been done using one."
1,"Y'all seemed to use good ruby conventions/practices including the model-view-controller architecture and the coding syntax.  In addition you had a large number of commits from different people. You did not use the ""issues"" tab from git but I don't view that as a necessity but it would have been nice to have (still gave you full points)."
0,"The UI is rather understandable, though i'm not sure what happened with the Job Seeker functionality. Perhaps it wasn't able to get working, but it doesnt seem like they can do anything but edit their profile from what i saw. Other than that, I had no trouble, and i like the way you all listed the actions that could be taken down the page. It made it easy to locate the option i was looking for, as well as telling me who was logged in at the top of the page."
0,The user interface is quite user friendly and display all the required information. Although for the Job seeker the views lack certain links apart from that everything else works just fine.
0,"The user interface is a little bit confusing. Especially the part, where admin creates new jobseeker or new recruiter, who is actually logged in at the end? Both the admin and new created user?


And it seems like when admin creates job seeker, the email in the job seeker's profile is not the one admin just used to create the account.


README helps a bit. Just feel it is an interesting design choice.


I think it is because of the cross model visits. The same link would trigger different behaviors. (such as if admin creates a recruiter, and tries to create another one, it won't go back to the signin page anymore, it will just go to recruiters/new). Here is a solution I found (point 6):


https://github.com/plataformatec/devise/wiki/How-to-Setup-Multiple-Devise-User-Models


 


And for a job seeker to be able to view companies and jobs, he needs to type in the url by himself."
0,There is no user interface. There are links to perform actions. The user interface could have been much better.
0,"I tried to login as an admin, but I got the error below. I also got the same error when I tried to sign up as either a recruiter or a job seeker. As a result, I could not test this app well. However, from the looks of it, the UI seems to be a little too complicated. For example, there are 5 links on the login screen, each of which allows the user to login as an admin/recruiter/job seeker or sign up as a recruiter/job seeker. This seems excessive and the code could definitely made more DRY.





We're sorry, but something went wrong."
1,"The outer view does appear to be a bit un designed but, that wasnt the objective so its ok,


The view is clean, it gives enough information on whats going on and what actions are possible


Its a bit complicated in understanding what create recruiter means after i have signed up as recruiter, it creates a bit of confusion


there should be a option of having no company even for the recruiter


The readme is pretty descriptive"
0,The UI is intuitive to some extent but some times it is difficult to navigate as there is no back button that is consistently present in all the pages. The readme briefly but precisely explains what is expected of the application.
0,The user interface was clear to understand
1,"The application is deployed on Heroku and admin details and certain applications details are provided in the README file, so that's a plus. The interface is simple and nothing fancy which is alright since that is not the focus of this application. However, the interface is lacking the navigation and fluidity that it should have. It could have a single log in and sign up rather than having multiple options to do so based on role. Also, the job seeker doesn't seem to have any options but to update profile."
0,"User interface is a little hard to use. Having sign in/sign up options for different roles is confusing.  Would be nice just to have 1 sign in option.  Also the searching of jobs for a job seeker is not working for me.  But overall, seem to have most of the functionality working"
0,"No, it seems all i could locate is the scaffold created controller tests that test basic functionality, and empty model test files. It does not seem like they implemented anything of the sort that I believe was required."
0,No code for testing is seen.
0,They did use rspec to do the testing. But the testing is not that thoroughly. Only one test case for model widget. I didn't really understand the purpose of this model widget.
0,The team seems to have tested the models and controllers but there is no testing code implemented to test models and controllers.
0,"The team seems to have tested their controllers. However, the test for the controllers is very similar to the default ones tat are created by the scaffold generator. Furthermore, none of the models were tested."
0,"They have used rspec for widgets which is something i found good.


Default test cases found only for controller


I was not able to find test for models, i did look into rspec and test package"
0,couldnt find full testing though rspec was present
1,"Default test cases are available for Controllers in the test folder. The team has used Rspec for testing which is good. However, it would be helpful to test one of the important models like Company / Job/ Applications."
0,Yes the company model/controller seems to be thoroughly tested.  All functionality seems to be avaliable
1,"I think the range they committed from was pretty good, since they committed through two weeks the majority of their commits. They committed slightly more than half across the week of February 18th and the rest basically one day in the next week. Perhaps that could have been spread out better, but other than that I think they showed a good push history."
0,There are enough number of commits to justify that the team has constantly pushed their changes onto GitHub.
1,"They have 54 commits, and 2 branches. But I think they mainly work on the master's branch, which is not that a good practice. But I know it is hard to integrate work."
0,The Team has got a good number of commits that is 54. And the team also made several changes throughout the project.
0,"The team seems to have started on the project very recently (Feb 18). However, they seem to have been making a lot of commits to the repo since then. To be exact, the team made 44 overall commits to the repo, with the last one being 5 days ago."
0,"There was a gap of almost 6 days between last commit and prev one, which does seem a bit odd, but after careful looking into it, it was just related to bugs so it does show they looked into the errors and rectified them. Commits do seem to be evenly distributed"
0,The team has been consistently pushing their changes throughout the term of the project.
0,Continuous commits were observed
0,"The number of commits on Git is impressive. It looks like the team has been working on it regularly. However, the number of commits by each member of the team is skewed and it does not seem like the work has been divided equally. This could have been justified by stating what work each member did in the README."
0,"Not really.  After the initial due date there was period of inactivity and then some inactivity for 1 single day.  I don't necessarily think this is bad if there was not much to fix but considering some things could still be fixed in this, I think it could have been worked on a little more."
0,"1. The code in users_controller.rb can be dryer like what it looks like in other controller files. Extracting User.find params[:id] and params[:user].permit(:first_name, :last_name, ..) to become new private methods and then call these two methods from the public methods.


2. The if statements in update method is a little bit hard to read, maybe in this situation, you can add some clauses between conditions to make it easier to read."
0,"Yes, the code followed good Ruby and Rails coding practices"
0,"Yes. Did not find any ""bad"" Rails coding practice."
0,"It seems no big problem. They followed the naming convention, properly used partials in views. Code is clean and well-written.


Maybe I can give a little advice:


If you do not need some actions in a particular controller, for example you do not need edit and show actions in dashboards_controller, then you do not need to write a blank method in it which may raise some issues when a user try to access them by URL, and instead you can write:


resources dashboards, only:[:index, :new, :create, :update, :destroy]"
0,1. test modules were made for every module
0,"The code is well structured throughout. Proper naming conventions have been used for variables, classes and methods. Devise has been used for authentication which is good. Most code is self-explanatory and commenting for code not auto-generated by Rails isn't necessary. The updates have been consistent with Ruby practices and MVC architecture.However, as earlier, in controllers, after mentioning an access specifier, there should be an indentation. For eg: In Companies controller, after line 75 that contains the private access specifier, there should be an indentation for the code that follows. Also, the companies/index.html.erb in views contains redundant table rows. Eg: Line 41-48 of users/index.html.erb.Overall, Ruby coding practices have been followed well."
0,The code is developed in very good standards and the readme is very informative.
0,The information in README is abundant and the user interface of the app is intuitive.
0,"Yes, the User Interface is very easy to navigate. And I also liked the online/offline indicator in the top left of the page panel"
0,Yes. Very intuitive and self-explaining UI.
0,It's much better than I saw last time. Apart from the functionalities specified in the requirement they did a lot extra user-friendly design. The slide bar on the left is quite intuitive for different roles and you can easily find and perform all functionalities that you want to. There is always a friendly flash shown above when you change something. README is exhaustive and covered every functionality they have implemented.
0,very clear documentation
0,The team has done a great job in terms of the UI. The application is deployed on Heroku and README file is very well detailed out. It includes information about what the application is capable of and what it is not. So no issue in testing the application. The interface is more than what was asked for and hence is appealing and intuitive. I loved the way there was a sidebar giving the user necessary options.An improvement could be that all options be listed out in the sidebar since initially I thought there was no way to view other users or applications. Another improvement could be to do an authorization check on the view level instead of just on the controller side. This would hide options such as 'Create'/'Edit' when the user is not allowed to. But I don't think this should result in any deduction of points. Great job!
0,Since the last review the UI has changed a lot. It has become easy to use and very informative. However some button links such as create a new job is present to job seeker. Using IF condition u can remove that.
0,"Yes, the team has tested at least one model and one controller."
0,"Have the basic testing functionality like create, destroy, show, edit etc."
0,Company model is tested by RSpec and almost all controllers are tested by rails test.
0,"yes, all modules have test controllers"
0,"The team has tested the company model thoroughly via rspec which is good. They also have the default test cases that are generated for the controllers in the test folder. However, I feel that is not sufficient testing for a controller since it is essentially the 'brain' behind the company model. Well done to the team for taking the extra step of being honest in their readme about how they've gone about it."
0,You have tested only the companies controller and mentioned in the GitHub readme.
0,"Yes, but it seems that almost everything is done by one person because most of the commits are done by him."
0,"Yes, the team were very frequent with their commits"
0,All commits in a span of last 2 days.
0,"3 contributors and 44 commits from 9 days ago but with only one branch. This is not quite agile, maybe next time you may consider ""write in respective branch then merge into master branch""."
0,most of the changes were done by one person only
0,"The number of commits has gone up from 11 to 44 since the last time this was reviewed. This is good, however it seems only one person did most of the commits. As mentioned in their readme, most of the work was done through google drive, which is not good for a collaborative project. However, had the team pushed code equally among all members, one would not lead to believe that one person did all the work."
0,Yep regular updates seen throughout. Good practise of keeping up with the project. However there is only 1 branch present
0,"In the jobs_controller.rb file I see if statements that were checking a negative condition in the search method; for this type of set up, 'unless' could be used as a ruby term to represent that negative condition better. Also this if structure seems reminiscent of Java or C, and could potentially be done in a better way. I do see good use of the sessions_helper.rb file in the project, which I have come to appreciate through the completion of my own team's project. Helper classes can be very useful to return functionality with great coding practices. The models have the good ancestry and relationships set up between models, to allow the sort of functionality needed in the system. The homepage index view file seems to have a lot of embedded ruby code, which I believe is not indicative of good coding practice. I think some of the functionality, such as figuring out which type of user is signed in, could be levied to the controller, where you then use what the controller returns to decide how the view responds"
0,The code follows MVC architecture and shows good Ruby and Rails coding practices.
1,"Your code still follows good Ruby and Rails coding practices.  Your models/views/controller look good in terms of functionality, establishing relationships between classes, and your routing from page to page.  I did notice some files that were blank as I was looking through your code.  For example, a few controllers like welcome_controller.rb and homepages_controller.rb contains just the template and nothing else.  In the future, you can individually make your own files in the terminal if you need just a model/view/controller (i.e. rails generate(or g) model Model_Name Model_attributes).  There's a scaffold I believe for models/views/controllers also if you prefer to use RubyMine's way of generating code."
0,"There looked to be Java/C++ conventions (for example, != """" instead of .blank? or .nil? and if blocks instead of if/unless at end of statement.  While not necessarily a coding practice, there was no validation of user access in the controllers, only the views.  Also more of a general Git convention, they uploaded things like tmp files that shouldn't be committed."
0,The ruby and rails practices are followed
1,"The code is well structured throughout. Proper naming conventions has been used for variables, classes and methods. Most code is self-explanatory and commenting for code not auto-generated by Rails isn't necessary. MVC framework was followed.However, in controllers, after mentioning an access specifier, there should be an indentation. This has been done in most cases however it is missing in the Applications Controller starting line 65. Also, you could have used Devise for authentication. Entire information regarding jobs/user/companies/applications was visible/editable/delete-able by any user which shouldn't be the case. Overall, Ruby coding practices have been followed well."
1,"You appear to have done a more then adequate job following ""good Ruby on  Rails coding practices"".  For example, in your controllers, all lines are indented with 2 spaces.  You have used ""each"" instead of ""for"" when applicable and all end points are documented in the controllers.  One thing that could still be improved is the javadoc or over all code documentation.  As a whole, it is a bit weak.  I would suggest checkout out this resource on how to javadoc methods.  Javadoc helps readability a lot by giving the reader a better understanding of what the method does.  It also helps give the reader context, by explaining the parameters that go into the function, and the return value that comes out of the function.  If there was one suggesting I would make it would be to work on javadoc in the future.  Here is a resource that you might find helpful!  https://dev.liferay.com/participate/javadoc-guidelines"
0,Wel written in ruby format. Naming conventions appear to have been followed.
0,"I think their UI was quite extensive in that I was able to locate every action I needed to verify. All of the actions were nicely listed and when I clicked on them they brought me to the logical next place in the website that tells me the information I requested. It was also nicely outlined in the README file, where you can locate the paths to test every single aspect of the website, which I think was definitely a nice touch."
0,"The user interface is very simple and easy to understand It provides the necessary links. But certain views are not properly detailed. Certain views show links that are not needed in that view, like a recruiter should only be able to view the available jobs there is no need to provide an apply link for the job for the recruiter view."
1,"Application is successfully deployed on Heroku platform.  The user interface is basic to function and is not too distracting despite not having any CSS styling pages.  Most of the functionalities for each User is present except for a few functionalities with a Job Seeker.  Your filtering system is present in the Jobs View page, but doesn't function when trying to filter jobs based on a company.  All I am treated to is a blank page.  One thing you could do to improve on your filters is to use a dropdown menu of existing items instead of asking the user to type in what to search for.  While this may not be good in the real world, for a small program like this, I think this is appropriate to include so that job seekers can easily find jobs based on available company information in the system.


The resume uploader doesn't seem to work even though I can include files while creating an application.  When I look to edit the page, it doesn't stay selected next to"
0,"It wasn't easy/clear to switch between jobseeker/recruiter role.  While technically possible, you had to disable one role to make it work.  As a recruiter, you couldn't see the companies in a list.  Job applications had no way to see the job they were connected to which made it difficult for both job seekers and recruiters to do anything useful with the job applications."
0,Readme file has been defined well.user interface could have a home button to make navigation easier and efficient.
0,"The application is deployed on Heroku and the admin details are provided in the README file and there are some more lines about the application. So no issue in testing the application. The interface is simple and gets the job done.However, that being said, it was difficult to navigate around because the admin could be deleted and thereafter I couldn't test further functionality of the admin. Also, the README says a user can login using gmail and receive notifications using a gmail id. But neither worked for me."
0,"Yes, the application has been deployed successfully on heroku.  It works very well and is easy to use and understand.  On top of this, the Read me documentation is very easy to follow and informative!"
1,"The test was done on the jobs_controller and model by simply testing the scaffold generated file. I think we were supposed to test extra aspects, but if not then this requirement was satisfied."
0,The team has only tested the Jobs controller. According to the spec file a model and a controller has to be tested
0,"Only the controller for jobs was tested, and it is not thoroughly tested."
0,Controllers had autogenerated tests and Job controller also had a single RSpec test implemented. There were no tests on the models.
0,"Models need to be tested, controller  is checked"
0,"The default tests for controllers are present in the test folder. The team has however used Rspec for testing which is good. They have tested the Jobs controller. However I do not feel it is thoroughly tested. Also, there are no tests for any of the models."
1,"The jobs controller was thoroughly tested using proper rspec techniques.  The tests were well named and easy to follow and understand.  On top of that, the team did a good job testing all of the crud operations associated with each controller.  What I did not see though, was model testing.  This should definitely be added, for instance, filling out ""test/models/compnay_test.rb"" shouldn't be difficult.  For some information on how testing in ruby on rails works, I would suggest this resource.  http://guides.rubyonrails.org/testing.html"
0,Only tested one controller. And not thorough testing. Did not test fail cases.
0,"The commits were not that spread out. In fact there were only 2 commits before the first review period and then the rest of their commits came in the next week before the final review time was to take place. Not only was it in this last week, but centered around one day, so they pushed at the very end basically. Honestly you can get into trouble with this sort of approach, especially if you are working for some client and they just don't know how anything is turning out. I would definitely recommend pushing new functionality each week as a much better practice to become familiar with."
0,"Yes, there were enough commits to justify that the team has constantly pushed their changes to GitHub."
1,"While there are more pushed changes in the commit history, your changes throughout the project period were on the due date and after.  It's possible that you may have worked on this throughout the week and not pushed your changes, it's hard to say.  In the future for future projects, try to start as early as possible and try to put in at least 1-2 hours a day working on the project, whether it would be working by yourself or with your team."
0,There were only a total of 27 commits for 3 contributors and almost all of them were on the Friday of the final submission.
0,Yes the team has pushed changes throughout the project period.
0,"A good number of commits since the last review. However, it would have been good to see an equal or almost equal contribution from all members. One seems to have contributed very low towards the project."
1,"Yes, the team pushed a total of 27 commits to  master.  On top of this, each team member contributed a decent share of the commits so this is good!  This number of commits suggests solid group contribution.  Committing and pushing to github regularly is helpful for many reasons.  One, it makes building a large, shared application much easier as everything can be built in little bite sized pieces.  While it appears you all had no problem achieving this, one thing that might prove helpful in the future, is utilizing separate branches, and the issues section in github.  Using separate branches, allows each issue to be associated with a specific code branch off of master.  This is useful, as when a pull request is made into master, the other team members are able to see exactly what that pull request contains.  Creating Github issues is helpful in that it makes chopping up a large project into smaller, easier to understand tasks very simple.  Each issue can be"
0,Only 23 commits over 3 days of committing
0,The code follows good ruby and rails coding practices and has also maintained the required MVC structure.
1,"While I really enjoyed the addition of the ""applications to this job"" and ""jobs in this company"" portion of the views, it really goes against DRY principles. The code is just copied and pasted from the index of the related model. Models are just validations, there are no methods abstracted into those files, and controllers are a bit bloated. The overall ruby practice is good though, the variables are snake_case, there are minimal global variables etc."
0,Follows good practices
0,"Code on GitHub looks great so far!  You are following good Ruby on Rails coding practices and it looks like you are implementing your code to the scaffold build with a bit of Ruby on Rails Tutorial by Michael Hardt to add on as well.  There isn't much in terms of what should be improved except to maybe talk a little bit about Devise and what it's functionality is to your program.  I don't know what Devise is and it is helpful for a reviewer like myself to understand certain third party gems.  You can either do this in your README file, your git commit messages, or as comments in your code."
0,Yes
0,"The code is well structured throughout. Proper naming conventions have been used for variables, classes and methods. I like the use of Devise for authorization. Most code is self-explanatory and commenting for code not auto-generated by Rails isn't necessary. However, in controllers, after mentioning an access specifier, there should be an indentation. This has been done in most places but has been missed out in some. For eg: In application_controller, after line 35 that contains the protected access specifier, there should be an indentation for the code that follows. Also, the views are not indented according to Ruby standards in some places. For Eg: companies/index.html.erb from line 35 to line 41 do not follow the indentation guidelines. The models were missing necessary validations in the first review, however that has been taken care of now. Kudos for improving on the feedback provided.Overall, Ruby coding practices have been followed well."
0,"Just one point, maybe you don't need to scaffold a home model, add the functions to other model like user."
0,"Very well laid out I like how it looks and flows. Some of the forms need a bit of work, there are a few missing field, or the errors/validations aren't fully realized. Just for fields I remember needing validations, phone number, websites (company and users) and revenue."
0,"Your application is almost there in terms of meeting all the requirements.  Very well done so far!  A couple of things I ran into while playing around with your application.  First of all, the provided admin email and password didn't work for me as I was not able to sign in as an admin.  I don't know if this was a mistake on your part and maybe forgot something or the field that contains the admin row was lost from your database.  Either way, because I couldn't log in as a preconfigured admin, I can't judge on whether the admin functionalities work or not.  Secondly, I liked how you used confirmation passwords when the User wants to link themselves with a Company.  While no necessary, it's a good security move to have the user approve of their changes before submitting the edited form.  Other than those two, everything seems to be easy to maneuver and the user interface is intuitive.  I appreciate you also mentioning functionalities that are not working in your"
0,The UI is really nice and easy to use.
0,"The app is user-friendly.


Readme is well stated"
0,"The team has done a great job in terms of the UI. The README file is very well detailed out and contains most information necessary regarding running the application. A note about what is not implemented would be helpful so the user wouldn't look for it would be beneficial. The interface is more than what was asked for and hence is appealing and intuitive. An issue that I faced was I had to give a Linkedin and portfolio url, which shouldn't be expected from every applicant. Also, it threw an error when I fixed that but under ""My Applications"" , the application was submitted. An improvement in terms of the Recruiter page could be to include an option to view all applications rather than have it against the job the recruiter posted. Also, there should be an option to change the user name or switch profile as a recruiter to an applicant, which wasn't available. Overall, good work in terms of the UI."
0,"pretty good interface, different color and distinguishable titles makes it easily to use."
0,I see the scaffold made tests but no rspec or team added tests
0,No tests have been made for one model and controller at the moment.
0,"Controller tests have been done, but none for any of the models."
0,Did not find any tests.
0,"The default tests for controllers are present in the test folder which check for basic functionality of the application. However, they are not thorough. And no tests for models have been implemented. Rspec could have been used for testing to check for expected behavior of the application. I do not see the same nor is there a mention about it in the readme."
0,"not sure, they did't use rspec, and the test files might be generated by rails default. i'm not sure about this part."
0,"only 19 commits, they are fairly even between the team members though. Would recommend committing more often with smaller changes."
0,"Based on your GitHub commits, your commits seem to show that you are putting in work on the project almost everyday since the 18th of February."
0,Very few commits after the 1st round of reviews. And only one contributor.
0,A few commits are made. Most of them in the last few days of the deadline.
0,"There are regular comments starting 18-Feb which is good. However, the number of commits seem to be very low at just 18. And this is equally distributed among 2 members. I'm not sure if this was a 3 member team or a 2 member team since the Readme doesn't specify it. Committing after implementing important functionalities is a good practice and doing the same would warrant a higher score."
0,only 16 commits and all done by one account.
0,"The code has been well looked into, naming conventions are good, one thing i didnt like about the code is there was there was very litle or no comments, It would have been really easy to look into the code if there were comments


It can be seen that the code follows heavy java convention, but that comes naturally for java developers


I liked the fact that before action was used well"
0,The application seems to follow good ruby on rails coding practices. Most of the code is scaffold generated hence they strictly adhere to the applications structure for MVC. They code is also properly formatted with proper indentation. One things missing is the lack of comments in the code. The authors could improve on that.
1,"The code looks good and ""dry"", and the team followed “good Ruby and Rails coding practices"". However, I’d give some suggestions:





      use indentations: for instance, when declaring “private” (applications_controller.rb, line 35). It makes a declaration more visually noticeable.


      use blank lines between methods (applications_controller.rb), which improves readability."
0,"Yes, the code is very properly maintained with using suitable dependencies in database and proper test modules for every task in models, views and controllers"
1,"The controllers' code is sometimes not DRY. For example, the team specifically checks if the user is logged in with ""if !logged_in?"" in the companies_controller.rb 


 


Instead of this, they can use a before_action in someplace thats more common for the flow of code (like the application_controller.rb). The code in the controllers also seems to ""play it safe"" when creating or editing things (they use new and save instead of functions like create! o"
0,The code is well formatted and easy to understand.
0,pretty good.
1,"In general, it is easy to navigate within the team's web application. I think it's good that they added some additional instructions on UI in README. Although, I'd like to give some suggestions that would probably improve the UI:





Adding ""home"" (for an easy jump to homepage) and ""log out"" buttons would be helpful on every page, maybe, in the upper right corner.


Keeping ""back"" button consistently at the same spot throughout the web app, maybe, even a little bit away from other buttons.


Adding drop-down lists for Employment Type, Gender, Race, Veteran Status, Disability Status.


Making 'additional information' for a job application optional."
1,The README could be made more clear with different sections for each user type
1,"The user interface was slightly hard to use. In my opinion, there were too many clicks to get to applying for a job. By looking at the URL in the browser (and in routes.rb), I see that you guys have 3-level nested resources. This may be a bad idea. I suggest looking at the following link for more information:


https://medium.com/@jaredrayjohnson1/4-things-i-learned-toying-around-with-nested-resources-in-rails-fed6d761e924


 


Furthermore, the readme.txt on github provided enough information for me to get started."
0,The UI is not very intuitive. Much of the things are cluttered in a small space. Routes are somewhat haywire and are not very well defined. The readme is well described but doesn't compensate for the lack of intuitiveness in the UI.
1,"a little bit too simple, also has no design."
1,"I went through each file in test/models, and couldn’t find any tests for any model.  There are some tests in test/controllers folder though. Some information on tests in README would be helpful.


One suggestion is to restrict some data types on data fields. Like, revenue should be only integer, phone number should be max 15 digits long, email addresses should follow conventions."
0,"Yes, they have made test modules for every controller and view"
0,"The team seems to have tested job_applications_controller_test.rb thoroughly enough. They have tests like:


    - should get index


    - should get new


    - should update job_application


    - etc.


Tough the team seems to have tested this controller, the tests also seem to be very similar to the ones that get automatically made by the scaffold generator. The team did not fully test any model."
0,The companies model is tested.
0,they write rspec test for almost all the files. a pretty good work.
0,The team did a great job using github.
0,"yes, the changes done were throughout the period and uniform"
0,"The team seems to have started on the project early enough. The first commit was about 20 days ago, and the most recent commit was 5 days ago. Throughout this period, most of the commits seemed to have enough change to the app to be notable."
0,The team has been consistently pushing changes throughout the term of the project.
0,"over 120 commits, they really did a hard work."
1,"After each role signed in, the homepage is showing different tasks each role could perform. This is very nice.


However, the action each role could perform is not really restricted. Each role can basically do everything admin did by directly going to the url.


Another thing is, when an application is submitted, it is associated with the company, not the job. I find this is a little strange."
1,"The UI is highly unintuitive. Except for the login and sign up pages, it is very difficult to navigate through the other pages. In a number of places, the back button leads to an unexpected page. Some things I noticed are:





It isn't possible to edit user profile information - we can only view it. For a recruiter, we can edit profile information while linking them to a company but not after that.


The job filtering mechanism does not work.


As a recruiter, clicking on ""View Applicants"" lists every applicant to every job. 


As a job seeker, while applying for a job, it is not clear what has to be entered in the application field. 


As a recruiter, while creating a job, it isn't clear what needs to be entered in the job field. Also, the recruiter is asked to select his company while posting a job - not sure why this is required.





However, I liked the use of CSS - it looks pretty app"
1,"The team used github within a week before the submission. Total commits are 51. If the team used the other source for sharing the changes, the additional information would be helpful."
1,"The team has been pushing changes regularly. However, the number of commits is very high on the day of the deadline. Two of the contributors have a significantly higher contribution that the third member."
1,"They didn't use gem to help them build log in system. They did it all by themselves, which is really cool.


Only thing is in the users_controller create function,  I guess what they try to do is giving admin a way to create job seekers or recruiters. But this code does not actually prevent other users to create a job seeker or recruiter, only after they create it, they would get an exception, but the created job seeker or recruiter would get saved anyway."
0,"The code looks good, and the team followed “good Ruby and Rails coding practices"". They use indentations and blank lines between methods appropriately. However, I'd make one little suggestion: breaking lines in your code into several would improve readability (line 77 applications_controller.rb, ln 9 in application.rb, ln 7 in company.rb)."
0,Basic code was well written following the mvc architecture. basic conditions of programming were followed
0,"The company has followed most of the good ruby and rails coding practices. I noticed that you have hard-coded option values for gender, disability etc.. It would be better to use enums here instead of hard-coding values, as there would be lesser code change in the future if you decide to add more options."
1,"This team is very diligent and had been constantly updating/fixing their code after getting their reviews. I need to learn from them.


Another thing they did very good is that they uses model's method in the application model to help listing all the applications for a job seeker. I think we did it in the controller. I like their way better.


I gave 4 stars:





because they put a lot of logic in their views, such as index.html.erb for companies and jobs, trying to hide edit/delete button from job seeker or recruiter. I feel what you need to do is using authorization gem such as ""pundit"" to restrict user's ability for some actions on the website. Hiding buttons is good. But I don't think it is enough. Job seeker can still go to ""https://fathomless-brook-57752.herokuapp.com/companies/1/edit"" for editing companies.


(I don't know where to put this point, I will put it here) because I tried to update user's profile, eg ""Name"", but it kept tell me to include ""@"", I felt strange"
1,It follows good ruby and rails coding practices.
1,"They must've made their github page private because I cannot access it. I get a 'Page not found' error. As a result, I could not access their admin details..."
1,"The interface is probably the best among what I review.


They improved a lot since my last review, by indicating what the website is for and what can user do after logging in.


I gave 4 stars, because as an admin, there is button ""Your Applications"" -- I think what they mean is actually all the applications. And there is another button ""Users"" -- I think it is supposed to show all the users, but it will give you the error (page does not exist)."
1,It is easy to use.
1,The UI is VERY pleasing to use. It seems to have been professionally made. All the parts of the application were easily accessible from the toolbar at the top. Well done.
1,The UI is neat and easy to use.
1,"Yes, the user interface is easy to use. There should be a prompt for the jobseeker that he/she cant apply till they have updated their profile.


Readme is well stated."
1,"I don't think the team has tested thoroughly one model or one controller. Is it in the spec folder? There are only three test  cases. In the test folder, I only find rails default testing. We didn't do well on testing either. So let us do better next time."
1,"The admin model has some problems: 1. When clicked to show users, an error screen was displayed 2. The admin cannot destroy all companies, just the ones created by him/her as a recruiter 3. The admin shouldn't be able to edit company info which he can in this application.


The applicant model has some problems: 1. While editing application info, error is displayed."
1,I'm not sure. I cannot access their github page.
1,Model and controller tests havent been added. Feature tests have been added though.
1,Tests for only controllers are written. No test for models were found.
1,"Yes, they are still updating/fixing their code during Spring Break. I love their work ethic."
1,Decent number of commits during the project period. But 32 commits after the deadline on 2nd March.
1,A lot of commits are close to the deadline. Some even after
0,"The code looks great. The team followed “good Ruby and Rails coding practices"". They use indentations and blank lines appropriately. Just one suggestion: breaking some lines in your code into several would improve readability (line 85 applications_controller.rb, ln 41 in companies_controller.rb)."
0,"The code for the most part follows good coding practices.The code is clearly written and is easy to understand for the most part.However, the use of comments especially for non-scaffold generated methods will help the user to understand the code much better. For eg:- filter function in the jobs controller.


Some of the empty-body methods can be written in a single line For eg:- ""show"" and ""edit"" method in users_controller. In the applications controller, there are parameters ""j_id"" and ""job_id"" which is slightly confusing.


Also, there are two controllers application_controller for authorization of users and applications_controller which handles CRUD methods for job applications. You could name it differently to avoid confusion.


Methods for destroying and closing an application have been defined in the Model ""application.rb"" and similarly, in the Job Model file ""job.rb"" This negates the use of MVC architecture where the controller controls the interpretation of actions."
1,Everything a user could see (job applications/jobs/companies) could also be edited by adding /edit to the url even though the edit button was hidden. A jobseeker could also add companies and jobs by adding /new to the url. This means the controller wasn't doing the same validation checks that the view was.
0,The code is easy to understand and follows the good Rails coding practices.
0,looks pretty good.
0,"It's pretty easy to navigate within the team's web application. They have drop-down lists whenever it's useful and appropriate, which makes it easier to choose, not typing. They also added a lot of additional instructions on their UI in README, which could be a bit shorter. There is one suggestion I would give to the team that would probably improve the UI: -Putting ""home page"" and ""log out"" buttons in the upper right corner, which would make them more visually noticeable, and prevent an accidental log out case."
1,"The last time, when I checked the deployed app on 03/05/2018, the app was not working. However,it seems to be working fine now.


The layout of the app is clean and simple and easy to follow. There was no confusion in navigating the app. However, it took quite some time to enter the address in proper format. Same goes for the website and revenue while creating a company. You may put a sample address and phone number in the README if you are strictly restricting the format. When applying for a job as a job-seeker, the error prompt for the portfolio format says that it should be of the form http(s)://www.website.com/org/etc however it only accepts the format http(s)://www.website.com. The same issue arised while creating a company while signed in as a recruiter.


Otherwise, the README file is very detailed and helps the user to understand the working of the app very well. It could be a little brief or be displayed as bullet points instead of paragraphs to make it easier to read."
0,"The radio button on the bottom made it easy to switch between roles.  An improvement could be recruiters being able to view job applications for a specific job.  If they are viewing a job, they should be able to view its applications.  It's ok as is in this system, but in a larger system with a lot of applications, a recruiter would want to be able to go from a job to its applications directly."
0,"The UI is very user friendly and intuitive. Navigation through the pages is effortless and very much sticks to the norms of what is considered an intuitive UI. There is hardly any need to go through the readme to understand what the system does as it is very obvious. Also, the readme, although not required to understand how to go about interacting with the system, is very descriptive and covers all the aspects of the system."
0,Readme is well described. But the sample accounts are not working.
0,readme file is very detailed. it's easy to see that they spend some time working on it. just still can't log in with the account in readme file on the cloud platform.
0,"I went through spec folder, and found some RSpec tests. Some information on tests in README would be helpful."
0,No testing has been performed for any of the models or controllers.
0,The application controller and model was tested well with RSpec.
0,The team has tested the companies and applications model thoroughly.
0,Didn't find any tests written.
0,they did the rspec test. and seems did lots of works.
0,Looks like the team did a great job using github throughout the project time. They made 98 total commits.
0,"Yes, there have been constant commits throughout the duration of the project as well as after the submission date. In fact most of the commits have been made around the deadline and after it."
0,There weren't many commits before the first deadline but they committed frequently between that deadline and the final submission.
0,"Yes, the commits have been fairly regular throughout the term of the project. All three members have been active throughout the project."
0,A lot of commits done but all of them in the last 3-4 days of the deadline.
0,almost 100 commits done by three people. they did a good job.
0,Unable to find any examples of best practices not being followed to my knowledge.
1,"Overall, the code looks good, and the team followed “good Ruby and Rails coding practices"". They use indentations and blank lines appropriately. However, I'd make one suggestion: breaking some lines in your code into several would improve readability (lines 57, 62 applications_controller.rb)."
1,"Pros:


- All necessary validations added (for regex, etc.)


- All relationships like (has_many) defined clearly


- Good naming conventions used


- No evident violations of Ruby on Rails coding practices


 


Suggestions:


- More comments to explain the code"
1,"The code followed good ruby on rails coding practices. All the code is well organized in models, views, and controllers. The code functionally implements most of the functionality but only some mistakes exist. Overall, the project code was good. Here, are some points which have been improved and which needs to be improved. 


Good Improvements


1) Company Information perfectly organized and automatic assignment of company id.


2) Submittal status has been added in this submission


 


Functionality Mistakes


1) Recruiter company information is not displayed for admin.


2) An invalid number of numbers in phone number is accepted.


3) Job not creating for existing companies


4) Job seeker himself can set the application status. 


5) A phone number cannot be viewed by an admin of users in information.


6) A recruiter is able to create same company with all identical details."
0,The Code on Github seems to follow Ruby and Rails coding practices
1,The code has good standards. Logic is present in the views to hide buttons and elements. This can be better implemented using pundit gem.
1,"The team has used standard scaffold generations and have extended it. Standard naming conventions have been followed. However, the models have not been validated thoroughly. For example, there is no check to see if a linkedin profile URL or a portfolio URL is valid. The gender, disability status, veteran status etc.. can take arbitrary values as long as they are less than 255 characters long."
1,"The user interface is mostly easy to use. I liked the use of CSS. However, there are a few things that were out of place. I have listed some of them below:


 





While applying for a job, the user is expected to enter his current company. This should be auto-populated. Also, there are no drop-downs for fields such as gender. race, disability etc.


While creating a company, the founded field expects a date format. I kept trying to enter just a year initially, and the error message I got was ""Founded can't be empty"". It was only by chance that I figured out that the founded field needed to be a date.


Applying for a job isn't intuitive. There is an option to view all jobs, but there is no way to apply for a job from there. One needs to click on Manage applications, create a new application, enter a job id, and then apply. I don't think it is reasonable to expect a job-seeker to remember the job id of the job he's applying to. Also, the job filte"
1,"The user interface is very elegant and appealing. It was very easy to use and navigate. All the information is perfectly organized but some improvements could make this even better. Like a drop down for existing companies and job id, company id information cannot be remembered by the user.Hence, drop down with existing entries would be helpful. And a drop down for gender, veteran status, and disability status could make it even better. Appropriate comments for the information entered in the comments would be helpful. Like phone number only 10 digits are permitted etc."
1,"The team added on the top of the requirements a nice user interface, which helped easy to navigate within the team's web application. However, I'd like to give some suggestions that would add some improvements to their UI:





Adding drop-down lists for Employment Type, Gender, Race, Veteran Status, Disability Status, Size of company.


Making 'additional information' for a job application optional.


Making the job list more informative, not just showing the job id."
0,"App deployed on heroku with clean and intuitive interface. README gives bare mimimum, though supplies enough information to use the app."
0,The UI is very normal. Some UI improvements can be implemented on the top.
0,"Pros:


- Good user interface and design 


- Easy navigation


- Clutter-free user interface"
1,Yes User interface is not straightforward (you need to remember the jobid while applying { an apply option next to the displayed jobs would be very intuitive} ) to use and the readme file is well described and is helpful while we review the project
0,"Model test job_seeker_test.rb could benefit from having additional test cases. There are many basic controller tests, though these could be more thorough as well."
1,"The team has tested the models and controllers but have written the testing code for only one model and one controller. Testing code for other models and controllers could also be implemented to make a peer programmer easy to test. However, most of the functionality is correctly implemented. It is also tested to ensure it is correctly working."
0,"Extra credit features have not been implemented. However, testing has been done properly."
0,The team has tested one model and controller. The test cases seem to be thorough.
0,Yes. They have also mentioned it in their github readme.
0,the team has written appropriate number of test cases for each controller and model.
0,"The team followed the program descriptions, and included the information of their tests in README, which helped to check their tests easily. Both recruiter's model and controller are thoroughly tested."
0,Many commits across the project timeline.
0,The team did a great job using github throughout the project time. They did 192 commits.
0,"Pros:


- Worked on multiple branches


- Periodic commits done


- Sufficiently clear commit messages"
0,Yes the team has pushed changes at regular intervals.
0,The team consistently adding code to the GitHub. The number of commits was 192 which indicates that team keeps on pushing changes throughout the project. The code is also well maintained in GitHub.
0,Yes the team has been constantly pushing the changes to the repo. However the team has not taken the last review into consideration as points from last review are still to be implemented.
0,"The team has been committing throughout the project. But the number of commits is very high towards the end of the deadline. Also, the contributions of both the team members are not equal. One member has about twice the number of commits when compared to the other."
1,"Was not able to find any major flaws. One minor improvement that could be made is locking in the version of the gems used, as this could lead to issues with maintainability down the line."
1,"1. I think you can find a way to put admins, job seekers, and recruiters as one entity like ""users"". That way, the .rb files in /controllers, /views, and /models etc. would be dryer.


2. How do they create routes for applications under jobs? I think resources :jobs do resources :applications would be more clear."
0,"Pros:


- Good naming conventions used


- Proper validations (regex, empty field checks, etc.) done


- Proper relationships defined"
0,"In the models, the team seems to have followed good Ruby and Rails coding practices. They make validations in the models that actually seem to matter for their code. In the controllers, the seem to not have deviated much from the default code put into the controllers when the scaffolds were generated. When looking at the views, I got the impression that the team did not make much progress with the website. This is because the _form.html.erb for the admin only had two fields: email and password. Other views seem to have enough appropriate fields in them. However, from what I have seen so far, they seem to be making good use of MVC."
0,"The code follows Ruby and Rails best practices to the best extent possible. Most of the code is generated by scaffold so follows the systematic hierarchy of the scaffold. The authors have also put comments wherever necessary, which is helpful. The code is also properly indented as per ruby standards."
0,One model is tested using Rspec framework. It has decent amount of test cases for whether a company is valid or not.
0,They did good on working on the branches and merging the work. But it looks like mainly two of them were working on the project.
0,The program was  easy to navigate through
0,40+commits were observed on linked in
0,rsepc for compan model was implemented
0,"None of the models have been tested. However, most of the controllers have been tested."
0,"The team did a nice job recording a step-by-step video, and adding instructions on github. In general, the UI is pretty intuitive, and it is easy to navigate within the team's web application.  However, I'd like to give some suggestions that would add some improvements to their UI:





Adding drop-down lists for Employment Type


Adding a neutral option choice for Race, Veteran Status, Disability Status (""Decline to state"", for instance)"
0,"The team followed the program descriptions, and included the information of their test in README, which helped to place their test easily. Company's model is thoroughly tested with RSpec. All fixtures are added. There are some tests in test/controllers folder as well."
1,"The majority of the interface was not accessible. All I could see was the login screen. I clicked ""Login,"" entered the admin credentials, and pressed Login. I got this message:





The page you were looking for doesn't exist.


You may have mistyped the address or the page may have moved."
0,"The seems seems to not have thoroughly tested  one model and one controller. The current files under the ""test"" folder seem to have been automatically generated when the team created the scaffolds."
1,"Yes. On the master branch, the team made commits that ranged from 8 days ago till 24 days ago. Furthermore, when I did this review (2/28/18 @ 8:15pm), the last commit was 43 minutes ago on the 'Staging' branch."
1,"1. README file can put some bullets before different topics so that it's easy to read.


2. The webpage was down when I just want to begin to try all the functionality and the error message was ""The page you were looking for doesn't exist"". It seems that Heroku has some problems because last team's webpage I reviewed also became down at some time."
0,The code in controller test and model test is good.
0,"Yes, they did, but it looks like that almost every commit is only done by one of them. Maybe other members contribute their code in another way which can't be looked at on GitHub."
0,A new user with no background knowledge could easily use the app.
0,"Recruiters controller appears well built out, though I did not see any completed model tests."
0,There were many commits across several dates.
0,The UI is very clean and is easy to use.
0,"User interface:


- Good design


- Easy to use


- Easy navigation


 


README:


- All features explained properly"
0,"Extra credit features have not been implemented.


 


Thorough testing has been done."
1,"Pros:


- Worked on multiple branches


- Explained in the README that their main branch is not master


- Multiple and timely commits done


- Clear commit messages used


 


Cons:


- Looks like all contributors have not contributed evenly"
0,Yes. It is also present in the github readme.
1,"Clean UI, Login page is neatly designed. Proper tabs are given for Jobs, Users, Applications which are well accessible. Switch between roles are easy to perform. And the current role shown at the top right corner of the screen is easy for the user to know his state.


CSS, AJAX are used to create UI screens, good work done by the team. Best User Experience I had among the projects I reviewed. Logout button is placed in all the screens, which is very easy for the users.


Though there were very minimal information given i"
1,"testing is not upto the mark, they should have added more test cases other then the default ones"
1,"Even though the number of commits were low, they have pushed code at regular intervals,the later changes have been related to bug fixes which shows how they have matured the project. the commits were done by everyone and at regular intervals"
1,"The team has generated the required scaffold for test setup for Rspec. But they have not specifically added test cases. For example, if we look into the models folders in specs, we only see the company_spec.rb file that does not have any test cases. Whereas, for controllers, they have the default generated test cases."
1,"Yes. There has been a steady increase in the commits. I can see the maximum activity on Thursday. The commits are also properly named. Although the frequency of commits not high (43 total). The team should commit more often so that they don't lose valuable work. Apart from that, good work."
0,The code follows good Ruby and Rails coding practices. It follows the required MVC architecture.
0,"Yes, the coding is in adherence with good Ruby and Rails coding practices"
1,"Seems good over all. Some of the functionality that is in the controllers methods could potentially be moved to the models, but it is also fine as it is now. Variables are stored in snack_case for the majority of variables, the views contain a bit more functionality than just the UI. This could be improved by moving the functionality into the controllers or the model where appropriate. one convention to consider is the character length of lines. Look at Jobs Index, line 66 is far too long to read on one screen. Chop it up and make it two lines."
1,"I can not find big problem in their code. They did a good job with naming convention, using partials, model validations, authorizations, etc. This may be the best design I have ever reviewed. The only flaw is I can hardly find commits in its files. It's gonna be better if more comments are added to their code."
1,"You have done a good job following the ""good Ruby and Rails coding practices"".  It appears that all of your major components were built using a rails scaffold, which is good because it helps to organize the code in a good ""ruby on rails"" way.  You also did a good job following all of the ruby on rails style guidelines such as using ""each"" where it is appropriate over ""for"", and using 2 space indentation.  One area that could still be improved though is code commenting.  While many of the controllers are well documented, the models are not.  Additionally, using javadoc to comment methods would be a nice addition.  I would suggest checkout out this resource on how to javadoc methods."
1,The code follows good practise. The readme can be more informative.
1,"I think over all the code is really good and minimal. We used way more models and controllers to make app to meet the requirement.


But I am a little confused by a function defined in user.rb, create_new_user. At first, I thought, this is such a good idea, we went through a lot to make Admin to be able to create a new user. Then, I try to see how it is used and where it is used. But I could not find any.


Another thing, maybe some of the controller code could be included in the model, such as index function in the jobs controller."
0,The code was written with good Ruby and Rails coding practices.
0,"Pros:


- Proper naming conventions used


- Proper validations done & relationships defined"
1,"The code followed good ruby on rails coding practices. The code was well-designed. There are a bit of some functionality issues with the admin and job seeker.


Good improvements


1) The team has linked the apply button directly in the job description which is very useful.


2) When the apply button has clicked some fields like job id and company id are auto-filled which reduces the effort of the end user.


 


Points to improve


1) The admin login details mentioned in the README file seems to log in as a job seeker and not as Admin.


2) The admin functionality is similar to job seeker which is suspicious.


3) The recruiter was not able to view the applicants for a job."
0,"Good coding practices, almost equal commits done by each members"
0,"They have followed a very well structured coding pattern, one of the best things i have seen in their application is use of before_action, it shows how the MVC app should be developed,they have reduced the amount of code and redundancy, this is something i loved about their work, other then that indentation naming and other factors are well looked into"
1,Overall it looks like it matches common coding practices.  The main thing I noticed that could be improved is the use of enums or similar for a lot of the dropdown fields. The options were listed individually in the edit form and also had to be listed again in the model validator.  Any updates would have to be done and match identically in both. Enums would let them update in one place for coding consistency and maintainability.
0,The code followed the mvc architecture. All parts of the code look clean . views were dry as required
1,"The code is well written with standard naming conventions and use of scaffold generations. All models have thorough validations, and the methods names are self-explanatory without the need for comments. The job-filtering mechanism works very well.However, I noticed that you have hard-coded a lot of option values. For example, you could have used enums to represent Gender, Disability status, Veteran status and Race instead of hard-coding strings. Similarly, you could have used enums to represent the job application status. The benefit of doing things this way would become clear if you decide to make changes to the list of options in the future. For example, if you decide to add another kind of race in the future, you might have to make changes in all the views where these values have been hard-coded. However, if you use an enum, you would only need to change it in the model.I loved your extensive use of page level authentication to check if the right kind of user was trying to do an"
0,"Yes, the team made regular commits to their repo"
1,Yes! 204 Commits. That is admirable. Only downside is they only works on one branch. But 204 commits deserve 5 stars.
1,"Pros:


- Over 200 commits


- Very clear commit messages


- Contributors have contributed equally


 


Suggestions:


- Could have worked on multiple branches"
1,The team kept on pushing the changes throughout the project period. The number of commits pushed by the team is 204 which clearly indicates that the team has worked throughout the project.
0,They wree consistent in puhing changes
0,"more then 200 commits, thats a great job


they seem to have increased the amount of commits to a great extent in the past few days, most of the later commits were related to bug fixes which shows how their products matured, commit naming has been well looked into"
0,All 3 members contributed frequently and in about equal parts over the course of the project.
0,A large number - 200 + commits were observed
1,"There have been a number of commits and more or less equal contribution from all members. However, it seems like the team did most of their work towards the end of the project deadline."
0,The testing could have been better
0,"They did a great job on testing, more than just one model and one controller. Excellent."
0,"Extra credit features have not been implemented.


 


Through testing has been done."
0,The team has tested models and controllers. There are some functional issues which the team members have to look into. The functional issues are presented in the above comments.
0,"Yes, they have tested for blank spaces and special characters while filling forms"
1,They very thoroughly tested the job applications model and controller. There were tests for the admin user but I couldn't replicate them on the actual website so either the tests didn't pass or the user given in the README wasn't an admin.
0,yes the team has implemented test cases
0,Great work testing multiple controllers and models. The test cases seem very thorough as well.
1,"The user interface is very clean and easy to navigate. I like they put a long list of companies/jobs/users/applications into several pages. That makes website look really good.


A minor thing, that I notice is when viewing all companies, at the bottom, there is something like this:<<<<<<< HEAD Back======="
0,"The User Interface design could have been better.


I could find a few glitches:


1. When I opened the URL of the application, I found that someone was already logged in and I had to logout before I could login in as an admin.


2. After logging in as an admin, the message in the top of the page showed ""ABC"" logged in successfully.


3. After logging in as admin, I could not see the button which would list down all users."
0,"User interface:


- Good design


- Easy navigation


- Easy to use


 


README:


- Covers all topics


- Formatted properly with clear headings & sub-headings"
1,"The user interface was intuitive and elegant. The navigation was easy and smooth. Overall the User Interface was good.


The README file contained information about the admin login details but the details seem to log in as a job seeker. And the file contains guidelines about format of filling the fields which seemed useful. The format for filling various fields could have been added to the application itself. Like guiding the user with appropriate error messages."
0,The readme could be a bit more clear regarding page navigation and the location of each user activities
0,"Loved the user interface, its very easy to use, its well divided in fields, css has been well looked into as well, it gives a very good over all look and feel.


The readme does give a very good idea of what to expect from the application and what the application is providing and how to accomplish that."
1,It was ok to navigate but not that easy.  Most things had to be done by going back to the home page and restarting from there. Certain fields like the Recruiter company would always reset when editing profile so the user has to be careful with that.  Job applications would have been easier with nested urls so the job ID wouldn't be reset if there were any errors.  It also would have been nice to be able to see the user's current role when navigating pages as it can be confusing when a user has both roles.
0,User interface was intuitive
1,"I could not find the functionality for creating new recruiter and new job seeker. I tried to see if I am doing something wrong, but there is no description regarding the same. If you are having trouble doing that, you can probably look into how you can create a link on the page which redirects you to a path. Overall the app is well designed."
1,"The user interface is very appealing to the eye. The team has put in a considerable amount of effort in the CSS. I particularly liked the use of pagination while listing all jobs/ companies etc. However, there were a few places where it became unintuitive and even the README didn't help.


 


 





When a user edits his profile, he must enter his password to confirm the changes. While you have used a label above the text field for the password to indicate this, it isn't very noticeable. Every time I tried to save my changes after entering changes, I was re-directed to a ""Something went wrong"" page. It took me a while to realize that I needed to enter my current password in order for the changes to take effect. You can probably add a JS validation saying that the current password is a mandatory field, before redirecting.


Clicking ""New User"" on the admin home page redirects to an error page.


While applying for a job, the current company field is"
0,The user interface is very good and quite user friendly. The views present all the required information for a particular user and the links are very well directed.
0,"The Admin user interface is very easy to navigate.But , I found that while viewing the list of companies, the table formatting is not proper.I mean, the table exceeds the inner page dimensions.


The Recruiter UI is also easy to navigate but the publish job functionality is a bit tough to navigate to. It could have been better, if there was a prominent ""Publish Jobs"" button after creation of a new job role.


In the  Job Seeker, UI, I found a glitch.While clicking on the View/Apply Jobs button, I could see that ""Closed"" Jobs have still a ""New Job Application"" enabled. While clicking on it, the page is editable with the dropdowns stillenabled.It also has a ""Create Job Application"" button for a Job Seeker role, which ideally should have been ""Apply to Job"""
0,"Visually very good, the user interface is intuitive for navigating around the pages. Super well done. One minor thing might be the errors, they mainly say ""Please enter a ..."" but nothing on what the correct format is. (I see this in most of the URL inputs). Also the jobs index pages shouldn't show the ID of the row or the ID of a related DB. For example, you could use the Job Id to get the name of the role and display that though. Job.find(job_ID).name but I wouldn't display just the Job ID. Also the length of the page should be resized when you update the forms. The back button usually is unclickable as it is below the ""bottom"" of my screen. The show pages have a similar issue"
0,"UI is quite intuitive and easy to use. README is detailed and covers all information needed to use their app. But to my knowledge there're still some little weakness that is worth mentioning:


1.can not leave password and password confirmation blank when editing profile, which causes a little inconvenient when a user just want to edit name or email instead of password.


2.When I enter ""Edit Profile"" page as admin through Home page and then hit ""Back"", it jumps to users index page instead of jumping back to Home page.


3.A recruiter must have a company before created which means recruiters can not have a ""no company"" status.


4.they did not actually implement logging in with Google successfully. When I hit ""sign in with google"" and select my google account I was directed to sign up page with email filed in with my google email."
0,"Yes, the application has been deployed n an AWS server.  The interface is beautiful and very easy to understand and use.  Additionally, the ReadMe file is well written, easy to understand, and thorough.  I really like the use of highlighting and bold text though markup to really make the ReadMe usable."
0,The UI is pretty neat. Not well defined in the readme. Should have proper navigation buttons.
0,"Yes, the team has tested the User model and controller. The testing is done using the RSpec testing framework."
0,"Yes, the team tested one model and controller"
0,"There is a spec/models folder but I do not see a spec/controllers folder. in the models folder is a single file testing the user model. The test file covers the validations required to create a valid user, and tests the model function created in user.rb. I would just recommend adding the tests for the controllers. That being said in the test folder is the basic scaffold testing created by the rails generate function. So there are tests for the controllers, just not enough of them."
0,They thoroughly tested CRUD actions of 4 controllers by using rails test and tested one model with Rspec.
0,"Both the User controller and model were thoroughly tested using good rspec techniques.  The tests were well named and easy to understand.  Additionally, the team did a good job testing all of the crud operations associated with each controller.  One suggestion I do have though, is that the tests could be documented a bit better.  Javadoc would be very appropriate in this case as it would help the reader to understand what the test was doing exactly.  If I had one suggestion to the team for testing, it would be adding javadoc to each test method.  Other then that, great job!"
0,yes one model and controller is tested.
0,Yes. There are ample number of commits to justify that the team has constantly pushed their changes to GitHub
0,"Yes, the team was regular with their commits."
0,"The commits are frequent and detailed, they solve small issues and generally don't require merge functionality. The number of commits is a bit uneven though, This could be caused by pair programming though."
0,"109 commits since 15 days ago but with only 1 branch. They may write code in same branch but I think write code in respective branch then merge into a main branch is better because if something go wrong it's easy to figure out whose part's code need to be improved.


Anyway, they kept pushing changes throughout the project."
0,"Yes, the team made a total of 109 commits!  This is an impressive number.  Additionally, the team did a good job working together, as it appears each team mate made multiple commits towards master.  


 


Committing and pushing to github regularly is helpful for many reasons.  One, it makes building a large, shared application much easier as everything can be built in little bite sized pieces. You all did a great job utilizing the issues and branching techniques in github.  Using separate branches, allows each issue to be associated with a specific code branch off of master.  This is useful, as when a pull request is made into master, the other team members are able to see exactly what that pull request contains.  Creating Github issues is helpful in that it makes chopping up a large project into smaller, easier to"
0,There are git commits for every new feature implemented. The git documentation is very good and they have brought to notice the AWS bug pretty nicely.
1,"The team made a lot of smaller commits, but some had a few days in between. There is a decent number of merges between different branches that might have been avoided if they had some communication among their commits/pushes. I might recommend just committing more often, 53 commits is a good number, but it could be slightly higher."
0,"Yes, there has been constant commits throughout the project period. The commit messages enable us to easily understand the progression of the work. Most of the work has been finished well before the second review deadline. That shows that there weren't many changes done after the first submission."
1,the commits were unequally pushed in git by the users
0,"Based on your GitHub commits, you have been using your time wisely to slowly make progress on your project."
0,"yes, the team made 53 commits to master, and each had their own branches to work off of."
0,13 more commits than last time. and three people contributed. just one of them only pushed one commits.
1,"Rspec testing done on the controller for companies, the model test for controllers is in the Test folder, but it lacking a few tests. Maybe instead create an rspec test file for the models."
0,test were not present for controllers
0,The default tests have been done for one model and controller.
0,"yeah, testing was done for company"
1,"The readme specifies that both the company controller and the company model had been tested.  It appears that the company controller has been tested, but the model has not been.  For some good information on testing in ruby, here is a helpful resource."
0,they created a rspec folder for test
1,"The UI is intuitive, the readme is slightly lacking but the UI doesn't need much explaining so its okay. When I attempt to create a new user with a blank password I expected a form error. Instead I got an error from Heroku saying something went wrong and to check the logs. When a recruiter is creating a new job you can hide the company select drop down."
1,"Yes, the app is very interactive, user-friendly and easy to follow. The README provides login credentials for default users and like it says there, the app is pretty intuitive.It is very much like currently used job-finding portals. Only concern is that the text displayed in red color in the menu bar is not easily visible.


While searching for jobs using filters, there is a lot of scope for making mistakes while typing the search parameters. It would be easier to have a drop down for the filters. 


Also, after clicking back after viewing companies, jobs or job applications, it lands on the index view rather than going back to the previous page. So, we have to click on the Home page again to view all the actions."
0,"the readme file was very concise, this could be more explanatory"
0,"The role selection requirement was to allow the user to switch between roles.  The use of a radio button for this would have been better than a checkbox.  Also, adding an admin selection for the admin user should be present."
0,user interface was intuitive
0,"Yes, the application has been deployed succesfully.  The UI is well designed and easy to use and understand.  The Readme file is also well written and contains helpful information."
0,readme file is very simple but didn't miss any useful information.
0,The code in controllers and views are dry. No code that belongs a wrong file that they shouldn't be in.
0,code was concise and clear
1,A good practice was used in using helpers and models to implement business logic.  The use of a separate Searches table could have been grouped with the companies and/or jobs logic.
0,"code was well written following scfold , mvc architecture . all basic functionalities were seen to be good"
1,"The authors appear to have done a good job following good Ruby on Rails coding practices.  For instance, they indented all of their lines 2 spaces, etc...  


One thing I noticed though that was missing was documentation.  One way to improve this would be to add javadoc to the methods.  Javadoc helps readability a lot by giving the reader a better understanding of what th emethod does.  it also helps give the reader a better understanding of what the method does by giving the reader context.  Here is a helpful resource on javadoc for future reference!  https://dev.liferay.com/participate/javadoc-guidelines"
0,looks good.
1,"User interface is intuitive. It was easy to test the application following the readme file and the way screens are developed.


 


Welcome Admin page displays a message as Hello Admin, and a message ADMIN! below that, this could be removed.


Add a company to your profile to post a job is shown for Admin, Admin doesn’t have job posting function so this isn’t necessary. Update company dropdown is shown which is needed for the admin. Search jobs link is displayed for admin, Admin doesn’t have job apply functionality."
1,"Most of the code is straightforward scaffold generated code. So,it is easy to follow and well-written. The method search_companies is defined in ""search.rb"" file i.e.in the Model file. This can be done in the controller to clearly separate the M,V,C components of the architecture."
0,"The user interface is very easy to use, you can have control of job seeker or recruiter at one time which is a good thing.


Documentation has also been taken care of to some extent, there is required information"
0,"The UI design is uniform, easy to use and appealing. The team has used bootstrap for some of the UI component, which makes it look better.  Also, there is a navigation panel on top to switch between parts of the application. Overall, great job on the UI part."
0,The test plan written in READme is inadequate to perform the Test Plan. The author did not automate the tests.
1,"It's good to follow certain naming conventions for naming variables and strings. Variable and Function names should be lowercase with underscore to seperate words like 


1) Using random_html() instead of RandomHtml().


2) Using random_css() instead of RandomCSS().


3) Using random_body() instead of RandomBody().


4) Using random_sentence() instead of RandomSentence() etc."
0,Names are intuitive and coding style looks good.
0,The author did not provide adequate writeup to set the environment and test the work.
1,"The Writeup is not adequate to understand the functionality of the work. Although the brief description of the functionality of individual programs like the start_servo.py, servo_automation_screenshot.py the description about Servo and others could have been helpful. The author could have given the more detailed description of the functionality implemented. It could have included the project description, implementation done so far."
0,I honestly have no idea what this project is intended to do.
1,The test plan was not adequate to understand the test plan. The authors could have worked more on the writeup. And the testing and environment setup for other operating systems environments could have been helpful.
0,the testing plan is in the README on the repo and all it says is that files were generated during testing. Not how to run tests or what to expect when testing.
0,The Readme file could have been more descriptive about the implementation. Giving a more detailed description of the platform setup could be helpful. And details about the testing would have been helpful.
0,There is no mention as to why any work was done
1,"(2) The code in the program rendering_mismatch.py  is long and can be modular dividing the code into separate methods


(2) The code implemented in program screenshot_servo.py can be modular i.e the program can be divided into a set of functions.


(3) The programs code_generation.py, rendering_mismatch.py, screenshot_servo.py should be properly commented to understand the implementation. Lack of comment lines makes it difficult to understand the functionality of the code and following it."
1,Comments would thoroughly help this project
0,existing tests pass after refactor.
0,Names all check out and read easily
0,Comments would improve the readability of the code
0,Couldn't think of any edge cases. Test pass for normal situations
0,Very clear how effective the refactor was
0,Only needed to show that your changes didn't break anything which you did perfectly
0,Used factory design pattern to simplify the refactor. Good job
0,"No test plan in wiki page, so it's hard to judge this section"
1,"There are no test cases mentioned. However, from the git pull request it may be that the project has to test cases. However, if it is present then the authors should mention it in the wiki or the readme"
0,There was no test plan associated with the project.
0,There is no test plan again as it is a mozzilla project it is hard to understand how/what the tests should be.
1,"The python files use code that is very intuitive, I do not have any suggestions here."
0,1. What is kwargs in wpt/web-platform-tests/tools/webdriver/build/lib.linux-x86_64-2.7/webdriver/protocol.py?
1,"From the comments seen in the pull requests, i beleive only minor changes are required to be done. Rest from the comments it is fairly ok work."
1,"This project doesn't seem to need a build. However, every file that the team wrote seemed to have been doing its job. Because of this project, the Servo team will be able to test a few more things in the future. Although the team's pull request is a good start, there seems to be many changes that would need to be made in order for the pull request to be merged into the master branch of Servo."
1,Since the project is a mozzilla project based on automation so there is no need for test coverage however through the comments of the pull request some refactoring and code changes needs to be implemented as suggested by the admin.
1,"Overall this is well done, additional comments would be helpful."
1,"The project doesn't use Ruby, but the style might also be applied here. The structure of their code seems to be clear for a reader who knows the language they use to understand what the code does."
1,"The functions needs to be explained it the wiki. The code is not well commented, but they have tried to explain everything in the pull request, which is think is not required."
1,"Overall, the code seems to be well made. None of the functions seem too long (even though the execution time of one function is unnecessariluy long due to function that manually 'sleeps' for 60 seconds and then checks for a reply back from Servo).


 


Most of the code seems to be concise enough to not split them into additional functions. The team also uses comments when needed. However, as someone who is not familiar with python, I would have appreciated a little more 'line by line' comments that took me through the code."
1,"The functions are not to long but the commenting could have been helpful tp better understand the flow of the code,  some restructuring needs to be done as suggested by the admin for cleansing up the code."
0,"Can't manually test it now, don't even know where should I go to test the functionalities."
0,The code works as intended. The code needs o be more commented and there is requirement of a wiki
0,"The features seem to work exactly as described in the project spec. There seem to be no edge cases that can cause a failure of the work done in this project. As a result, most of the code in the pull request for this project seems to be relatively harmless."
1,"The features work as intended , the code is generated , however cleaner approach can be implemented as suggested by the admin."
1,"Between the writeup and the video, I have a pretty good idea of what the project is doing. The video does a great job of showing how to run the program and explaining how the code operates. For someone like myself who has little/no understanding of Servo or Rust, I did not completely understand what problem was being solved with this program and why it was necessary."
0,"Yes, the writeup conveys what their project's goal clearly."
0,There is no wiki present for the project and it is hard to understand what they are trying to establish. Some description needs to be present in the readme or something.
0,"The report was clear and adequately conveyed that the functionality of the team's work. After looking over the report, I was able to understand the main goal of the project and how the project aims to reach the goal."
1,"The writeup explains what the team wants to do but the wiki is not present, through the readme in the github repo the authors try to describe what they wanna establish"
1,"The positive is that the write gives a very basic idea of how testing was done, and gives the location of where some test files are held. To improve, I recommend adding notes on what exactly is being tested and how it was tested."
0,They seem don't have a test plan for now.
0,"There is no test plan for the project. However, since it is a mozzilla project and from the github pull request i can see that it may be not required. If the is the case the authors should put a notice regarding the same."
0,The writeup had no test plan.
1,"I don't think the code needs to test something as from the pull request comments, it can bee seen that it is just an automation script, so i don't think any precondition is required in this project."
1,"The ""how"" of this project is very well covered in the videos. However, there is room for additional explanation on why it was done the way that it was."
1,"Yes, the reason why they design those functionalities is clearly explained."
0,"Although the writeup tells the reader about the ""Initial Steps"" and the ""Subsequent Steps"" required, it does not go into much detail about how the team's implementation of the project. It seems as though the team was not able to finish the writeup before the first deadline since the end of the ""Implementation"" section gets cut off:


 


""After successfully building servo,""


 


The team was also not not able to complete the conclusion portion of the writeup."
1,"Yes , Although they have not mentioned in the readme but the git pull request informs on what they want to implement. The github needs to be more informative and can help with the reviews. some programs have been mentioned like servo_automation_screenshot.py could have been described in the radme"
0,"Although they did mention automated tests on their wiki page, I didn't see code about testing in their commits, maybe the test is built by the previous programmer?"
0,There was no Test Plan so could not verify this.
0,"As mentioned above, the Tests were already written. All the tests pass after the refactoring. So, the team has maintained that."
0,"The authors have converted most of the test cases. The ""response_report"" controller isn't getting a coverage of 100%.More automatic tests need to be added for this controller."
0,All tests are passed as per the screenshot provided in the wiki page. They have used rpec for testing which is good. I do not see any areas for suggestion here.
0,"1. In summary_ws_url, what is ws?"
0,"There is one variable count in automatic_review_mapping which does not clearly indicate what it does even though the team has mentioned its significance in the wiki and in a comment in the code.


One suggestion would be to change the name of this variable to something that is more suggestive of its functionality.


Rest of the naming convention seems quite reasonable and are suggestive of the proposed functionality."
0,Some of the checks failed for the pull request. The code coverage has decreased by 0.2%.In The team has followed good naming convention and classes and method names are indicative of their role or functionality.
0,"The variables, methods and class names which the authors have used are self-explanatory. The authors have defined helpers which reduces the length of individual methods. This is a good refactoring practice."
0,Refactor automatic_review_mapping
0,"They seem to have done a really good job at refactoring blobs of code and breaking them into meaningful modules and also stating what, where, why and how they did that. Even though they have done a good job at breaking down the code, I would add comments on functions to make code better and easier to understand for a 3rd person."
0,"The code is the result after the original code was dried, so it's structure is dry. Yet, there is no comment in it."
0,"The main approach of the project as seen from the documentation is to refactor long, complex methods into smaller methods so there is no evidence of functions that are too long. 


One suggestion would be to add more comments so that it becomes easier for someone who is analyzing the code for the first time. As comments help such users to understand what exactly happens in the code."
0,"In the app/helpers/response_report_helper.rb, the class SummaryRevieweeReport has many attributes contained in the class SummaryReport. Using Inheritance would be a better option to keep the code DRY."
0,The changes made by the authors make the existing code to be concise.
0,For the Class PlagiarismCheckerAssignmentSubmission. It includes 4 nouns and somewhat too long.
0,Good use of helpers.
0,"I still see that some of the function names are too long but since I have not worked on expertiza project so I do not know for sure whether there is still room for improvement. But I do feel that some names are long.


They have broken down the blobs of code into smaller modules, stated the names and the reason for doing so. No suggestions here. Great job!


I definitely believe there is a lot of room for improvement by adding comments to the functions describing briefly what they do


They have done a really good job at following the ruby style guidelines."
0,"They haven't deployed yet, so I can't manually test it."
0,Since there is no UI elements to be tested I ran RSpec on the refactored controllers and all tests successfully passed. Also the team has included screenshots of the passed tests which show that after refactoring the functionality of the application remains the same.
0,"The link for the app has not been given. I feel that there must have been issues while deploying the app, like most of us did."
0,"There isn't any view associated with the controller action and hence i am unable to manually test it. But as i can see that the automatic tests aren't getting 100% coverage, there certainly are some corner cases which i am unable to test."
0,The functions of those two methods work as the original codes. They refactor the code without losing features.
0,The code is not deployed.  There is no link to an accompanying video for the test cases.
0,"As the reviewer I had a good understanding of this, but additional commentary on why the testing strategy was the best option would be helpful."
0,"As far as this project is concerned, since this was a refactoring project, I can see that they have refactored it properly and tested the code using rspec which shows that all tests have been passed which is good. I did not work on expertiza and I have not myself performed a test to see if this works."
0,The authors have not explain their work. They havent said which design pattern they have used and why. The wiki is just loaded with basic information about the code.
0,"Yes, the writeup includes both problems and how they are gonna solve the problems. What's more? They include the files changed by them which is easy for a reader to look into it if they only got the codes instead of github pull request content."
0,The wiki is well documented and clearly indicates what functionality the work is related to. The project is based on refactoring and the team has briefly explained how refactoring works and what changes been made to the code files to achieve the target.
0,"Yes, the writeup adequately and clearly explains the functionality of the project."
0,They use succinct words to describe the tasks and how they finish their plans. It could be better if they can add more explanations to their codes.
0,"The write-up shows what needed to be done, what was done, and the results of doing it.  This is a clear and concise approach to the project."
0,The wiki page is pretty clear as to what the project aims to achieve. What I really liked about the wiki page is that they have snapshots of what the previous worked looked like and how it looks after they improved it. This is really impressive as this gives a very clear and fast understanding of what you have worked on. They have also listed out the files that they edited which is really good. They have also explained what Review Mapping Controller is which helped me get an idea of basic functionalities of the code.
0,"Everything looks good, they also screenshot the result of the test. Yet, they didn't explain details about their test codes."
0,The writeup does not include a test plan.
0,"The writeup does not include a test plan. However the team has mentioned that since it was a refactoring project, the tests have already been implemented."
0,There isn't any test plan mentioned on the wiki page. They have included snippets of the test which they ran and has passed without any failures.
0,"They did not use the word ""plan"". They just describe what they have done."
0,I would suggest adding more code snippets/detail to this section.
0,"I believe they have extensively scanned the previous code and tried to improve the code. They have included the screenshots of the tests in the wiki itself which was apparent. However, I would do a screencast explaining briefly about the project and what a reviewer should expect."
0,"Yes, they do explain why they do it that way. Also, they apply the dry rule to refactor the code."
0,Yes the writeup clearly explains how and why the authors have did the work they did. The team was supposed to use factory design pattern to refactor response_report method and the implementations for the same seems to be correct to the best of my knowledge for the same.
0,"They have done the best job at this as I can see that they have pasted the piece of code which was supposed to be refactored and the piece of code after they refactored. They have also written about how they broke down the exisiting bulky method into smaller modules and they have also provided the names of those modules along with code snippet. I did feel that certain names were really long, but they did make sense as to what they mean. I would recommend if you can still cut down on the length if possible."
0,"The factory pattern is used correctly.  Also, what needed to be done and how it was done is also outlined."
0,"They use factory design patterns, break up the long original codes and make it much more succinct. It would be better if they can add some diagrams to illustrate their work."
0,The writeup explains the reasons for the aspects the authors changed or introduced in their project. They have used the factory design pattern and the implementation is correct and adheres the principle of this design pattern.
0,"The team has elaborately explained their work in refactoring the existing code. They have also explained why they have taken a particular approach for example in Exceptions in Helper method section, the document explains the issue with the previous code and how it has been resolved .This gives more context while reviewing the code. However in some sections, the reasons for making so could be more specific. For eg:- in the Approach for Refactoring response_report method, the statement "" the controller method originally was sharing a lot of instance variables with the corresponding views, and it has the long switch statements is quite abstract."" You could name or highlight in the code snippets, which instance variables are being referred to. 


Similarly in ,  Approach section of"
0,They do not have to worry about design patterns here as they are dealing with only unit tests.
0,"The purpose of the project and what all changes the team did in the project is made lucid in the writeup. The impact of the test looks promising enough. But again, I think you guys could have been more descriptive of the actual changes that were done and the results thereof. If the explanation was done on the basis of the actual code implemented, it would have helped a lot."
0,The authors were able to explain what they did in a clear way . they talked about using factories bot in the code .
0,Need to mention in a more descriptive way what changes have been made and why they have been made. The tests are meaningful and seem to impactful to the project.
1,"All the tests are working with a success. I can run the test with rspec command


 


I might be reading the wrong number but when I ran your test case on expertiza linux virtual machine I get 


Coverage report generated for RSpec to /home/expertiza_developer/expertiza/coverage. 1232 / 16971 LOC (7.26%) covered.


 


7.26% coverage?"
1,"Yes. The authors have written rspec for all the test cases in their test plan. The test coverage (as seen in the screenshot) is 100%, which is good. One thing that the authors can add is markers (comments) in the rspec that correspond to their test plan so that the reviewer knows which test corresponds to which plan."
0,"All test cases have been converted as explained in the writeup. There is no way of testing them to know if they are failing, but looking at the code it seems that they will work just fine."
0,"The code in the file spec/models/collusion_cycle_spec.rb follows DRY principle.  However, the code not well commented to help reviewer understand the the flow of the code. Also, the code has long methods which can be broken down to smaller functions."
0,"participant1,2,3,4 were good variable names when you were later comparing them with response12,21,etc


You used good names for the context using the names of the method which are going to be tested."
0,the newly added code in the pull request has not been excepted and the code lacks explanation of why the tests were written.
0,The pull request that is submitted has not passed. But the code submitted is well written. It follows the ruby style guidelines and proper formatting. the method names also seem to be proper.
0,"'colcyc' on line 15 could be better named but other than that the methods and variables seem to be reasonably named. They are suggestive of the functionality, cannot find any fault there."
1,"The writeup is very good and they explained the cases very nicely. However, the pull request has not been accepted. I think even though the coverage has been increased the code lacks certain explanation such as the reason for the style of the code and approach."
0,"I am not having trouble following the code, but comments should be added, currently there are no comments. You have used the 'let' well to keep it not DRY. There are good enough methods and no more methods needed to be added. The it statements clearly explains what each example will test."
0,Comments need to be added so that the reviewers can know what the authors are doing what they are doing. This makes it hard for the reviwers to understand the functionalities. The code follows the dry principle.
1,The code submitted is well written. It follows the ruby style guidelines and proper formatting. the method names also seem to be proper. The authors can add a few comments to describe the code which will make it better.
1,"I could find the code contributed easily, which I appreciate. The Ruby guidelines have mostly been followed. There seems to be no issue there. No function is longer than necessary. There are a few redundant spaces that RuboCop has detected. Also I would suggest adding more comments to make the code and tests more readable."
0,"The code has no comments and it is very hard to understand the functionality of the code if we only look at the code. The wiki does explain what the author is trying to establish. However, they need to mention the flow in the code as comments as well so that reviewer understands this clearly."
0,Code makes good use of 'before' and similar statements to follow DRY.
1,The features work as intended when manually testing the code. The question I have is what if the score in cycle_similarity_score is a zero or a negative value?
0,The code takes care of all the major functionalities and just needs to explain the flow more. The build is passed and the coverage has increased
0,The authors must provide a screencast of their tests so that the reviewer can see how their testing works. There is no screencast in the code at the moment. They have only added a screenshot to the code that tells about test coverage.
0,Code seems to test edge and normal scenarios well.
1,The work takes care of all the functionalities. The coding style and standard can be improved to better explain the flow of the code and have more comments in the code.
1,Since there is no feature or link for a deployed application to test and I do not see a screencast or a video of the tests in action to know if the test cases are working as intended. I recommend adding a screencast explaining all test cases covered and how all corner/edge cases have been handled.
0,"The write up is pretty well documented. The write up explained what each method in Collusion Cycle is responsible for. The example located underneath Model Purpose,"" For example, if participant A was reviewed by participant B, participant B was reviewed by participant C, participant C was reviewed by participant A and all the reviews were indeed finished, then a three nodes cycle exists. "" was a good example what the class is made for."
0,The project is well documented on wiki they have explained some of the changes but they have not mentioned where the changes are and the reviewer has to find it manually.
1,The authors have given a brief introduction to their project. They mention that they are required to add rspec for collusion_cycle.rb model. They can add a brief introduction to TDD process and a Wikipedia link can be provided. Other than that the document is well written.
1,I really like the way they have written out their writeup. It is detailed and has relevant headings/sections providing a good flow and readability to the user. The use of images for explanations is really helpful. I would like to see a little more information about what the project was about as I could not quite understand what they meant by a collusion cycle and I had to go through the project description. Overall very well done.
0,"The writeup is pretty well explained. However, the writeup does not explain the changes that are being done in the code and if they have been tested it properly. 


They have mentioned different functions that perform certain actions, However, where are these functions written and in which file is mentioned in the wiki. The reviewer has to manually find the file where it is located."
0,"Write-up is thorough, describing the code under test, describe the limitations and successes of the project, and is clear and easy to read."
0,"cycle_similarity_score and cycle_deviation_score test cases have been tested well with using 2,3, and 4 nodes tests. Two_node_cycle method has been shown and it was used to explain how second_node_cycle, and third_node_cycle tests were implemented. You tested by checking if each reviewer was nil and using expect to check if it return the correction result. I would assume from the document that second, third node cycles were implemented in similar way but used another participant to test for nil."
0,The authors have put pictures up of the different type of test scenarios and have explained it well. They need to mention where the tests are in the project folder
0,"The test plan in explained in great detail. The authors have mentioned all the tests they are performing on the model. Multiple cases are written for each function. They have also used diagrams to explain the various use cases, which is a plus point."
0,"The test plan looks to be complete, considering this is a test case development project. Based on the wiki, the team has identified most of the test cases they need to deal with for each module that they are working on. This seems to be worked on well."
0,"The authors have explained the test plan very clearly. It's is really good that they have used images to define different edge cases and possibilities. I believe the authors have covered all the scenarios upto my knowledge. I really admire the way of using images to explain different cases. However, they need to mention which files these unit tests are included in."
0,Extensive checks for nil and edge cases are described.
0,"Although, the writeup explains the functionality very well, they haven't mentioned which design pattern they have used an why?."
0,"The writeup explains well what the tasks were through the 'Project Details' and 'Test Plans' sections. They provide a good description of what is required and what they have done and have included a testing plan to execute on the requirements. Since this is a test case building project, there is no requirement of any design pattern here."
0,The authors have done a great job explaining the tests they need to do and the test cases corresponding to the same. They have mentioned the test plan with detailed diagrams. They have written test cases for the various functions in the model.
0,No they have not mentioned which design pattern they have used. They have mentioned how and why the changes they have made.
1,"The writeup explains well. The only question I had was why is 'context' being used to test the methods and not 'describe'. It was good that you have used let to create objects, as well as used let at the beginning of the code."
0,A test plan is not included in the writeup.
0,I do not see a test section
0,"The team has not written about a test plan.However it has been mentioned that they are unable to access the assignments section which has prevented them from testing their code.The team has however considered edge cases as they have mentioned in Adding past due assignments to task page - a helper method to break long file names into shorter ones, and adding pagination to handle a huge list of assignments.I was wondering if in the separated teamed-with list from task list, are there different task box for students that a user has teamed with in different courses or if it is a single task box containing all the students a user has teamed with. Also, if it is the first case and if the number of courses increase, won't it clutter the page with multiple task boxes."
0,Testing has not been done. The authors explained in the document that they were unable to test due to some issues.
0,There isn't any test plan associated with the writeup. Hence unable to comment on it.
0,The test plan section is missing.
0,"The writeup does not include an explicit test plan section so it is hard to say what all cases the team has considered while implementing their changes. Making the writeup a bit more elaborate would have helped here. The result seems to indicate that they must have exhaustively covered all the edge cases, but would be unwise to form an opinion without a solid writeup."
0,"Although write all required tests was mentioned as one of the tasks in the writeup overview, I couldn't find any test plan as such in the document."
0,Again cannot find the test plan so no way to check these.
0,"No tests are added, test plan is also missing from write up."
0,"As mentioned above, the author has not proposed a test-plan."
0,Test plan is not included in the document. Testing has not been done. It is mentioned in the document the reason why the authors were unable to test.
0,"There aren't any changes made in the spec folder. Hence i'm assuming that the authors haven't added cases to the existing one, if any."
0,Testing is pending.
0,There is no test plan that is included in the writeup so it is hard to say what all cases the team has considered. Clarifying all the cases in the writeup would have helped here.
0,There was no test plan mentioned in the writeup nor did the code contain any rspec files.
0,"The variables, methods and class names selected by the author are reasonable and clearly stand for the functionality they have been defined for."
0,"Overall very little stands out, the class, variable, and method names mostly adhere to the expected good ruby practices. Two things stood out to me in this section, list_current_student_tasks is slightly misnamed. this seems like it lists the tasks of the current student, not the tasks that are currently due for the student. The method breaking_wrap_warp has an odd name as well, the double wrap just makes it difficult to intuitively know its use."
0,The pull request has been sent but the build hasn't passed. Also the code coverage has decreased to  13.896%. Most of  the code follows good convention and can be understood easily.
0,"The link to pull request has not been submitted.


 


Upon searching and finding the link to pull request, I saw that the Travis CI build failed and there are 15 code climate issues."
0,"The authors have added comments for almost all the changes which they have made. They have used simple names for methods and variables which are self-explanatory. The only part i didn't understand was this: 


+require 'will_paginate/array'


Why is this being used? It will be great if comment could be added for this."
0,Breaking up the logic into smaller methods in the controllers makes the code more readable.
0,"Your pull request couldn't be found. All the naming conventions seem appropriate and it is easy to understand what everything stands for. Since the pull request was not found, it is difficult to investigate any further."
0,"For the code changes, the team have used proper naming conventions to name variables, methods and class names. They have ensured that the newly created variables and methods use the same style as the code that is already present in the relevant files. I felt that every named item in the code was self explanatory and the purpose of each variable/method was understood from the name. For eg, student_tasks is a list of student tasks. Hence I am giving a 5."
0,The functions that are used appear to be of reasonable length. Also the team has included certain comments that signify what is being done but I feel there should be a bit more number of comments so that it is easy for someone who is observing the code for the first time to understand what is actually going on in the code.
0,"Majority of the code looks great, DRY and following good style. One function does stand out as a bit odd, due_date_color. I understand that it needs something akin to the large if-else chain so you can correctly apply the color based on due date. But it seems there might be a better way? If nothing else you can explicitly call return on the color rather than storing it in the rtn value and returning at the end, this makes it so that readers will not have to read extraneous information before reaching the exit of the function."
0,In the def due_date_color(due_date
0,"Upon checking the code contributions, the mentioned problems do not exist.


 


Suggestions:


Simplify the method 'due_date_color', as it is hard to read."
0,"The methods are small, and follows the rails style guideline."
0,The code follows good rails practices. But I would have loved it more if the team would have been more descriptive of the changes they have made in the writeup.
0,"By reviewing the code, I made the following observations:


1) None of the functions are too long, they are all around 8-15 lines each and good modular approach was followed."
0,The app is not deployed so I tried to download the zip from github and tried to run it on localhost but failed to start the app. Errors are found when I run rake db:migrate. I suppose there must have been certain changes that is not allowing the app to run on my machine. Although the team has included screenshots of the changes to the UI in the wiki so by looking at those the whatever the team has claimed to be working appears to be working.
0,"From what I was able to test it seems fine, I can't really think of any edge cases for this project. Maybe if the date is negative? Or if it is incredibly far into the future (not sure what errors this would cause, just how should the functions handle something like 1/1/3000)?"
0,The author has not deployed the code and I believe it is due to some technical issue that most of the teams were facing.
0,"I was able to run the project but I was not able to test it, as the instructions were not given in the document on how to test it. It was stated that the authors themselves were unable to test it."
0,"Not all features are working as stated in the writeup. The segregation of assignments and student partners has been done but i cannot see any colored assignments which are present in the assignments page. Furthermore, as per my understanding, the past assignments should be included in the past assignments section but these aren't included in those and are present in the current assignments section."
0,The application has not been deployed.
0,All the functionalities seem to work just fine. The code does exactly what was expected of it. They follow good rails practices and the code is easy to follow.
0,"The project was not deployed on any platform such as Heroku or AWS, hence manual testing was not possible. There was also no screencast demo so I had no way of testing the new features."
0,"The document is very thorough and precisely explains what was supposed to be done and what has been done by the group. Also the group mentions which files required editing for each task. This helps the reader to understand what was exactly done by the group.


The document significantly helps the reader to understand what the project does and how the project does what it does.


If I have to provide any suggestions for the Wiki then all I would ask is to write it in a more categorized like dividing each task into two section like first what is the problem and second what is the proposed or implemented solution for the stated problem."
0,"Very easy to read and follow, good work. Some of the wording can be improved, for instance the Adding past due assignments to task page section, reading the first paragraph it feels rather repetitive. Perhaps you can combine some sentences, or try to change the wording among the similar sentences 1&3, 2&4. I think you did a good job in describing the changes in both a technical and non-technical way, but seeing a small snippet of how the views code was changed might help here. Are there any tests being done on the dates before adding them to the tables? For instance what if an instructor accidentally assigns a task a date for say 2108 instead of 2018?"
0,"I was going through the Wiki page and the first thing I read was the Project Overview. There is a random Issue#80 mentioned in the Overview. I was wondering if the numbering could be consistent for all the issues. The team has described in detail as well as posted screenshots of the issue and the solution. This makes it easy to understand the work done by the team. The writeup is clear and consice. It is sufficient to fully grasp the project objective and the work done by the team.The only issue is that the team has used screenshots of the issue and the solution for all the bullet points in the overview except ""Separating current and past task list"" This feature has been implemented as mentioned by the team. Just to be consistent in the formatting, you can add pictures to this heading as well."
0,"Pros:


- Project is explained as a list of tasks in points which is easy to read and understand


- Screenshots are used which makes the project easy to understand


 


Cons:


- References are missing


- Test plan is missing


- List of files modified or added can be mentioned in the document"
0,The functionality has been adequately explained. From this explanation i have got a clear view about the project. They have given proper explanation of each of the issue which they have stated accompanied with the corresponding images for clear view of whats happening.
0,"The write-up is clear showing, for the most part, screenshots of the functionality.  Please add screenshots for the last two sections."
0,The writeup is very descriptive of what all changes were expected and the changes the team has made. It is very well written and comprehensible. The team has been very has been very illustrative of how the changes they made have affected the application and have attached screenshots wherever required. But I do think they could have elaborated a bit more on exactly how they did all the changes that they did.
0,"The writeup was well written. It clearly explains the problem statement, the solution and the files added/changed. Some screenshots were also provided which helped me in understanding the problem statement properly. From the writeup, I could easily understand that the aim of the project was to add past due assignments to task list and highlight current due assignments with different colors. I liked the way they had split up the whole project into smaller sub tasks. Overall, it was written in simple, easy to understand manner and hence I am giving a 5."
0,Yes. The problems specified did not as such require the use of any design patterns. The author mentions one task that has not been tested due to some issues with access to assignments page so apart from this everything else seems to be correct.
0,"The writeup does explain how and why the authors did the work they did. There were no mentions of specific design patters, but they also don't seem rather applicable to this problem. Something that might be improved upon is the section covering the highlighting of current and past due assignments. Perhaps you could describe what each color means? For instance shouldn't all past due assignments be red by default? And for assignments that have not yet reached their deadline, how many days away does the color green/yellow/red represent?"
0,"Specific changes in specific files have been mentioned such as ""A helper function was also added to the student_task_helper.rb file to break a string into multiple lines, even in the middle of a word, if it contains a word that is very long. "" in the adding past-due assignments to task page. This removes the need to look at all the files individually to figure out the code. 


All the issues mentioned in the overview have been clearly explained in the following sections except for 





Check for correction in due dates o"
0,"Design patterns used are not mentioned.


 


The way the project was done is explained clearly - the methods, variables, tables added/modified, and was easy to follow.


 


Suggestions:


Code snippets can be added along with the explanation in the document to better understand what was done. It is hard and time-consuming to look at the explanation in the document and search for the corresponding code in the repository."
0,"Yes, the changes and addition of new code has been explained. Also the reason for those changes has been adequately stated. I cannot see any code on their wiki page so i'm unable to comment on the code related aspects like design pattern etc. They haven't mentioned this in their writeup atleast."
0,Please add a list of the changed files with a high-level explanation of what was changed in each file.
0,"The ""whys"" and the outcomes of the project are very well described. The purpose and the outcome of the project are easy to understand and the writeup is very lucid. Having said this, as of these two areas seem to be the major focus of the writeup. The 'how' part of the project could have been elaborated to a better extent. It's difficult to understand what exact changes the team has made to arrive at a solution. I think this can be taken care of in the next submission."
1,"The writeup explains the problem statement and then goes on to explain how the team went about solving it. It mentions the name of the files that were modified/added for each task and also tells what functionality was added in each file. Screenshots of code snippet were added, which was very helpful in understanding the implementation of the project.


 


I am reducing one point because"
0,There is no such mention of any test cases present in the wiki. even in the code there is no information present regarding the same. It has long functions which i believe can be broken down and code commenting is required.
1,"There are very few cases mentioned in the writeup but they have managed to include a lot of cases within, the test cases are well thought out and well written."
1,All the tests conditions were mentioned in the spec file and all of them were implemented and tested
0,The team seems to covered most of the tests required for testing the functions.
1,"Code was very clear, diagram in the comments was helpful."
0,"The code follows ruby guidelines. However, there are no comments present in the code which makes it very hard to understand the flow of the code. The code follows dry principles but lacks a good coding style"
0,"There were very few or no comments and it does become extremely difficult to work on such next time for someone, I would consider adding more comments. 


It can be seen that the Ruby Style Guide has been followed and there isnt any code smell."
0,"It being a test file and the conditions being in plain english already , it was easy to read through and follow them . 


if it was possible to move few of the object creations into the earlier / common steps , like in four node cylces . it would be good to make it look more dry"
0,The functions are adequate in size and cannot be extracted in a separate methods. It would have been helpful if more comments were given on the test cases. the code fillows good ruby and rails practices.
1,"Since they are writing unit test for a given model, there is little freedom to rename methods to classes."
1,The app has not been deployed and no link has been provided. However I feel its due to an issue most of us were facing while deploying the app.
1,"Any failures for this would be because of the actual menu_item implementation, not the tests this group created.  But because they don't test all edge cases, if there was an implementation problem this might not get caught."
1,"The project is about testing a model in expertiza. At the moment, the users do not have a pull request. So there is no way to test their code or tell if their code is working properly."
1,"While the write up does not contain an explicit ""Test Plan"" section, it does contain a section explaining the different tests that were written.  These tests do a good job presenting the reader with the code and a what the code does.  That being said this section could definitely be improved.  I would suggest adding an explicit ""Test Plan"" section as ell as updating the test conditions and what they do.  I like how you included the test cases in this section, but instead of including the raw code and then farther down the page a description of what the code does, maybe add a description first, and then the test.  This would help with readability.  Other then this though, it seems like you hit all of the main scenarios within the scope of the tests.  good job!"
0,The test plan has been implemented and properly explained. There are no screen captures to show the coverage or if the test have passed.
0,"Yes, their unit test covered all methods in menu items model by testing 16 conditions."
0,Yes. They describe pre-conditions in details and show how they complete the unit test.
1,The tests provided in the wiki has been tested. The coverage has increased. The edge cases are mentioned in the wiki but can be added for round 2 submission.
1,The authors have written the detailed test plan but they have not written the actual rspec code for automation. The authors must provide link to the pull request so that a reviewer can review their code.
0,"Yes, the author has done a great job converting all of the discussed test cases into automated tests. Furthermore, the author has written strong tests that pass with 0 failures.  Great job."
0,"All tests are automated, as the project is a test."
0,I had to search for the unity id of the student to locate the pull request. You might want to rename it to include the group number and name of the project. The Coverage increased to 44.696% Some of the checks in the build were not successful. The test file has elaborately named tests which are indicative of its function and also which method they are testing.
0,"Yes. They made a pull request and coverage will increase (+0.8%) to 44.696% when pulling, but one check is not successful: the code seem to have to similar blocks need refactoring. This team is working on unit test for a model, so their pull request just include one newly added spec.rb file which is correct. I'd mention a minor problem: the ""describe-context-it"" hierarchic structure is not used properly. As seen in their code, they used ""describe-context-it"", ""describe-it"", ""context-it"" or ""context-context-it"" for one ""it"" block. It's not clear what the differences are."
1,The only part that could probably be rename is changing from @test to @test_menu_item to more clearly show what the test variable is like you did for @controller_action
1,The authors have not provided any screencast of the testing they have performed. They have also not created any pull request (not mentioned anywhere). They authors must add a screencast of their work if they do not deploy their application so that reviewers can see their work.
0,The pull request increases the test coverage. Certain changes are required in the code as highlighted in the pull request. The variables and method names are reasonable and with only some changes in the code the tests can be inter=grated.
1,"The code looks very solid. The pull request was successfully put in to expertiza master.  This PR was properly named with an easy to understand and descriptive title, as well as a short and to the point comment message.  One thing that might be a nice addition here would be to attach the expertiza write up you did to the pull request.  That way, reviewers can get a better idea of what exactly you are testing and why.  With regards to the code, it all looks good and is well written.  I would suggest renaming some of the variables though.  For example, you created some ""MenuItem"" objects in your before(:each) method.  You named these objects ""test1, test2, test3, etc.""  This isn't very intuitive and descriptive considering these are items.  Maybe consider renaming these, or adding some inline comments explaining what they are used for.  Other then that, great job!"
0,"When combined with the documentation provided, sufficient detail is given to understand the workings on the code. There appear to be some unnecessary comments, but that is a minor issue. Overall, the code appears straightforward and easy to understand."
0,The tests are short and looks like it follows Ruby Style Guide
1,"The code surely works but the before hook is too long, it defines @test1-6, @controller_action1-3 and @content_page1-3 but just 1 or 2 of them are used in each following ""describe"" block. I'd recommend instead of just using one before hook in the top, you may separate it for specific describe blocks."
0,"The code is not too long. Some comments are required in the code to understand the flow of the code, but the description in the wiki helps to understand the structure of the code."
0,"Some blocks are long but that is expected for test files. The code doesn't follow the style guide in its indentations. There are different levels of indentation throughout the file. Also, all of the ""# Write your test here!"" should be deleted."
0,The authors have not provided any pull request. So it is not possible to review their code at the moment.
1,"The functions all look short and concise.  One suggestion I have though is to extract some of the redundant code out of the functions.  For example, in a few of your tests, you create and save the objects ""test7, test8, test9"".  These could easily be put in a before(:each) block to reduce redundant code. Other then that the code looks great.  You did a good job following the Ruby Style Guide.  All in all good job."
0,"Code seems to provide substantial depth without having excessively long methods. It could potentially benefit from more edge case testing, however."
0,"Yes, Their newly-added test menu_item_spec.rb runs correctly with 16 examples passed and 0 failure. Also in index.html, the coverage reached 100% for menu_item.rb which means their test have covered all cases in menu_item.rb."
1,Yes. The test file increases the coverage of the test.
0,The features work as intended. The edge cases is not mentioned in the wiki but can be implemented in the round 2. The cases mentioned in the wiki are well tested by the code.
1,All features work as intended.  It appears that the author has thoroughly tested all test cases.
0,"Code Climate produces several notifications, namely issue with spacing, tabbing, and potential for minor refactoring."
1,"The team explains in great detail about the menu items, which is the focus point of the project. The sections Table explains the database entries. Instance methods and class methods are explained which makes it easier to review code. The team has clearly stated the issues that the project aims to solve and also explained them in sufficient detail. The screen captures to show the menu items gives context to the explanation provided.


However, I feel that there is some extra information on the wiki as well. As this is a wiki page for the project,I would suggest putting the information about Test Driven Development and Unit Testing as embedded links or maybe at the end of the document as it is does not serve as an introduction to the project but rather gives a background to the project. I have similar views about the section in the document - Expertiza Environment Setup. Setting up the environment again is not the main function of the project.However I do agree that it helps someone who is completely n"
1,"wiki for this project is well written and organized. The hierarchic structure almost covered every thing need to be mentioned: There're ""introduction"", ""problem statement"", ""plan of work"", “implementation steps”, “conclusion and learning outcomes” and “references”. But I'd make 2 suggestions:


1. The ”introduction“ part is very long and all about explaining what expertiza, TDD and unit testing are, which I think is not necessary. ""introduction"" should focus more on your project rather than something so general.


2. There's no result shown in the write up such as how many coverage percentage they finally got."
0,The description is so well-organzied and has all required steps. Easy to understand.
0,Writeup very clearly explained the need for their testing and how each test would help accomplish their goal.
0,The writeup is very well document. It is the best writeup among all the reviews given. They have mentioned everything that a wiki needs to have. I really like the images showcasing how to navigate to test the functionality of their code.
1,"The authors have given a very detailed introduction to their project. They describe the Testing Process, Problem Statement and plan of work in great detail. The authors are required to add rspec for menu_items.rb model. The explanation of the TDD process can be shortened and a Wikipedia link can be provided instead. The page can focus more on the project details."
0,"The author has done a fine job with their project write up.  They have done an excellent job indicating their projects functionality and purpose.  Since the teams project involved writing unit tests, I really appreciated them defining and explaining the purpose of Unit tests in general before going into detail about what they were testing.  This really helped me as a reader to understand the purpose of unit testing as a whole, and how it related more specifically to what they were doing."
0,"Although the section is not titled test plan, as this project is testing, the document gives a lot of detail on the reasoning for each of their tests. It does not, however, give much detail into describing edge cases and invalid input scenarios, and how those situations are handled."
1,The test plan is described very well in the wiki. The test plan includes different conditions that they need to test. There is no mention of any edge cases in the testing cases. If there are the authors need to add that in the wiki as well.
0,"The test plan was very thorough but missed a lot of edge cases and invalid values. For example, #above and #below don't test cases when there is no above or below values to return.  .find_or_create_by_name should also test both cases (find and create) but only one of the cases is tested. .items_for_permissions is a good example of a more thoroughly tested method"
0,Yes. Their test plan is a clear outline for their work. They did not include those pre-conditions in the plan but they did that in their steps.
0,The test plan in explained in great detail. The authors have mentioned all the tests they are performing on the model. Multiple cases are written for each function.
0,"Yes, it seems they have thoroughly listed and explained every steps they took in detail. But I'm a little confused about the ""expertiza environment setup"" part cuz they didn't include installing bower code in ""setup commands"" which is essential to run expertiza on local host. Also, I didn't find database migration in their setup process. It's a minor problem but I'd recommend making that part complete."
0,Yes. They explain their work with great details.
0,Yes they explained TDD and Unit Testing well. They also explained everything about the model they were testing very thoroughly.
0,The write up explains everything that the projects needs to work on. They have mentioned the design pattern they used and why. I don't think anything is missing from the wiki. section
0,"The authors have done a great job explaining the tests they need to do and the test cases corresponding to the same. They have mentioned the same under ""Testing conditions"". They written test cases for the various functions in the model."
0,"The writeup describes, in detail, the background of each method being tested, the test written for it, and why the test operates the way it does, in context."
1,"Yes, the write up does do a good job explaining what the authors did and why the authors did it.  Since this project mainly focused around Unit Testing, there wasn't really any ""design patters or principles"" that the team needed to follow.  That being said, they did write clean code that followed the Ruby on Rails style guidelines as far as I could tell.  One small problem I had with the write up was the amount of information that was presented on Test Driven Development.  While I appreciated the section they wrote on Unit testing since it related directly to what they were doing with their project, it seems that including a section on why TDD is good is a bit ironic.  I say this because while TDD is good, this is an example of testing after development and not TDD.  Because of this, having a large section in the write up that explains TDD seems out of place.  I would suggest removing this section."
0,"No writeup link provided in the submission.


There is a documentation file attached that gives information about the project. Fair explanation about what project is about. Could have added more background information about servo, rust. Few lines are only added."
0,"There were no tests added that I could tell, and so I would work on figuring out how you will test your contribution to Expertiza."
0,No pull request submission. Couldn't check the test plan added/modified by the author.
1,"There are no test cases added, please try and add them at the earliest, some cases could be finding the total commits made by each user and comparing against the expected, wrong github link check etc"
0,Testing was not seen to be part of the requirements
0,No test plan was added in the Test plan writeup and similarly no rspec files were added. Also there were no instructions for manual testing. So I wasn't able to check any of these.
1,"As mentioned earlier, there was no test plan created (going by the wiki). There is an automatically created test case :github_data_controller_test but it doesn't have any tests written out. Do plan on testing it rigorously to make it foolproof."
0,"They do seem to have a file: github_data_controller_test.rb but I do not see any piece of code written in it. As per my understanding according to what was written on the wiki page, I did not see anything in the testing section. So, I do not have any idea of what I should expect to see in the code. I am assuming the team would still be working on this and probably have it done by the next round of review."
0,"I can't find a PR for this group, using the name of the PR or contributors. Honestly I dont know where to find the code to even check this, since there is no PR and its actually quite difficult on Github."
0,No pull request in the submission.
0,"I couldnt find the pull request associated, please complete this at the earliest."
0,"Pull request couldnt be found for the project .  It would be good if the authors provided the pull request name 


The code , variables names and class names look well written"
1,"There was no pull request link given, only the link of the team's github repo. Hence I looked at the commits section of the repo to look at the recently made commits. By looking at all the changes in Git commits, I could note that proper naming conventions were followed to name variables, methods and class names. They have ensured that the newly created variables and methods use the same style as the code that is already present in the file. I felt that every named item in the code was self explanatory and the purpose of each variable/method was understood from the name. I'm deducting a point because I looked at the commits and not the pull request."
1,I could not find a pull request that matched the project description. Have you opened a pull request yet? Consider opening a pull request at the earliest so that the Expertiza team can check the work you have done and integrate it if it passes their requirements.
1,"There are gem related updates in the gemfile which majorly seem to be for a newer version of gems. But this is not the primary concern of the question. Apart from that, I reviewed github_data_controller.rb file. The actions defined in this file seem to have understandable names (assignment, assignment_team). However, a brief description about a function (action_allowed?) would have made my job a little easier and code would follow a better practice ofcourse. Was able to understand what this meant (possibly for checking if it is a pull request?)


GI"
0,"As mentioned previously, I cant even find any code that was changed, so you should create a pull request or make it possible to see your additions."
0,No pull request submission. Couldn't check the code modified by the author.
0,"Somethings I found a bit odd, but thats my opinion, changing gem files could lead to serious complications so i wouldnt touch them, please remove puts,


A java like coding approach has been followed"
0,"The newly added code looks dry to the most extent . There were some instances in the old code though that could be modified , like the long brackets /with nodes"
1,"By reviewing the code, I made the following observations:


1) None of the functions are too long; all are around 10-16 lines each and good modular approach was followed."
1,"It was a bit difficult to find the files modified by the team. I went through the commits and found two files that have been created/modified: github_data_controller and github/show.html.erb. The code mostly follows good Ruby practices and there are a few comments provided that tells what that particular code should do. The functions don't seem to be too lengthy either which is good. I am not sure how the GraphQL should be, but it seems to use many lines for a couple of words which I don't think it should be. You could add some more comments for someone else to be able to follow the GraphQL lines. Overall, good work."
1,"I do not think that they have any of the functions which are too long. They have followed a pretty neat style of coding


As said earlier, the code does look good however, I see there is some cleaning up left to do (file ex: github_data_cotroller.rb, lines: 65+)


I worked on a mozilla project, so I did not have a chance to work on any part of the code of expertiza. Overall, they seem to have followed good modularity. However, as I mentioned earlier, for better practices and for making reviewer's life easier, a brief description for a not-too short function could help.


The code does seem to follow the Ruby Style guidelines very well. They have defined actions in the controller which is a good practice."
0,"Unfortunately as we can't deploy our projects, I am unable to test their implementation. They did provide 3 pictures, though it is unclear to me when they were taken and what they truly indicate."
0,No instructions given to test the work of the author. Please add a screencast/ wiki page to ease reviewing process.
0,"There are just images of expected output, no deployment was found so there was no way to check cases"
0,"Deployment of the code wasnt seen to present , to test the functionality . Images to some extent show the work done by the team"
0,I couldn't manually test it as the app was not deployed on a platform such as Heroku or AWS. Neither was a screencast demoing the application running on the local server provided so I could not test the features of the application.
0,"Since the code could not be deployed yet, as is the case with most teams, there is no way to manually test the features implemented."
1,"The team has provided the screenshot of their working code's output, which is great! However, I have not worked on expertiza project and I do not have idea of how to build and test their code. I am not sure if they were supposed to deploy it. But a screencast of their demo would have been a lot better to understand their work. I would create a small screen cast explaining briefly the aim of the project and show a demo of your work."
1,"The first think i notice is in the problem statement they say they want to calculate ""meaningful"" metrics from github. What does that mean? it isn't explained further in a sort of implementation section. That sounds good as a base problem, but I think they should expound upon that to include specifics. They do explain the background, that they want to include functionality to take metrics from Github and display them to instructors, which is pretty good. They describe their planned implementation, but don't go into project level specifics and actually explaining them going through the plan or how it works. They simply provide the interface by which they will receive these metrics, but not how it will talk specifically to Expertiza. I think they need to work heavily on shoring up their logical flow of information and explaining the implementation, as well as their thought process going through the 'how it works' section."
0,No writeup provided by the author. Please provide the writeup for the next submission.
0,"The objective has been clearly stated but there is no additional information related to anything else, there is no test plan, no images or diagrams"
0,"Basic functionality is written  well that they wanted to give the matic after parsing the github commits information . If more detils of what was bad with the earlier design is written , it would be easier for the reader.Reference could be added to the earlier implementation."
1,"The writeup seemed to end abruptly. Improvements and testing sections were blank presumably because they are still working on it. I liked the way they had broken down the problem statement into smaller tasks, so I was able to understand the requirement. Although they had provided a link of the previous team's writeup, I couldn't really understand how this team's design works. Perhaps they could have explained the proposed design with design patterns, or screenshots or code snippets."
1,"The problem statement is explained well and one can understand the need for it in Expertiza. There are well formed headers distinguishing between each section. However, the contents haven't been filled yet and need further work on. Adding a section on items completed and tasks left would help the reviewer understand the flow better. The team has identified the sections they want to include and I believe the next submission will include it."
1,"The wiki page is pretty clear as to what the project aims to achieve. There are some things I would do after getting the first round of reviews: The word metrics is a little ambiguous from the first time reading according to the wiki. It would be a little more clearer if you could also add in specifics/details to that. I have looked at the screenshots which tell information for each commit like: commit message, committer, time of commit, additions, deletions, files changed. They are also showing total number of commits of each user and number of commits by day. Overall, I liked their description of write up as they have included the previous work link and the proposed design to improve it.


 


P.S.: The first line in introduction is missing the name of instructors for this project. Something that will not take more than a couple of minutes to edit."
1,"They do not have a test plan or any talk about implementation of tests. First i would recommend starting with ensuring everything works assuming all inputs are logical. Then i would ensure these metrics update in the Expertiza DB as commits are added, or whatever other metrics are being considered. These are just some ideas to start from, because testing in my opinion is truly the most important aspect."
1,"No test plan was mentioned in the wiki, It gives the impression that testing cases has not yet been considered, I would start adding test cases in the wiki and also mention what corner cases are to be considered."
0,Write up had the testing section blank. It was not part of the requirements document i suppose
0,The writeup did not contain any Test plan. Hence I was unable to review the different test cases.
0,There is a Testing section but it is yet to be implemented. This gives an impression that the users have not tested their implementation yet (even if they might have). Consider writing detailed test cases on how you would test the commits made and scenarios when the user uses a different git account but has still contributed towards the project.
1,"At the time of reviewing, I was able to see that the testing section was empty and hence I believe that they are yet to work on that. However, if this is something not mandatory, I could be totally wrong."
0,"There is no explanation of the actual implementation, only of the proposed plan, so I can't say they explained any of the work they did. I think they should work on adding these to the website as soon as they can, so we can get a idea of how things went."
1,"The images submitted should have been part of the Wiki, there is no mention of design patterns or principles, It would have been very useful if they had mentioned what files would be affected and what plan of action would be, the objective should have been disintegrated so that it could have been relatively easy to understand."
1,"Baisc steps were explained, but having a more detailed infromation on 'how' they did the work, different steps taken etc , would be encouraging to have."
1,"Although the writeup explains the problem statement, it does not explain their work extensively. The proposed design simply says they are using GraphQL Git API but doesn't explain that further. They haven't mentioned the use of any design patterns. However, the writeup does say that the Github statistics API used by the previous team doesn't produce the required results and that is the reason for using GraphQL API. I'm deducting points for not clearly explaining the proposed design or adding any screenshots."
0,"The authors have included images as part of their submission which gives a little idea about what they're trying to achieve. However, the images could have been included as part of the writeup on wiki giving brief descriptions and instructions on what was done and what a user needs to do to see it working. There is a proposed plan section that briefly describes their intended plan of action, however I feel it could have been more thorough with the use of images and examples. Also, plan on including the design principles/patterns you have used."
1,"The write up was certainly well structured and covered the basic sections (why they are doing it, what needs to be improved, how they plan to improve it). Not that this is something mandatory, but something I would like (as a person who is reviewing) is, I would also put up a side by side comparison of how their information would be different from the previous work. They have done their part of the job by adding link to previous work. I did try to skim through the link, however this is not your part, it was a long read and I had to figure out what was going on just by looking at the figures. Apart from this, good work on explaining your project."
0,There is no design principles or pattern information about the project mentioned anywhere. I could see the 2-3 lines of description about the rust language and servo in the documentation. Please add the flow of the project or any design followed for better understanding.
0,No test plan present in the writeup. Try to add the test plan implementation for the next submission in the writeup.
0,"Good rust practices followed. Functions are not too long, which is one of the important programming practice. The cognitive complexity of code is as per standards.


In ResourceChannelManager method, there is no comment given on the changes made, add comments to understand whether the modification is done is by your team or it's existing. The team has made few changes as per the documentation given, so most of the code is existing and as per standards. However the code added by the team doesn't affect the standards fixed."
0,No test cases added in the test plan and so there were no test automated in the code. I could see only existing code committed in the github repository shared.
0,"The application is not yet deployed, so i couldn't manually test the application. Try to deploy the application to review your work."
1,"(NOTE): I was unable to find the PR, these results are from their fork


 


Code is simply test cases."
1,"There is no writeup for the project present. SInce it is a mozzilla project, it is hard to determine whether they should have a wiki or a readme. From the readme given in the github repo, the overview of the project os understood but it needs to be more informative."
0,All the tests return with a success and can run rspec on it successfully.
0,"Yes they have converted all of their explained tests in the Test Plan into automated RSPEC tests. I can't test whether or not they fail, but I assume they do work due to the nature of them, though I believe they should explain on the website that they worked or not and show how they worked."
0,Yes. They have all the tests for all the cases. All of them passed.
0,"There is no formal test plan and so cannot verify this. However, this team has included a testing section in the wiki which explains the conditions being tested. Not as thorough as a testing plan but these tests are inclusive of most of the cases."
0,The writeup of the project had provided a test plan with a few test cases covering both expected cases and edge cases. I was able to find corresponding test cases written in the rspec file too.
1,The author does not have a Test Plan.
0,"https://github.com/arunkrishce/expertiza should be linked, that is were I got your code from. The methods named question_max_score is not being tested, your only testing average_score_for_row method. The variables will look better is renamed from score to entry1,2,3. Name of classes and methods explain well on their purpose."
0,"After looking through the code, I think they chose good variable and method names that are representative of the function and role they play. The build passed, but the codeclimate test checking device has issues that haven't passed, so i'm unsure why that is. I did mark that the build passed because the one labeled build passed, though this codeclimate issue should be looked into."
0,"Do you think the name of ""no_of_columns"" could be changed to ""no_of_nonempty_columns""?"
0,"Yes, the code written is short and concise and follows ruby conventions. The method name is descriptive of the function it performs and so are the variable name."
1,"The team has modified a model and added a new rspec model file. For these code changes, they have used proper naming conventions to name variables, methods and class names. They have ensured that the newly created variables and methods use the same style as the code that is already present in the model file. I felt that every named item in the code was self explanatory and the purpose of each variable/method was understood from the name. For eg, row_average_score was a variable used to store the average of all the entries in a row. Hence I am giving a 5."
0,"The author has successfully put in a Pull Request to expertiza.  Furthermore, the code successfully increases coverage.  The code itself is well written with variables and methods being named appropriately."
0,"There is no comments included, as well as its DRY. Use ""let"" to create the objects which can be reusable with before(:each) instead of defining scores every single time for each test. The code is easy to follow and is straight forward."
0,"Overall there isn't too much code to look at, but I think the format and place of the code was very logical. It was all in a model, where they altered aspect to exclude nil from the calculation. There really isn't too much that had to be added, so i don't think any needs to be extracted into a separate method. They did comment next to a line of code, which is not encouraged, since it can get confusing where to look for comments. Comments should be made before a method is defined on their own separate lines. Other than that, I think the model and testcases added are written in good Ruby style, is DRY, and overall structured in a logical and coherent fashion."
0,"The function is not long at all. And they are nicely written, easy to read and easy to understand."
0,"The function written is short and DRY. I cannot see a lot of repetition. However, i would like to suggest that in lines 


    ""row_average_score /= no_of_columns unless no_of_columns.zero?


    row_average_score.round(2)


these lines can be clubbed together using method chaining which makes the code more ruby like."
1,"By reviewing the code, I made the following observations:


1) None of the functions are too long; Neither the method added in vm_question_response_row.rb nor the methods in spec file are long, they are all around 8-15 lines each and good modular approach was followed.


2) I felt the code was already modular and hence no new method is needed.


3) Apart from a couple of comments in the model file, I couldn't find comments anywhere else, especially in the rspec file where they have made a lot of changes in their different commits including the hex codes.


4) Proper Ruby conventions were followed throughout, including double spacing, having the logic in the models and no code felt repetitive."
0,The code seems reasonable and well written.  The functions are of appropriate length and common code has been extracted successfully. One thing that would be helpful would be adding code comments to help the reader understand what is happening in the code.
0,"The features work as intended, there aren't any edge cases I can think of in this situation, since the only choices you have to answer a question or leave it empty."
0,"Unfortunately since we can't deploy our projects, i cant test the author's work."
0,This is only because we haven't figured out how to deploy it. And I could not test it manually.
1,"Yes, the intended features are functional. The repo has not been deployed and thus i cloned the repo on my local machine and ran it. The features are working correctly. I cannot think of any corner cases where this code will break."
0,"The project was not deployed on a platform such as Heroku or AWS and hence I was not able to test any of the newly added features. However, I am awarding two points because I was able to see a screencast demo of the project where the team was able to run the project in their local server showcasing the new functionalities."
0,I was unable to test the authors code due to being out of time.
0,"It explains that in calculating the score it ignores the empty fields, so the score does not calculate the empty fields as a zero in the final calculation of the score. It does explain well on how you have implemented it.


 


Could you rename the solution heading to something else or merge the 


Explanation


heading with the solution. It would be easier to read if all the information of the solution is in one location."
0,"I think the write-up very clearly and accurately describes the problem and issues to fix. I can easily understand the project is focused around the subject of fixing peer review scores, as fields that are left blank are included in the math to calculate average review score. I understand that their project and goal is to fix this issue, to enable a more accurate calculation of average peer review score. They also describe very coherently how the project fixes the issue. They explain in the '/app/models/vm_question_response_row.rb' model file, they alter code to exclude nil values from the calculation of peer review score, which are the values of those blank review score entries. Overall, i appreciate the thorough method in which they explain the project."
0,"The explanation of their work is precise and clear. Especially with the youtube video, it is really easy to understand. Good job, guys."
0,"The writeup is very descriptive. It clearly indicates the problem statement as well as the proposed solution. The screencast added is pretty descriptive and makes understanding this wiki really easy. The UI results after the change have been clearly indicated and are suggestive of the fact that the implementation was successful.


I would suggest to include a screenshot of the successful tests to strengthen the wiki. Also it would have been better to add the original code along with the newly submitted code to the wiki to make it more descriptive."
0,"The writeup was well written. It clearly explains the problem statement, the solution, the files added/changed and the test cases included. Some screenshots were also provided which helped me in understanding the problem statement properly. From the writeup, I could easily understand that the aim of the project was to ensure that empty fields should not be included while calculating metrics such as average score. Overall, it was written in simple, easy to understand manner and hence I am giving a 5."
0,"The author has done an adequate job with their write up.  I feel as though they could have added more information about what their project was about and what it did.  That being said, the attached video helped a lot with understanding the projects scope."
0,"It looks complete to me. You have tested when there is no empties, when there are some empties mixed in, as well as when all the fields were left empty. The only concern I have with the Test Plan section is you using nil and empty interchangeably. This could be confusing, it is best to stick with one, unless you are referring it has two different things then explain when nil occurs separably from empty."
0,"Due to the scope of their project, I can say the test plan looks complete. They tested essentially the three types of cases and then variations of them to thoroughly test their model. They test when scores are all non-nil, all nil, and a mixture of the two, which conceivably are the 3 separate blocks of cases. Then they further try tests where you have 0 in some, not in others, or nil mixed in, and it goes on from there. I think they covered all of the scenarios which pertain to their contribution."
1,"Yeah. I think the authors considered different scenarios for testing this method.


They covered all the cases (all null, all not null, and mix of both).


I don't think there are input values for this method.


Pre-conditions, if you mean @score_row instance variables, I think this should be tested in other places, not for this method."
0,"There is no formal test plan section included. However this team has taken testing into account and have mentioned a testing strategy in the wiki. The test cases seems exhaustive. But including a screenshot of the running tests or coverage report would have been better.


I tried to run the rspec file on my local machine but faced an error saying could not load the file. This may be because , i am using my local environment and the database config might differ. Were the tests running for you.? If not, given the fact that your functionality is functional, you should check the tests once."
0,"The writeup has a separate testing section which mentions the new rspec file that was added and gives an explanation to the test cases added in the file. The precondition is to be logged in but precondition test cases were not written. Automated test cases were written for valid, invalid inputs and edge cases and screenshot of the rspec file was also provided. Although Automated testing was done properly, I don't find any steps to perform manual testing and hence reducing 1 point."
0,"The wiki does not include a Test Plan.  It does include screenshots of the authors test cases which is helpful, but without explanation, it is hard to understand."
0,"It was explained underneath the solution heading of the method used but does not clearly state why they approached it by ""If a score is empty, it should not be counted while calculating average score. Only not null review scores are to be counted while dividing by the total number of reviews, for the average score calculation."
1,"They do explain how they did the work. In fact, they have a section well named 'Explanation' which talks about the implementation, and what they changed to enable correct functionality. Another note to point, it explains that the implementation directly corrects the problem they describe earlier on, meaning they talk about nil fields, and then they explain in the implementation how they fix this problem, which is good consistency. They don't explain why necessarily, but I think the explicit way they describe the problem and implementation implicitly answers the question. They did it this way because it leaves out those nil values recorded as an empty score field. They didnt use any design principles or patterns, but simply came up with a simple and quick fix to the issue."
0,"The algorithm they used to calculate the average peer-reviewed score is well explained.


I don't think any design patterns are used in this work."
0,"Yes, the wiki clearly indicates the proposed solution of the problem. No design patterns have been used. This is because the controller method that was modified to achieve functionality is relatively small and therefore does not warrant the use of a design pattern. Overall the method is well written following ruby conventions and the method name is descriptive of its functionality."
1,"The writeup explains the problem statement and then goes on to explain how the team went about solving it. It mentions the name of the file that was modified and test scenarios are also explained clearly. Screenshots of code snippet were added, which was very helpful in understanding the implementation of the project. The writeup talks about the issues faced by the current system and then explains why the team used number of columns to calculate average score.


I am reducing one point because the write up does not mention any design patterns."
1,"The write up does a adequate job explaining why the authors did what they did.  It mainly focuses on the code though, and less about the explanation.  I would suggest adding more of a written explanation to your wiki."
1,No Test plan was included in the documentation.
1,"I could see sample_submissions_controller_test.rb created for testing purposes, but it is not properly tested. Try to add more test plans. There was only test plan that scaffold approach created."
1,"There are tests added, and they are automated. They all pass for me currently, but there is no test plan to compare them against."
0,They haven't started working on this part.
1,"There were no tests added or any test plan documented for me to reference. As I said previously, definitely make this the next major priority."
1,"I dont even see a pull request i can match to this project. Looking through the names of the pull requests and even the names of the accounts that opened them, as well as the contributors to this project, i couldn't find a match. So I would recommend you immediately open a PR as that is a vital component and the expertiza team can't test your contribution until you have a PR open."
1,I could not find the pull request. Have you created one yet?
0,"All the new names for variables and methods are intuitive. Only one particular variable stood out to me, in db/schema.rb there is an addition t.integer ""simicheck"". and im not sure what simicheck means."
1,Pull request is not attached to the assignment submission.
1,"Could not find a pull request for the given project name or by the contributors name. If pull request is made the heading or title of the request is not clear enough to figure out which one to refer.


So could not find the code that is changed. They have not stated the code file that are changed not the code snippets have been provided to check the code."
1,"I would recommend at the beginning of the new controller perhaps writing a few comment lines to explain what the new file will do, if it is to be integrated into the existing Expertiza system. It does look like in app/views/student_task/list.html.erb, they tried to get the correct tab spacing, which is good because it certainly makes code easier to follow if it follows the same format. Ultimately it looks fairly well defined and it even shows more to as they implemented things I didn't see on the website, and so I would urge them to include these implementations and describe their thoug"
1,"It took me a while to find what are the code the author wrote for this project so far. I needed to go through all their commits.


In the SampleSubmissionsController, line 8, there is puts statement. Is this just for debugging? What is purpose of putting this statement there? I am confused."
1,"There does not seem to be any of the 5 issues listed above. There are a few lines in the views that are approaching the too lengthy side of things, but nothing that is bad as of yet. Perhaps these could be written on two separate lines to simplify reviewing the code. Very good job on this."
1,Due to unavailability of code or changes made to the files cannot comment on the code altered.
1,"No pull request attached to the submission, so i need to check the github link attached. It was difficult finding code changed by the author. Please attach pull request for the next submission. 


I could see a change in app/assets/javascripts/submissions.js, the function is not too lengthy, have followed proper coding practices.


Sample_submissions_controller.rb is the controller file created by the team. Good ruby on rails practice followed. No comments given, please add comments to understand the code more."
1,"The link provided for the deployed app does not work.(It goes to heroku homepage)


When I test the app on my local environment by the repo provided, I see the link for sample submission when I ligin as a student. Bt if the link is clicked it shows an error message: ""A student is not allowed to index this/these sample_submissions""


The use of the link is not stated in the documentation or what it should route to. Functionality is unclear."
1,"The author has given the heroku link, but there was no application deployed. I couldn't manually test your application."
1,The writeup shows there are still several tasks to be completed before the functionality can be fully tested. This is reflected in the current version of the code on github.
1,"As of now, with the deployment problems, I am unable to test the author's work sadly."
1,"The writeup explains pretty well the tasks that the team set out to accomplish. It lists them in a coherent section labelled ""Tasks to be Completed"" as well as indicating in the ""Problem Statement"" the issues they were bade to solve. However, I can't quite understand what their development does, as there is only one small section and a picture indicating they added a ""Sample Submissions"" link in the view. It does say that it is to allow a student to view sample submissions of reviews, but i'm not sure i understand how. I think they need to indicate a bit more coherently and explicitly what each specific development does and perhaps several diagram to help in explaining why it does that specific development. Though, they did a great job in explaining the tasks to be done."
1,"The writeup was not so clearly for me to understand what this team's work is about. I had to go to our assignment file to find out.


I think you guys should include most of the write up for the project in the assignment file in your ""problem statement"" section. And maybe also add another section saying what needed to be done, and what is the purpose/objective for this project (currently this is part of your ""problem statement"").


I personally think your current ""problem statement"" and ""tasks to be completed"" are the same thing."
1,The problem statement sheds some light into what the functionality is related to/what it does. But the write up is rather lacking currently.
1,The problem statement is very well explained. Crisp introduction about how Expertiza works. The tasks to be implemented are explained well and it provides the reviewer to understand the project easily. Good work team. But try to give more introduction on the project and technologies used as it is wikipage.
1,"Write up only states the problem statement and the task that are to be done. 


Section: ""Development so far"" only contains the screenshot of the link added but does not include what changes are made or why they are made in the code.


Sections for Tests, Proposed Design, References have been left empty.


Functionality implemented can be explained in more detail for better understanding."
1,The only portions the write up currently covers are the introduction and the problem statement. There is nothing covering this information currently.
1,No Test plan is included in the documentation. No tests that may have been performed are mentioned. So unable to comment.
1,No test plan section introduced by the author. I could see only the test plan section in the writeup. Please add the test plans for the sample submissions controller you are testing.
1,"There is no test plan or testing section included on the wiki page. I'm not sure if they considered how they would test different cases, but I would certainly start to consider the possibilities as if the contribution isn't tested well enough, it may break other areas of the project and they won't integrate your contributions. Simply put, you can start by testing the basic functionality works assuming everything is correct. Then you could move to other cases, like what happens if it tries to pull a submitted review that has been deleted by either the user or an instructor? I would certainly urge them to think about testing and their testing plan, because in my opinion testing is just about more important than the new contribution, because if it breaks old code, then the project didn't accomplish anything to be worked around."
1,Testing is not included in the writeup. I don't think they included any rspec testing in the code yet.
1,"There is no mention of how or why they made their development. It simply states that they added a link to the ""Sample Submission"" view and that they added the relevant controllers and views. I think they should spend more time considering they were pitching this to their boss, or others who hold stake in their work and work harder to describe their contribution in a way anyone could understand. Also, i'm not sure if the first or second 'task to be completed' are complete, because there is only the third task referenced on the page. So in summary, I would say try to explain your contribution with plenty of pictures as if you were explaining the project to any random person. Trying to clearly describe what you did, how you did it, and how this improved the expertiza project. Clearly mark these sections in a logical flow of information, as well as describe the other two tasks that have yet to be included."
1,"They listed what needs to be done, but how they approach this is not really clear to me.


Maybe they could include the file they edited and the code they wrote to make things clearer.


And I am also confused by the second task they needs to do: 2. Add column grant_permission[----] to table [--------------------------] for storing user permission (published or not) for each project.


Isn't this already included in our current production version? There is a column for ""Publishing Rights"". Am I missing something here?"
1,"The development part shows the link added to the student_task/view. There is a Header for Design pattern but no explanation has been given. As you have stated that Add controller, add view etc in the tasks to be completed, you could have explained about the design pattern used in your project."
1,The explanation for the changes are not provided. Only the screenshot of the link added for sample submission is shown. They could have included code snippets of the changes made to implement the functionality.The problem statement did not require implementation of any design pattern.
0,No test plan for this group
0,The authors have't added any automatic tests in their test plan. I saw their repo and there aren't any automated tests associated with the project. Cannot run any automatic tests due to this.
1,Test plan is not provided in the writeup. Try to add the test plans in the next submission which could enhance the quality of the delivery. Try to find the controller spec associated to the tree_display_controller.rb and make the necessary updates.
0,"There are no test cases written in the newly added code. The authors must add rest cases corresponding to the new features that the add the project. Also, they have not mentioned details of the test plan in the documentation."
0,There are no automated tests as the authors have not mentioned any test plan in their wiki.
0,No Tests added.
0,1. selected in app/views/menu_items/_suckerfish.html.erb is not a suggestive name.
0,The nomenclature used by the authors is self-suggestive and hence easy to understand the overall behavior of individual methods.
0,"Although the code seems to follow proper naming conventions and indentation, there is no clear explanation of what the code does, in the form of comments. The users can add more comments in the code to make it more understandable. Also the build did not pass for the pull request. So the users need to recheck the code syntax again."
1,"I couldn't find the pull request link submitted, please add the link in the next submission so that it is helpful to review your project."
0,The code is not well commented which makes it hard to follow the code. Style of code can be improved and problem solving approach is lacking. Every changes has been implemented on the view. The author needs to implements some helper functions.
0,suckerfish.html seems like an interesting name but this was not created by this group.
0,The code doesn't have any comment besides the codes.
0,Easy to understand and follows good coding practices.
0,"The code is well structured throughout. Proper naming conventions are used for classes, variables and methods. Comments are added before each and every method that increases the understanding of the code. Code for menu items are explained well. Impressive coding practices. The ""display_item_condition"" in _suckerfish.html.erb seems to be a complex statement, which could have been written with less complexity (though your code work :) )."
0,"For the code implemented till now, the functions seem to be of appropriate length. But since the work is still incomplete, the function sizes may increase in the future. The code follows ruby style guidelines properly."
0,Code follows good coding practices. The functions are not too long but not described well. There are hard coded values also present in the section. Helpers needs to be implemented with the code.
0,I thought you code was pretty easy to read but a few more comments may make it involve less using context clues to figure stuff out.
0,"They haven't deployed it to public space yet, so I can't test it."
1,Cannot check the author's work as no link has been provided for testing. I tried to run the app on my local machine but there are some errors related to database which i'm experiencing.
0,Couldn't test the application as it is not deployed yet
0,The authors have not provided any link to their deployed project. They must deploy it in a publicly accessible server and provide the link in the submission. So it is not possible to test the features of the code that they have implemented.
0,The features work as intended but the features fail during edge cases. The authors have not considered the edge cases.
0,for the requested task everything works fine.
0,This team has described what's the problem and how they solved them clearly
0,"The explanation on the team's wiki page is adequate to get a person to be familiarized with the the project. Yes, i can understand what the project does."
0,"Neat and clear explanation of the problem statement with separate section for the background information about expertiza is given. Added necessary screenshot of the code modified that helps the reviewer to understand the changes made. Code blocks are well highlighted in the wiki page, thumbs up to that. Good work team."
1,"The authors have clearly mentioned the requirements of the proposed project. They mention about adding a new view for instructors to see what a student sees. The only thing that I find missing is that, every student view can be different. So how does the instructor see the a 'generic' student view? How is this different from impersonation? The authors should be more clear on this part."
0,The writeup is very well documented. The wiki explains very well the functionality of the code and what the project does. The wiki has not mentioned the test cases and how they would like to test their code. There is not future scope present in the wiki.
1,"Very clear what the project does. One thing that made it harder to read was the larger snips of code like tree_display_controller. I don't think it is necessary to show all the code you wrote but more important to tell where you changed code, a summary of what you changed about it, and why you changed it the way you did."
0,They didn't include test plan. Only manual test is introduced.
1,"The writeup includes a testing section which states the steps for checking the expected output. I'm not sure if this is the testplan section. The authors haven't listed any preconditions,edge-cases or invalid inputs."
0,"No test plan or testing done for the project. Though there seems to be a change made at the view level for the files routes.rb, _navigation.html.erb, _suckerfish.html.erb i could see a controller file tree_display_controller.rb change. You can try writing testplan for this to enhance the quality of the delivery."
0,The test plan does seem to be complete. There are some screenshots provided about navigation in the application. But that does not clearly tell about the tests that have been performed in this case. There are no conditions or cases mentioned in the test plan. This needs to be added.
0,The test plan section is missing. The authors need to work on testing their code.
0,Not many edge cases here. Maybe what happens if logged in as an admin or super_admin?
1,"The writeup didn't talk too much about why they do the work that way, instead, it's just some description on how they implemented. For this project, design pattern might not be necessary."
0,"Yes i can get an idea of what the authors are doing from the documentation that they have presented. The team has followed good design practice. For example in the ""tree_display_controller.rb"", the items which are to be viewed by the user have been allowed to be viewed by segregating it into two different methods. This has simplified understanding of the design flow."
0,"Writeup is missing this information. As expertiza is based on rails, you could have explained about the MVC architecture followed. If possible you can give a flow from routes to view to controller."
0,The write-up explains various changes in the view and controller code. But it could be better if they five a high level introduction first. A high level introduction can be something in the form of user stories/ short requirements. For example: 1. Adding a link to this view. 2. Adding code for navigation 3. Adding code for control logic. and then describing code changes for these.
0,"The write has a background section which explains the need to do this work. However, it can be more informative describing the edge cases and all would be preferred."
0,Did a good job showing what was changed and a reason for those changes.
0,Testing appears complete
0,Clearly states what the project does and how it does it.
1,Very thorough explanations as to what problems are solved and how they are solved. I have a very solid understand of what the project is designed for and how it operates.
1,Good explanation of how the use of AJAX and JSGrid provided the desired functionality. Could add some detail as to how the code was implemented to solve the problem.
1,"Testing is very thorough in some places, but as acknowledged in the documentation, additional testing is required."
0,"No suggestions here, everything looks good."
1,"I don't see any major issues with the code, and comments are used effectively in certain areas. However, some areas lack comments, making the code somewhat unclear to somebody not as close to the project."
0,based on the document and my understanding the code seems correct
0,"NO information about testing was clearly understood, because of my limited knowledge about rust. 


I could see code similar to test in resource_thread.rs . but couldn't understand"
0,A few lines were modified and they appear to be small and clear
0,"It was difficult to get to the pull request. Having its name would help in easily identifying it  . I could see commits in the forked branch but , i couldnt get the corrospond pull request , so couldnt comment. 


Based on local forked branch commit information : names look intutive"
0,"I couldnt find a clear section with test plan written . There was no indication in the document about testing being done . Being a Mozilla project , I am not sure if i should be expecting it"
0,"The team clearly wrote what was done by them. But being an outsider to the project. It was difficult to follow and understand the document. example


Step 3: Added the path to include ""Rust-Har"" Library in net-traits/Cargo.toml  .. more clarity about this step would be helpful , like what is Rust Hat was not clear when i read it and cargo.toml


 


A little more information of  giving background would make the document really good"
0,"The team was clear in explaining what the project was about and what they were trying to do . It was explained under  


Project Description section"
0,The writeup was very clear and adequately describes the project they were responsible for. The writeup had detailed steps of what the team did. I was able to understand what the goal of the project was and how the project does what it does.
0,"The writeup clearly explains how and why the authors did the work the way they did. clearly However, they had a numerous generic steps that are required before contributing ti any open source project. For example, one of the steps was: ""Understanding the Servo Implementation."" This is required for anyone contributing to Servo. As a result, it is unnecessary in the writeup and takes the readers attention away from the details of the contribution."
0,"The writeup had no test plan. However, the team will have to wite a unit test if they choose to proceed to the ""Subsequent Steps."""
0,I could not find the pull request in list available on servo's repo.
0,"The code pushed to the repo seems to be just right. The team uses comments where ever necessary. None of the functions seem too long. And, most of the code added doesn't need to be split up into functions. There seems to be opportunities to make the code more DRY, but, as someone who has contributed to Servo myself, making the code DRY may not be the best course of action in certain situations."
0,No tests were required for the initial steps of this project.
0,"The entire code seemed to have built, and all the features work as intended. As for the edge cases, there don't seem to be any that are causing trouble."
1,No Test Plan at the moment in their documentation.
0,"Since there is no pull request and no way to know what exactly you put in your Servo project, I checked your commits and based my review on those for this review.  Based on those, it looks like your variables, methods, and class name conventions look fine.  Hard to say personally as I am not fluent in Rust.  Good job though!"
0,I would recommend making detailed comments for your Rust code so that a reviewer reviewing your project that doesn't understand Rust has a general idea as to what something is doing.  Either that or mention it in your documentation.
0,"As of right now, no test plan."
0,Can't manually test your work because I don't know how to.  I would recommend deploying your work on Heroku if applicable or perform a screencast to showcase what your project is suppose to do.
1,"The project document describes the basic components of the project but does not describe how they are integrated. The first line says ""The Project is to Implement support for creating HTTP archive files from Servo sessions."" - this line is not clear at all. The authors must explain more.


Also, the authors have provided the documentation in a file. They need to add the documentation to Expertiza wiki."
0,"The authors mention the steps completed so far and explain their approach to the project. But again, they need to expain in high level what the steps do. For example step 3 says ""Added the path to include ""Rust-Har"" Library in net-traits/Cargo.toml"", but it is not clear why is step is taken."
1,The authors have not added any test plan to their project yet. They must include detailed test plan and test cases to complete the project.
1,The authors have not added any pull request. But there are some screenshots of their code in the documentation. The code samples provided in the documentation seem to properly written. But the complete code is still not accessible.
1,The complete code is not accessible for review. There are no pull requests made by the team. The only code that is visible are the two snippets in the document provided. The snippets seem to be properly written. But it is not possible to review their entire code at this moment.
1,The authors have not provided any test plans or test cases. They need to add test plan and test cases to make the application complete.
1,The authors have not deployed their project into any publicly accessible server. So is not possible to review their work. If they cannot deploy their application then they must provide a screencast of the work they have done. They have not provided any such link at this point.
0,"The author has done a good job explaining what the project is, and what exactly it does.  The step by step approach used by the author was really helpful considering this is a Mozilla project and not something I am familiar with.  Good job."
0,"The write up, while it explains what the authors project does, it doesn't really explain why the author did what he/she did.  To be fair, the steps are well written in the project description and describe in detail what the author was doing.  For this reason, it seems what the author has written is appropriate.   Considering I don't really understand RUST or Mozilla, it is hard for me to decide if design patters are implemented appropriately.  That being said, the code presented in the write up seems appropriate and well written to the extent that I can understand it."
0,"The write up does not include a test plan section.  I would suggest adding one as you finish up your project.  It seems that in your current stage, you are still working on implementation, so I can understand why you might not have created a test plan yet.  That being said, it is an important part of projects like this.  Here is a great website that might help you understand what a Test Plan is used for, why it is important, and how to implement one.  https://www.guru99.com/what-everybody-ought-to-know-about-test-planing.html Hope this helps!"
0,It does not seem as though the author has of yet put in a pull request to the base branch of the project.  I would highly suggest doing this soon as it allows other developers to look over your code and point out potential shortcomings before you get too far along.
0,"The code itself looks solid to the extent that I can understand it.  Once again, this is a Mozilla project and is written in a language that I have never deal with before, so syntax is definitely something I cannot judge you on.  That being said, given my strong understanding of programming languages in general, it seems you have done a good job writing concise code.  Given my limited knowledge of rust and the Mozilla project, I cannot really say whether or not some of the code should be extracted or not.  From what I can tell, it is well written and as concise as possible, but it is hard for me to judge this.   As far as I can tell, good job!  Sorry I could not be more help in this section."
0,The author does not have a test plan as of yet.
0,"I am unable as of now to get the mozilla project up and running on my machine.  This is not a shortcoming of the authors work, but just a matter of mozilla running on my computer.  There for, I cannot really judge whether the feature works as intended or not."
1,"The wiki is properly documented. The problems are explained in detail along with the proposed solution. The unimplemented functionality is mentioned which is neat and helps the reviewer in accessing. The result are depicted in the form of screenshots displaying the implemented functionality. This part is done well. However, i think the wiki could have been enhanced if some code snippets were including showing the previous code with faulty migrations and the corrected one. This would enhance the overall understanding.


The proposed model with karma points is impressive."
1,"Yes, the writeup clearly mentioned the approach followed by the authors. I believe code snippets should be included to display the changes made. There are three problem statement included in the wiki. However, it seems only one of them has been implemented. I believe this did not warrant any change in the controller methods , only migrations. 


But i believe when the proposed model for karma points would be included, it is best to use design pattern to make the code concise. Example - Factory pattern can be used to get rid of large switch cases."
0,"No test plan was included. No form of testing have been performed by the team. As some of the functionality mentioned in the problem statement is incomplete, i would suggest writing thorough tests beforehand and writing the functions till the tests passed. Once the said functionality is included, the code can be refactored to make it DRY.


 


These test cases will formulate your test plan and thus increase the coverage."
1,"The newly added code only includes changed migrations which corrects the error and changes Bookmark Ratings to BookmarkRating and thus there are no added variables.


Therefore i would say all the variable names are spot on and depicts intent."
1,"No controller code has been altered by this team and hence i would not be able to accurately review this. The changes made only includes a migration which is done in a standard manner. However, there is an empty migration UpdatingBookmarksRatingQuestionaire which kind of adds redundancies. 


i would suggest to rollback this migartion."
1,There is no test plan mentioned nor any tests added. i would suggest to look into this and add tests when implementing the remaining functionalities.
0,"Since , the repo has not been deployed , i cloned the repo and ran it on my local machine. The functionality of problem statement 1 has been correctly implemented. It works as intended. All the links for adding public and private items in the add bookmarks sections are functioning correctly. 


Problem statement 2 and problem statement 3 have not been implemented so unable to test it."
1,"The write-up is well documented and the issues are elaborately explained. The problem statement is clear enough to understand. They have clearly stated what is achieved and also proposed solutions to the unresolved issues.


Suggestion:Write up could include code snippets of the chnges that are made making it easy for the reviewer to follow the changes."
1,"The changes made in the code are mentioned clearly with UI screenshots indicating the changes, making it easy to understand as to why they are made.


According to the problem statement no design pattern were required to be implemented.


Out of the 3 issues given in the problem statement only 1 is achieved."
0,No Test Plan section was found in the write-ups.
1,"The only changes that are made are changing the variable name from ""Bookmark Rating"" to ""BookmarkRating"" so cannot comment on variable names bring reasonable or not.


Test coverage in the pull request decreased by 0.01%"
0,"Changes that are made in the code by the author are in migration file. Variable name is corrected to BookmarkRating which was previously ""Bookmark Rating"".


There is an empty migration created.


Cannot comment on the functions as they are not altered."
0,Did not find any Test plan in the documentation.
0,"The issue that was stated to be solved, works when manually test on local environment. But there are a few issues that are yet to be fixed so was not able to test them."
1,"Very clearly defined what the issue is, what the problems are, and how they could be fixed"
0,They explained each problem and what they needed to do in order to fix them.
0,The test plan is only from the UI perspective and doesn't describe any RSpec testing.
1,The main changes were fixing the misspelling of Bookmark Ratings.
1,"Instead of creating a new migration, they edited a migration from 2012 which means it won't be updated on the expertiza server.  The rest of the changes were just fixing a misspelling of Bookmark Ratings."
0,They didn't add any test cases.
1,The bookmark ratings link works and the rest of the logic was in the already created questionnaire.
1,"Yes, i can understand the project and the issues related to it due to correct and concise description on the wiki page. A lot of info has been provided with examples for understanding. But, the changes which are are not explained and code isn't provided for the same."
0,"The authors haven't listed any work which they have done in terms of coding in the write-up. They have listed the files which were modified, but no more."
0,No plan has been provided. Hence unable to comment on the tests.One case should be added to restrict the min score to be greater than the max score.
0,"I couldn't find the project name on github easily, had to search for it due to different name.I can see the the changed code on github. But the authors have not provided explanation everywhere for the changes."
0,The authors have't written an automated test. Atleast it's not mentioned under the files changed part.
1,"I can only see the link of sample suggestion when logged in as student and on clicking the link, it displays an error message stating ""a student is not allowed to index this/these sample_suggestion""."
1,"Pros:


- Screenshots help clearly understand the problem statement


- Use case diagram is really good and helpful to understand the proposed design


- References mentioned


- Future enhancements have been mentioned


 


Cons:


- No screencast to better understand the project"
1,"Pros:


- Files modified listed


- Use case diagram given


 


Cons:


- Design pattern not mentioned


- Solution could have been explained in detail


- Code snippets missing"
0,The writeup only includes UI testing. Other test cases are missing. No test plan is given.
0,"Cons:


- Pull request link was not submitted or mentioned in the document


- There are 12 code climate issues


- Test coverage has decreased"
1,The code contributed does not have any of the mentioned problems.
0,No automated tests are given. Only UI testing is mentioned.
1,"Upon manually testing, the issues are fixed as explained. Testing through UI was easy as the steps have been clearly mentioned in the document."
1,"The writeup was well written. It clearly explains the problem statement, the subproblems, the proposed enhancements to each subproblem, the files added/changed and how to proceed with UI testing. Some screenshots were also provided which helped me in understanding the problem statement properly. From the writeup, I could easily understand what the team was trying to achieve. Overall, it was written in simple, easy to understand manner and hence I am giving a 5."
1,"The writeup explains the current project and the issues related to it and then goes on to explain how the team went about solving each of those issues. I like the way they had written about the proposed solution for each problem separately and I liked their idea of issuing 'karma points'. 


I am reducing one point because the write up does not mention any design patterns."
1,"Although the writeup does include a Testing section, it is for manual UI testing and does not have any automated rspec test cases. They had clearly mentioned the steps for performing UI testing, however I am reducing points because I was unable to check for edge cases and invalid inputs and others."
1,"For all the code changes, the team have used proper naming conventions to name variables, methods and class names. They have ensured that the newly created variables and methods use the same style as the code that is already present in the model file. I felt that every named item in the code was self explanatory and the purpose of each variable/method was understood from the name. Hence I am giving a 5."
1,"By reviewing the code, I made the following observations:


1) None of the functions are too long; they are all around 10-15 lines each and good modular approach was followed."
1,"No automated test cases were mentioned in the write up and also no corresponding rspec files were found. However, the team did provide instructions to perform UI testing."
1,Manual Testing was not possible because the app was not deployed on a platform such as Heroku or AWS. There was also no screencast demo so I had no way of testing if the new features worked correctly.
0,"There is no pull request present. Since code is hard to understand, the authors need to work on commenting the code and changing the wiki."
1,"I found some methods to be long, but that does seem okay as we are dealing with test cases. 


Some variable names do seem to be a bit invalid: participant55555"
0,The pull request hasn't been submitted so I was not able to review it.
0,Rspec code was added for this purpose and the names / formats were clear
0,The team needs to request a pull from so it is easier to review.
1,"The features work as intended, however, there is no mention of different test cases that are required to be checked. The wiki needs a little more work"
0,"The work they have done is completely related to testing, so there was no check needed for features, but in case of testing they seem to have done a good job"
0,The code seems to work just fine. All the requirements seem to have been covered.
0,Rspec was run on the code and tested . All the cases seem to be passing
0,The code seems to work fine and test cases seem to be passing
0,The writeup is not well documented. What functionality of the code is tested and how they have implemented is also missing. It is very hard to understand the work by just reading the readme. Some background info rneeds to be present in the wiki.
0,"yes, it can be clearly seen what the plan of action is and what they intend to do in the project, the one thing i would add here is a brief about what the test case would be doing or some minor piece of information indicating what work would be done and what checks would be taken care of and some additional images."
0,The writeup describes clearly what functionality the work is related to but it is not descriptive enough when it comes to describing what all change the team has done and how they have done it. Adding screenshots and elaborating on the code that was incorporated would be helpful.
0,The write up was clear in explaining what was the task at hand and what was to be done . It clearly wrote in the motivation section on what is expected from collusion_cycle.rb  testing
0,The write up is not descriptive enough in describing what the team has done in the project however it describes the functionality and the work
0,There is no mention of a test plan in the wiki. From the code it ishard to identify what they are trying to test and how. Even the code is not commented.
1,"The writeup does not have an explicit Test Plan section. The work you did looks promising but you could have included all the cases that you considered in the writeup. Again, I understand there is a not a lot to describe, but it is difficult for a reviewer when not all aspects are described in a proper manner."
0,A little bit more explanation on what was Two Node Cycle or three node cycle does would help the reviewer understand in more detail on what test is being accomplished through this task
0,The writeup lacks the Test plan section. The work has been implemented but it could have been made better by assuming all the boundary conditions.
0,The Wiki doesn't introduce the exact functionality of the on_the_fly_calc model.
0,The Wiki only doesn't explain how and why the authors did the work. More is about the schedule and how to test.
0,"Not enough. The test plan should have the detailed process of testing including the why and how you set the condition, and something like that."
0,It doesn't provide the link of pull request.
0,"I can see there are some repeated lines, particularly the 'let' instruction. I think many of the test can share the same data, so it is better to combine them at the beginning."
0,The code failed when I test it on my VitualBox.
1,"They got Plan of Work instead of Test Plan which I think is almost the same thing. In this section, they concisely present their plan and it turns to be reasonable and easy to understand. But it just briefly talked about the main steps they've taken and it's too short to cover different-conditions, edge cases, etc."
0,"The writeup is extremely extensive, covering every detail of background information, the project, the development plan, and even details on each unit test."
0,"The team has explained the testing part properly.They have mentioned why they have created a specific number of tests-(Here 16) to test the functions in the model file. Each test is properly explained.They have mentioned ""using factories""  in the Test Entries creation section and I'm not sure if they are referring to the Factory command pattern."
0,The project is based on Testing and the team looks to have covered many test cases. You can include a section explicitly called Test plan just so that reviewers can put a tick mark on that criteria
0,"I can see that the author has added tests, but since the pull request into the Expertiza project was not made I cannot tell if they pass or not. These tests are all thorough and follow the test plan well."
0,"All the test cases seem to have been covered which was mentioned in the test plan,itsgood that invalid, valid and null test cases in  have been taken into consideration."
1,Yes. They follow the steps and convert everything to code.
0,The team has converted all the tests covered in the test plan into automated tests. They have rigorously tested every aspect that they were planning to test.
0,"No, for the seventh part in their Test Plan--the test for function items_for_permissions, they only test the first situation. But they miss nearly all the situation they mentioned in 7.2."
0,The web address of pull request is not provided.
0,"First off the code does follow the test plan described, which means that it is very likely a thorough and complete test plan.


The strings following the 'it' statements should read like a sentence, and some of yours do not (ex. it ""Find or Create by Name""). Also the 'it' statements in the spec file could be organized better with a 'context' statement to help group the statements together."
0,"The code mostly deals with testing the code, thus there seems to be very few or no variables being involved"
0,"Since it is a unit test for a given model, there is much space to rename methods and classes."
0,I couldn't find their pull request so it hard to know if the test coverage has increased or not. The naming convention is easy to follow and is per the functionalities. As there is no pull request I can comment any further.
0,"(NOTE): I was unable to find the PR, these results are from their fork


 


Names are intuitive & test descriptions are clear."
1,The variables are all necessary.
0,"The normal level of unit test I think is describe > context > it. Describe is for the class, context is for each method and it is for each condition. And I think the code lacks the context level without schedule the tests into each method. It makes me uncomfortable when learning the code."
0,"All testing functions (or in this case 'it' statements) are an appropriate length.


Even though spec files are supposed to be self-documenting you still need to add comments to aid the understanding of the reader. Again with the organization of the test file, I would recommend using the 'context' statement to help with grouping."
0,"There are no comments which makes it extremely difficult to follow what each piece of test case is exactly testing, other than that everything seems to be working fine"
0,"The code follows good ruby and rails practices and is easy to follow. However, I think adding comments would have made the functionalities easier to understand."
0,I could not find code contributed through a pull request. However I looked at the Github link provided in the description and that seems to follow most standard Ruby styling guides. No function is longer than necessary. There are a few redundant spaces and empty lines that could be avoided like on line 59 of the menu_tem_spec.rb file. Also I would suggest adding more comments to make the code and tests more readable.
0,"(NOTE): I was unable to find the PR, these results are from their fork


 


Code is simple, clear, and easy to read."
0,"1. no comments


2. Under ""describe MenuItem do"", they use many tests to test all the situation separately without classifying these tests based on different functions. They should use different contexts to divide the whole tests into 7 parts as they discussed in the Test Plan."
0,Since the code is the test file it does appear that the test classes pass on my local machine. I cloned the repository and all the tests passed.
0,There was no screen cast added so there was no way to verify the features
0,Yes. They have completed the test and the coverage increases.
0,The code works fine and all the features are properly implemented. The features do work for all the edge cases. Everything is well implemented.
0,"(NOTE): I was unable to find the PR, these results are from their fork


 


The tests appear to  pass with 100% coverage, as listed."
1,"Yes, the Wiki introduces the functionality of the work related to."
0,You do a great job giving background about Expertiza and the usefulness of Unit Testing and behavior driven development. I wish you would have added a thorough description of the purpose of the model that you are testing in the background section rather than in implementation. I still think this merits a five because I did have a good understanding of your portion of the project after reading the wiki.
0,"Amazing job in representing what the intention of project is and what they want to achieve and how to intend to achieve.


There does seem to be a lot of boiler plate data which can be avoided something like information about BDD and Unit test could be avoided."
0,Perfectly well-organized with lots of details.
0,"The writeup is very descriptive and clearly defines what the goal of the project is. The team has very painstakingly defined every aspect of the project. Everything is explained with the help of a screen shot, which is very appealing and easy to understand. However, I feel the initial part is a bit redundant and is not at all necessary."
0,"The writeup for this project is well written and has a lot of information that lets the reviewer know what the team is trying to accomplish. They have well formed sections that gives a nice flow to the task at hand. I did not have to go to the project description file to understand what the project was about. You could also consider showing test cases that failed earlier and that were fixed now as part of the wiki. That would give an idea as to how thorough you were in your implementation. Also, avoid using excessive descriptions about things other than the project description and instead consider providing a link to the user in case he want to read more (For eg: BDD). Overall, well done."
0,"Project write-up has clear background, plan, implementation, and review material."
0,i think they make a pretty good wiki page. They explain their task purpose and test plan well. They introduce the 7 functions in the model and their corresponding test plan in details.
0,"Yes, it does."
0,"The wiki does explain how it tested all possible scenarios in the Testing Conditions section. Based on reviewing the code I found that all conditions were covered. The test plan for this does appear complete, and if the implementation follows this test plan it will test all conditions."
0,"The project is about testing the project, and thus it naturally includes test plan. in each test case there is mention of valid and null cases which makes it clear that they have made a good check of corner cases"
0,Yes. The plan is easy to follow. They did not include any specific pre-conditions in the plan but they did in their steps. That is a nice arrangement.
0,The test plan seems to cover almost all the edge cases which is nice. The team has very scrupulously tested the model which is commendable.
0,"The test plan looks to be complete, considering this is a test case development project. Based on the wiki, the team has identified most of the test cases they need to deal with for each module that they are working on. The wiki says they have completed 13 test cases. This seems to be handled well by glancing at the writeup."
0,"The tests listed test an extensive amount of edge cases and invalid values, and are extremely thorough. This can also be seen in their 100% line coverage achieved."
0,"I think it's clear but not that detailed. The Wiki introduces all the things including the functionality of the menu item model, the meanings of each testing condition and other background messages. But I think you use too much space on the background. What I am really interested with are the the functionality of the menu item model, the meanings of each testing condition (these 2 are implemented but need to be more detailed) and the process of each test (like why I want to set this kind of input and output)."
0,"The writeup is quiet clear. The objective has been clearly stated and the goals of the teams have been mentioned. I like that the part that the team was unable to finish has been stated. The wiki also states what the team plans to do before the next submission which is neat. The appropriate code snippets have been added to show the change. However, I feel the explanation provided for each of the changes is a little short. You could try to explain it in some detail along with mentioning the functionality of each part with comments which would make the wiki absolutely easy to follow."
1,"Yes, for the most part, the implementation is intuitive as it just attempts to solve the problem statement so there is no problem in understanding or following the implementation. The team has written the tests quite well describing most of the cases, though missed a few. In this case, I don't think there was a need to use any design pattern as most of the changes are in the views and the controller methods are quite small too. However , I feel the implementation of the first issue 'Change create topic UI to AJAX' was not described in detail. The code snippet for this change in the code have not been added. I think a detailed explanation about the changes made and why they were needed to be made along with some code snippets would have made it easier to follow for someone not having enough background on AJAX."
1,"There is no formal test plan. But this team has done a lot of testing.  Most of the different cases have been thought about by this team, but it misses some of them. Some of the missed scenarios to be tested before the next submission are :


1) If you login as student, you can't add/delete topics in the table


2)Ensure students cant see which students are on other topics


I suggest to use the coverage report generated by SimpleCov to see which part of the code has been missed and write tests accordingly."
0,"The newly added code has reasonable method and method names. There are changes made in three types of files. Controllers , specs and views. The controller method names are apt as they each describe a particular action being performed following ruby conventions. The instance variables defined are also very intuitive as suggestive of their functionality. In the controller methods, there are two variables suggestions and suggestionscomment. Most likely suggestion comment refers to the suggestion associated with a comment. However , I think maybe this variable should be renamed as comments_for_suggestion just to avoid any ambiguity. Also including   underscores in variable names is more ruby like."
1,"The code is well written by this team. The ruby conventions have been followed. The code is reasonable DRY, however I have suggestion which can contribute towards making the code DRY


@suggestioncomment = SuggestionComment.new(vote: params[:suggestion_comment][:vote], comments: params[:suggestion_comment][:comments])


    @suggestioncomment.suggestion_id = params[:id]


    @suggestioncomment.commenter = session[:user].name 


 These lines have been repeated in three methods , add_comment, approve_suggestion and reject suggestion. This part can be extracted in a separate method and called each time to avoid repetition. 


 </"
0,"There is no formal test plan provided by this team. However, this team has done a lot of testing.  You all know the edge cases that still require testing as they have been mentioned in the wiki. Include these tests in the next submission and you are good to go. Also I suggest to look at the coverage report generated by Simplecov to see if there are any unanticipated conditions that you might not have thought of. This will make your work full proof."
0,"Since the repo has not been deployed, I have cloned the given repo and ran it on my local machine. The suggestion functionality is working correctly. Suggestions can be added and remove. The instructor can approve or reject a suggestion as well as add comments and vote for the suggestion. This is neatly implemented. There is a slight error. When I click on edit comment and submit, the app breaks showing no routes found error. I suggest look at the routes generated, maybe you have missed a mapping link between the submit and a controller action. 


The other two issues, I couldn't figure out how to test it through UI as there is no guide provided on testing. Thus , I ran the said spec files. 


In assignments_controller_spec.rb, the test fails and I get an error saying undefined method visit and in sign_up_sheet_controller_spec.rb , I get an error of getting nil flash error message. You should look into these tests. Or maybe the functionality has not been implemented yet.


I don"
1,"The write up is well documented. It clearly states the issues to be solved. They have also stated the parts that have not implemented and what needs to be done.


The changes made could be explained in details as to why they are made. They have only included the code snippets which makes it difficult to follow the changes."
0,The problem statement did not require any implementation of design pattern so cannot comment on that. The contributors have written descriptive tests.Issue 971 could have been explained in more detail as to how and why the changes that are made were made. It becomes a little difficult to follow.
0,There is no Test plan included in the documentation. But the contributors have done a lot of Testing though missed a few which are mentioned.
1,"Most of the variables and methods created are named reasonably and are suggest the functionality of the variable. The code written follows ruby conventions. 


Suggestion: for some variable names in order to make the code ruby like they can use snake_case for variable names."
0,Functions in the code are small and depict single functionality. Although there are few lines which repeat in some of the methods (related to suggest comments) which can be split into a separate method making the code DRY.
0,No Test plan was included in the documentation. But most of the part of the code is tested. And tey have also included the tests which need to be written.
1,"As the code was not deployed, after testing the repo locally I was able to tset the suggestion functionality. Was able to add comments but incurred an error while trying to edit comment. Routes for this have not been set.


Was unable to test UI fro the other two problems. They should include guidelines as to how to test the functionality next time.


While running Tests:


Tests for assignment_controller fails stating an error for nil flash error message."
0,They give a very detailed test plan including all the possible situations.
0,The write-up of the methods tested is excellent. Every detail down to the parameters of the methods that are tested is shown. There is an issue on the page in the implementation section where some of the text runs off the page. This is the code block under Test Entries Creation.
0,"They authors have made their intentions and approach very clear in the documentation and how they would approach the problem and what sort of tests they would be conducting, the plan of work gives a detail about what the steps are and the testing functions gives a nice idea about each case."
0,Yes. They have illustrated the requirement and present their work with great details.
1,"The writeup is very well written and describes everything in depth. However, the team hasn't mentioned what design patterns they have used. Also, I think they could have included future scope in their writeup."
0,"The writeup explains well what the tasks were through the 'Problem Statement' and 'Plan of Work' sections. They also provide a description about the modules that they have worked on and have included a testing plan to execute on the requirements. Since this is a test case building project, there is no requirement of any design pattern here although they provide information about BDD which is good."
0,"Writeup clearly explains the background for why the authors took the paths they did, how they implemented those, and the results are clear and easy to read."
0,They don't explain why they do the work they did. And they don't mention anything about design principles or patterns either. But their tests are based on all the possible situations.
1,The team seems to have covered all the cases but they haven't described what the cases are.
0,"The developers are dealing with Test cases and thus their plan of action necessarily includes test cases, based on the code i came across, i would say they have considered almost all the cases."
0,"The intent of the project is clear. However, what was actually accomplished and how it works was not thoroughly described."
1,"The portion of the documentation explaining how the authors completed their tasks and how has not yet been completed. There are headers for, presumably, this information, however."
0,"This project is writing unit tests. However, pre-conditions, edge cases, invalid values, etc. are not mentioned at all. As mentioned before, the part of the documentation which I would presume would include this information has not been completed."
1,"The documentation gives little to no implementation details. Test names themselves seem fairly reasonable, however."
1,"The PR causes the tests to fail and the code coverage to decrease dramatically. Also, there is a lot of commented-out 'dead code'. There are also some 'magic constants' which are not explained. Otherwise, however, the tests do seem to be very extensive at a glance."
0,"No ""Test Plan"" section is present. However, this project is itself writing test cases."
0,"The test case written, on_the_fly_calc, fails. Details from the failure (From the Travis build) are below:


 


 1) OnTheFlyCalc#scores when current assignment does not vary rubrics by round computes and returns scores


 Failure/Error: score_team[:scores] ="
0,The document was clear on what the problem statement was and how it was to be done . It was a unit test to be written for on the fly calc model . it was clearly conveyed
0,"More information about the model functions / what each function did and what exceptions were tested , would help the reviewer understand it in more easier way"
0,"Plan of work was present in the document. More details about each in a little bit more details , like what are the edge cases being tested if included would be helpful"
0,"As it was a unit testing case , most of the conditions were in plain english and followed the boiler plate criteria . Everything was intuitive to read through"
0,"Different test cases were written for different functions . If there was a chance of making the code dry by adding more number of common test cases to be used, it would make it look better ."
0,public function interfaces were seen to be tested .After talking to the team. it was know that few test cases were to be removed because of the problem with parent model file.
0,All test cases were not complete for this project
0,"I believe it gives a good basic understanding and even laying out a plan of work, which I think is a good touch. What I wish was explained more, was what exactly does on_the_fly_calc_spec.rb do? You explain the places where you need to add tests, but I am having difficulty simply understanding the point as to the model and tests. The names themselves arent even defined enough to provide me the insight, so I would recommend explaining the point of the project in that regard. As such, what functions would performing these tests provide to Expertiza? What do they do? Explaining this would also help me and any other users the ability to understand how the project carries out these calculations and performs its purported function."
1,"I suppose my answer to the previous area could be used here as well. Basically, I like the way you explain your plan, but i think it would be very helpful for us and yourselves to explain the true function you are trying to bring, besides just saying you are testing this model, but not explaining what it does. I believe you could definitely come up with a great explanation and then this area would be perfect! To be honest, it looks like its a work in progress, as you have the sections made already, and so I'm sure once you explain the sections this area will be fulfilled."
0,"It does in a way include a to-be-added test section, but i'm not 100% if its going to have a more logical format. Before this, they didn't explain their plan beforehand,, which I would recommend a possible next step as well. However, it is yet to be seen what these testing sections will hold, and I cant quite comment on what type of tests they are preparing, because as i mentioned previously, it is not explained what these functions do."
0,"There is not too much to comment on the code, because it is simply a lot of test code, which uses fairly logical names in order to store fake objects. I would recommend delving into why the build has failed and the coverage had a 30% decrease, when this is a testing project, so I would assume the coverage will increase a fair bit."
0,"In some cases, such as when you included this statement allow(on_the_fly_calc).to receive(:score_assignment).and_return('"
0,"There really wasn't much of a Test Plan described, so I can't say they converted the cases. There certainly are test cases described and implemented, so I would assume that in the plan they had, they did do some conversion there."
0,"Unfortunately, as with all of our projects, we can't test them since we can't continuously deploy them."
0,"The writeup is well written and briefly explains all the functionalities. However, the team could have elaborated a bit more about what functionality each of the functions carries out and how these functions are tested."
0,"The writeup clearly explains the purpose of the project. But I guess it is found lacking in explaining how the team has implemented whatever changes they have incorporated. The writeup clearly states which functions need to be tested but what these functions do isn't elaborated. Also, it would be nice if you could explain what a particular test is for."
0,"There is no explicit test plan section. Hence, it is difficult to know what all cases the team has taken into account. Test for invalid inputs could have been implemented."
0,I couldn't find the team's pull request. The team has followed a proper naming convention and it is easy to understand what functionality is associated with a name.
0,The functions are well written but the lack of comments makes the code hard to follow. The code follows good ruby and rails practices.
0,There are four functions that need to be tested. The team seems to have tested these four but the tests aren't exhaustive.
0,Two functions seem to fail and they need to be checked. Rest two seem to be working fine.
1,"Write up is minimal at best for the first round, but that's okay since this is still under development.  I can understand the project clearly since I am doing a similar unit testing project myself.  Your template looks good for now, keep up the good work!"
0,There isn't much about about this review other than what you mentioned in your Thoughts section.
0,Test Plan is just a template at the moment.
0,"Variables names, methods, and class names look good!"
0,"I would recommend trying to build your factories rather than creating them.  The difference between building and creating is that if you build an object, it won't be saved in the database while creating does save it to the database.  The goal of testing is to create objects that you can use for testing purposes, so you shouldn't need to save them in the database.  If you do want to do that, I would recommend cleaning your database with a gem called DatabaseCleaner.  Also, you don't need to re-introduce factory builds if you are already doing them outside of your tests.  You can remove those and your tests should run fine."
0,Can't tell if they pass or not since there is no mention of it.
0,"Can't test manually, but based on what you have in your pull request, it sounds like most of your tests working correctly and you are getting decent coverage."
1,"There are a lot of section headers with text missing. The author does state that the wiki page is not complete yet, but unfortunately, I have to review it based on its current condition. It is not very clear what the purpose of the model under test, on_the_fly_calc_spec.rb, because many of the sections where this would go are missing."
0,"A plan of work is outlined, but the details of each of the steps are not given any details. Since it is a test class there is no need to discuss design principles or patterns. Most of the reason that the section is hard to follow is that many of the portions where the explanation would go are missing at this stage."
0,"Unfortunately, all of the subheadings under the Test Plan section do not contain any content. I cannot review this portion. Please implement this section ASAP."
0,Does not appear to be a pull request from the repository. Looking at the commits that were added the names of variables methods and class names are clear throughout the test plan. The 'it' statements are clear and read like sentences and provide a good level of self-documentation.
0,"(1) Functions are not too long


(2) None of the code needs to be extracted into separate methods.


(3) I would recommend adding more comments to the test file. Even though it is self-documenting this does not remove the need for comments, which could be used to explain how the code tests each condition.


(4) The code does follow the ruby style guide


(5) One recommendation"
0,"Since the project is itself adding tests, and you cannot test a test class in the same way you test a normal class, so I will treat the project itself as part of the test plan. While the test plan is not documented in the wiki the actual testing is thorough."
0,"Running the test class myself it does appear that it covers all of the possible edge cases. The test class runs as one would expect and does appear to add coverage. While I cannot prove this from the pull request I can see the results on a local end, and it appears to be thorough and complete."
0,I clearly understand. The writeup explains everything.
0,"Yes, the authors have explained how they tested the functions in the model."
0,The team has included a test plan section and is details about the functions they covered. But there are some of the functions they did not cover: score_assignment and participant_score. They also seem to have missed out on one of the conditions in the calc_review_score.
0,Comments in the code are missing.
0,"All the test cases authors have provided seem to cover all possible scenarios. Since the objective was objective was to achieve 90% coverage, they did that and left 2 functions untested."
1,"The writeup is really detailed.


Maybe include a little bit more explanation in the problem statement, and hide the links that are showing in the writeup."
1,"Yeah. The work is well explained. They included their implementation, testing, and what needs to be done in the future."
1,Testing is documented in details. And all the cases are tested. Good job.
1,"suggestion_controller.rb#add_comment


@suggestioncomment


maybe the name should be suggestion_comment"
1,"All the functions have the reasonable length.


Codes are well written and easy to understand.


Great work."
1,Yes. They did a great job in testing.
1,"The wiki is quite thorough and explains what tasks the team has been assigned with and how they have approached them. By reading the wiki one can easily understand what the project is supposed to do.


One suggestion for the wiki would be to discuss Issue 926 in the wiki in a bit more depth."
1,All in all the writeup briefly explains why the project is implemented in the given fashion. The only question I had was what why AJAX because I am not much familiar with it so if the authors could have stressed on this in the wiki then it would have been more clear.
0,No Test Plan was included in the writeup.
1,"The selected variables, methods and class names seem reasonable and are suggestive of their functionality. Cannot find any major errors or problems with the naming conventions used."
1,"The functions used are of reasonable size and the code seems to follow the Ruby style guide. Similar to the other projects, I see a lack of comments.


One suggestion would be to add a few comments so that it is easier for someone who is trying to understand what exactly is happening in the code."
0,No Test Plan was included so couldn't verify this.
1,"The code is not deployed so I tried to download the zip from the repository and tried to host the application on localhost but I faced some errors while running the application so I was not able to manually test the functionality. The error that prompted on my command prompt were regarding certain migration but I am not sure if this has to do anything with this particular application.


All I could refer was the wiki and it did not include any screenshots that I could use to verify the working functionality.


So, one suggestion would be to add screenshots to your wiki that would depict the working functionality of your application."
1,"Problem statement simply lists the issues. The issues need to be explained in detail.


Goal is stated very vaguely. How are you improving the functionality? Quantifiable or specific goals will be better.


 


Suggestions:


- Adding a screencast will help better understand the project


- Add screenshots to better understand the project"
0,"Pros:


List of files edited is given in the document. This makes is easier to check the code.


 


Cons:


Design pattern is not mentioned.


While the issue fix solution is given, clear explanation of the code snippet is missing and is hard to understand."
0,"Pros:


Steps to test through UI is clearly given.


Test seems thorough and complete.


 


Cons:


Explanation of test cases chosen and what the expected output should be is not given."
0,"Cons:


- Travis CI build failed.


- There are too many (146) code climate issues.


 


Suggestions:


- Submit link to pull request. This will reduce the time it takes to review as we don't have to search for the pull request in the repository or document."
0,"Suggestions:


- Method 'load_add_signup_topics', 'edit_comment' are hard to understand and can be simplified."
0,Automated tests seem to be thoroughly done.
0,The features work as explained in the document. It was easy to test through UI as the steps were clearly mentioned in the document.
0,"I think they have done a pretty good job at the writeup. I do see a lot of improvements compared to the time when I first reviewed. There were regular commits which shows they have been working in a timely manner. They have added details for testing along with steps and description of each of the steps. They did have screenshots showing that the test cases are passing in the last round of review and the suggestion was to work on screencast, which they have done nicely. They tried to explain their improvements and showed step by step testing."
0,"As far as the writeup is concerned, the writeup in my opinion has all the details I would expect. They have documented the steps for manual testing which is great. I would still add description or comments in the functions describing the intention/purpose of that function."
0,"As per the information provided in the wiki page, they have specified that the tests already existed for the methods. They seem to have added corner cases which were not present before. From the pull request it seems that the test coverage has increased but it does not seem significant to me. However, this shows that they have tried to add some more test cases which is good."
0,"Overall they have followed a good naming convention for most of the variables what that variable is apparent from the name. There some names which I suggest changing like if_condition_1 , if_condition_2.


 Apart from these, I found most names convincing."
0,"Most of the functions seem to be short sized and the code does seem to be modular which is really good. I found one of the methods a bit long (peer_review_strategy in automatic_review_mapping_helper.rb). I would try to see if there is possible methods I can create (if participants_with_min_assigned_reviews is blank, or only one element in participants_with_min_assigned_reviews, prohibit one student to review his/her own artifact) could be a separate function?, then"
0,"I think they have done a really good job at ensuring whether all the tests are passing and they have also added additional corner cases. I would try to see if there are still some additional cases which are missed just in case, this is because I believe the test coverage has increased but not significantly."
0,They did a good job at refactoring the previous code as they did not break it and the tests passed in the first round itself. They have demonstrated their work in the screencast which is pretty neat. There are some issues that I mentioned which could be solved to improve the code quality and increase test coverage. I would try to ask mentors or professor if they can provide any suggestions on how to increase the test case coverage. Apart from that all seems well.
0,the writeup explains the functionality briefly but needs more information about each function and about how the testing of each function is carried out.
0,The authors have mentioned what functions that need to be tested but what these functions do or what test cases they have written and what are these test cases actually testing needs to be mentioned
0,The test cases seem to lack different conditions that can be tested and invalid inputs have not been tested.
0,The pull request link is missing
0,There are four functions that need to be tested and the rest are private functions so the authors have tried testing all public functions although they seem to lack completeness.
0,two tests of compute total score and compute review hash seems to be working well the rest of the two functions need to be checked as they fail.
1,The test cases could have been commented as they are hard to follow as each function that the tests are written for are calling other functions for which the tests call mocks .
0,"The code is extremely well written by following good coding practices


The code does not have DRY principles."
0,The code was committed very frequently.
0,"Yes, the team wrote test cases that were very extensive and it handled each of the scenarios in the collusion_cycle_spec.rb file.The test coverage also increased."
0,"The code has checked the edge cases, the functionality works as expected."
0,"The writeup is extremely good. This is one of the better writeups , I have seen. Each of the headings and future work to test description is extremely intuitive and helpful for any reviewer to review."
0,"yes, the code can be deployed to production as-is. The project can be taken forward by any team and they can implement their future functionality seamlessly."
0,There are no conflicts that need to be resolved.
0,"Y'all just ignored Josh completely.


 


Y'all included an autogenerated file in your pull request and then didn't get rid of it when Josh told you to."
0,Impossible to tell. It's a Mozilla project and they require squashed commits.
1,"Not really possible to tell, again, Mozilla project. It doesn't look like it, though."
0,Irrelevant to this project because the initial steps are too small to test.
0,"Most of what's there is lifted straight from the spec, so it's not very useful.


 


The conclusion is a single, very simple, sentence.


 


It gets the job done, but it's not anything special."
0,"There's not much reason for me to repeat what Josh said, but y'all have a lot of work to do to get it to a place where this can be pulled into servo."
1,I don't really know why this isn't a checkbox? It does.
0,No new code added in the second round.
0,Well written code.
0,Yes. The code runs perfectly.
0,No new tests added. 100% coverage achieved in the first round itself.
0,Well written wiki page. Covers all the topics I would expect to be in the wiki page.
0,Yes. There seems to be no issue with the code and I think it should be good to be deployed onto the production server.
0,The code was good and well written. few modification to the names could have been done while naming the dummy objects
0,"Yes Travis C! passed , but when I enter / look at the details it showed up as failed . It was not very clear


. codeclimate — 39 issues to fix  - had to be fixed which seems to be a general code repition issue which was coming for all testing projects"
0,A good number of commits could be seen after the first deadline
0,27 cases were seen to be written and all of them passed based on the understanding of the tests .
0,This is a testing project and all the test cases seem to have passed now .
0,The write up is pretty impressive . The team has done a good job in describing all the functions and the tests
0,The code / work seems to be done complete and could be deployed onto the production server.
0,Code is very good! Variable names make sense and ruby syntax/style is followed. There could be a little more comments but I think the names of the variables help as a substitute for comments.
0,There were lots of commits! The commits seemed to only fix one thing and one thing alone.  It is very easy to read through them and see what exactly changed (from the description).  Good job committing small changes rather than lumping them together like most group have done.
0,Passed the Travis Cl.  Also thanks for linking the pull request.  I sometimes have had to search for it.
0,"The team completed all test cases and increased the coverage to 100%. Based on the coverage being brought up to 100%, documentation, and youtube video, it seems that you have covered everything you were supposed to."
0,"The youtube video clearly explains the test cases and shows that they all pass.  Additionally, it shows that the coverage is at 100% (clear proof).  I really liked how you explained your test cases in the youtube video.  It made it much easier to understand."
0,"While this project excelled in all areas (best project I have reviewed), the documentation was its weakest part.  The documentation wasn't bad (very good) but was a little hard to read/understand everything. Specifically in the introduction of the problem.  You go into detail of the task plan but I had a hard time understanding it all because the intro wasn't as strong.  The youtube video helped fix this but I think both should stand alone."
0,Yes! It is a unit test that has 100% coverage and has been proven to work.  It definitely belongs in production.
0,"The write up is good, and provides ample explanation, the video is amazing and explains everything very well.


They have understood the problem defination well and they have given proper justification for what each test is doing."
0,"Yes the code is production ready, just mint minor concerns will have to be looked into like spacing and similar block etc, the problems which are specified by code climate, rest everything is done great"
0,The testing video does a amazing job in telling what the test cases were and it explained it well what the test cases do and very well explained video was provided.
0,"Yes the test coverage has increased by 0.8 percent, which is quite a good job."
0,"There are 40 issue conflict, most of which is related to Block has too many lines of code. but its not much comparatively so nice work"
0,Yes there are a number of commits after the last review
0,"variable naming conversions has been taken good care of, DRY code is something they have paid good attention to and they also mentioned the same in the video, the comments even though absent the describe part of the test cases does a good job in describing it.


Overrall a very well structured well though of code."
1,Code is clean and pretty concise. I would recommend maybe adding a command line param for the number of random files generated though. That way when using your script I wouldn't have to change the source to generate a different number of files.
1,"The code seems to be well written and naming is well done , I feel that the code has improved a lot more than it was in round1."
1,"Overall, the code seemed to have been well written. From the comments made on the pull request, it seems like the team has some logic errors that must be sorted out. Other than that, the code is relatively dry. However, in some places, some duplication can be removed. A comment on the pull request was made for this by Josh. Furthermore, there are many comments in their commits. This allowed me to easily go through their code."
1,The code is well written. Looking at the pull request we can see that some changes have been done following round 1 reviews. Though some things are still missing as pointed out in their comments in the pull request.
1,There was new code committed during the second round they are servo_automation_screenshot.py and start_servo.py. The code could have been modularized.
0,"New code was committed in the 2nd round, but not too much. There was a good amount of deletion however."
1,Yes there are changes present for round 2 review. New code requires some more changes but can be removed with small changes.
1,"The new commits came in a single day.From the looks of it, the team would've benefited by making more commits early on in the week. The feedback they would have gotten from Josh would have been very useful for getting the team's contribution merged with Servo."
0,Code was pushed after the first round in github and changes to servo automation screenshot.py were done after the first round.
0,The video was very helpful. The operation of this is very well explained and UI does exactly what it should(since you know what to expect because you watched the video)
0,"It seems like the code does the work it is intended to perform, The project was split into two parts and they seem to work well."
0,"There was no specific user interface for this project, other than a blank web-page with different styling throughout it. However, the web pages that are made seem to be randomly rendered, which was the point of this project."
0,Looking at the pull request we can see that the system is operational. Few changes is required in the code as seen in the pull request comments.
0,The dynamic web page functionality appears to work. I followed the directions provided in the doc and the scripts seem to have worked fine.
0,This does exactly what was asked. I don't see why it wouldn't be deployed
1,The code can be deployed as all the feature the project promises are implemented and the team has followed the correct approach in solving the problem.
0,"According to the pull request, the code still needs a lot of changes. The code doesn't need to be redone from scratch, but this is not a good place for a future team to pick up on. Because of the changes, the code should not be deployed onto the production server. This is mainly because the changes seem to be dealing with these things (all of these things are changes that need to be made according to the comments from Josh):





forgetting edge cases


the scope of a few things is inefficient


the code is not DRY enough"
0,"The code is pretty good. Since it is an automation script, it will likely be accepted. By looking at the comments on the pull request I can say that there is a good chance it will be accepted."
0,"It seems like the objectives of the project were not met fully. In addition, as a Mozilla reviewer also pointed out, the code style and readability are not optimal. In addition, the structure of the code (e.g. extracting functions from longer ones) will require attention. Overall I think the team is on the right track and this is a good starting place for a future team to pick up (as long as the code stays readable!)."
1,"The team did a good effort to develop the project. The primary purpose of the project has been achieved. however, a lot of the process is manual rather than automated. Like generating the random webpage manually. instead the random webpage can be generated directly in the browser when triggered. This could be a better solution to the project. 


These along with some other changes could make the project ready to be deployed onto the production server.


The project need not be redone from scratch instead it could be enhanced to make it better."
1,The wiki is pretty bare. If more details from the video were added it would be very useful. Added screenshots accompanied with explanations would do wonders.
1,"The Readme file has mentioned some of the work that the project seems to perform. The team has also uploaded a youtube link of their work which is more helpful. I feel some description that they have mentioned in the youtube video could have been added to the readme as well so that the reviewer dooes not have to go through the whole video to understand a part of the project. This could also be done by adding annonations to the video or by mentioning timestamps in the youtube video description for the features the project has. For example you could mention @4:00 part two of the project (screenshot) feature, or something similar."
1,"Overall, the writeup was good. The one area the team could've done better is the implementation section. As of the time this review was written, the implementation section has two things:





the process of building the project


the process of running the python script





 I would've like to have read more about the structure of the python script. This is mainly because looking through code can be a strenuous process."
0,"The writeup is neat. However, they can add more information to the writeup to make it more verbose. Rest is pretty good."
1,"The write up explains the project well as well as what was accomplished. It is quite short, so some areas needed to be fleshed out and detailed some more. In addition, screenshots of the end product or the system would have been a nice touch, as it provides a better understanding to the reader regarding what was done."
1,"The team could have also spent time on the write-up. The write-up is unclear and takes long time to set up the environment. Instead, the write-up could have been detailed illustrating the project. The write-up of the project could have been better. 


The write-up just included the project description which was in the project description given initially."
1,"The code is well written and organized. However, there are some problems in the code after the second round. They are


1) The program code_generation.py did not include comments which makes it difficult to follow the code and takes more time to understand and review.


2) In the program servo_automation_screenshot.py, the entire program is implemented in the main function(Long or Complicated function). Instead, the program could be modularized which makes it easier to maintain and reuse.


The names of functions are appropriate and simple to understand its purpose."
1,"Overall the code is very readable and quite easy to follow. Variable names don't always follow the naming conventions exactly but they are named in a way that it is clear what their purpose is.


There are a few instances where a try-catch blocks are needed, or some other way of ensuring certain edge cases don't break the program. For example, one of the functions that saves a screenshot to a local directory does not check if the directory exists before trying to write to it. In addition, the code is commented quite well. Functions had headers that explained what they do, and in some instances certain lines had comments that clarified their purpose."
0,"It appears that the team added a few test cases. I was able to observe the presence of various types of exceptions for a good amount of functionalities, so it is apparent that the new functionalities that team implemented were tested in some way. If not, the possible errors were in mind and the appropriate exceptions were created."
0,"Since it is a mozzila project, i dont think coverage is required for it."
0,"No new tests were added. Even though the project specification didn't state to add tests, it would have been beneficial for the team to add some."
0,Since it is a Mozzila project I feel the test cases were not required as part of this project.
0,Manual testing was explained and everything checks out
1,"The team did not add test cases. This is one of the caveats of thier project. 


The primary purpose of the project is satisfied but including the test cases could have increased the coverage and range of the project."
0,Great. Lots of comments for the conditions.
0,"The team's work looks pretty neat with no DRY problems. Every test case is commented. However, the RSpec coding structure is not fully met. According to the provided video https://www.youtube.com/watch?v=dzkVfaKChSU&feature=youtu.be&t=35s which gives a good test structure, every method being tested should begin with 'describe' block, and a condition of the method can be tested in 'context'. For instance, the method #above from menu_item.rb could have been written as: describe '#above' do context 'when an item with parent id'  do it ..... end end context 'when an item without parent id' it ..... end end end. 


Some of the lines are too long. It would be easier to follow the code with some lines being broken."
0,My biggest issue with the code was the lack of comments which were added. The comments are great and I appreciate the numbering that you used since it is described in the wiki. Great work!
0,"The code seems very well written, modules are small and clean, every module has well defined comments and small, in the previous stage I did mention about comments which i can see have been added"
0,The code is well written and follows good rails practices. It is easy to follow with naming convention used clearly defining the functionality.
0,The Ruby guidelines have mostly been followed. There seems to be no issue there. No function is longer than necessary and variables are named the way they should. This follows what was seen in the first review. They have also fixed the issue of having no comments and now it is pretty much how it should be. There are some minor issues that CodeClimate has detected that the team could work on.
0,"Code is easy to follow, well documented, and simple."
0,i didn't find problems for their code last time. and this time they add the image to show 100% coverage of their test.
0,Not much. But they did a good job on first round.
0,"I placed this as a relative measurement. There were only 2 commits since the first feedback so I hesitate to give more than three stars, but at the same time, it is clear that there was not much work that needed to be updated from the first iteration. The work done here is solid so I will give it 4 stars since there is not much that needed to be updated."
0,Its is not dry used let to reuse code as well as before(:each) statements.  The code improved as well as new code has been added to test more scenarios.
0,"The team did a great job covering all of the model's functions. There are no DRY problems in the code, all the objects and behaviors that are common within the tests are created in the right positions. The code is easy to follow and read, with no long lines."
0,"Yes, the code is well written. The code was written well originally so no new significant changes made."
0,"Code is well written, naming is done well and it is well dried up, The authors have been able to achieve 100% code coverage which is brilliant."
0,The code submitted is well written. It follows the ruby style guidelines and proper formatting. The method names also seem to be proper. The authors can add a few comments to describe the code which will make it better.
0,The Ruby guidelines have mostly been followed. There seems to be no issue there. No function is longer than necessary. This follows what was seen in the first review. They have also fixed the issue of having no comments and now it is pretty much how it should be. There are some issues that CodeClimate has detected that the team could work on.
0,The wiki page is very informative as to what the project wishes to establish. Rest the code needs some comments to understand the flow of the code. The authors didnt check round 1 reviews. The authors should look at the reviews and do the necessary changes.
0,"Code is very extensive, covers a wide array of testing scenarios, and is DRY."
0,Code is well written and sufficiently commented
0,Commit has been done during the 2nd round. I only see one commit which has been done.
0,Yes. The team added comments to their tests cases which made it easier to follow the code.
0,yes there code has been updated after the 1st round
0,The last commit was made on 31st. There is no new code written after that. The authors need to take the comments into account and modify the code.
0,"There was just one commit since the last round which mostly just included adding comments to the code. Since most of the work was done in the first iteration itself, there wasn't any need for more commits. Good work!"
0,"The new code was committed. However, it is very hard to understand the flow of the code just by looking at the code. I mentioned in round 1 review that code commenting is required which the authors didnt take into consideration. Overall the coverage has increased but it is hard for the reviewer to understand the flow of the code and why different variables are used."
0,1 commit was made after the first round adding comments
0,"They had implemented all the tests with the first submission, and the coverage had reached 100% also with the first submission. They added comments with the second one."
0,New tests have been added which cover the deviation scores of the different nodes more better by making it less DRY. The coverage is already at 100% before and won't increase.
0,Yes the team has added test cases and the coverage has reached 100% which is the maximum that can be achieved.
0,The team has added extensive test cases for the scenarios required in the project. The code coverage has increased by 0.8% as seen in the pull request (coveralls). This is a good indicator that the tests are actually helpful in these cases.
0,"Based on the wiki, the team has identified most of the test cases they need to deal with for each module that they are working on. They have converted the same into code and this seems to be working well since the test coverage has increased as well by 0.8. They cover most cases that I can think of."
0,"Since during round 1, the authors covered majority of the test cases thats the reason I cannot find new tests. However, the coverage has increased by the code."
0,Test cases managed to cover 100% of the code
0,"Coverage increases, tests pass, are extensive."
0,The project is a testing project and it covers the important all the scenarios and I can see when dealing with 2 nodes and 3 node cycles and similarity and deviation scores. They cover all the public methods.
0,All of the test scenarios are implemented. The team did an excellent job.
0,"Yes, the test cases seem to cover all the scenarios and corner cases."
0,"The code seems to cover a lot of cases, cases such as when reviews are null have also been included and scenarios where node count varies is also taken under consideration."
0,The authors have provided a screencast of their project. They describe the various aspects of the tests in the screencast. The tests seem to pass in the screencast. The tests are extensively written and seem to cover all scenarios.
0,"All test cases have been converted as explained in the writeup  and the team has implemented this in code as well leading to an increase in test coverage. There is no way of testing them to know if they are failing, but they have provided a screencast of the code which was useful."
0,"Since it is a testing project, by looking at their wiki I think they have covered all the cases. However, it is hard to determine whether that from the code itself as no comments are present in the code to make the reviewer understand the flow of the code."
0,100% code coverage was achieved when the project target was 90%
0,The writing is very well detailed as well as I liked that they have snipits of their code added in it as well as pictures to describe the process. It was helpful that they explained what each method did.
0,"The write-up doesn't look changed since the 1st submission. The team gave clear details explaining what the model collusion_cycle is responsible for, what functions it holds, consequently giving the description of corresponding tests on every condition of each method."
0,Very well written and explained in the wiki page.
0,The writeup has also improved a lot and they have explained cases with diagrams and have done a really good job of explaining the functionality of their project.
0,I really like the way they have written out their writeup. It is detailed and has relevant headings/sections providing a good flow and readability to the user. The use of images for explanations is really helpful. They provided a video as well since the first iteration which explained about the collusion cycle which was really helpful. Overall very well done.
0,This is by far the best writeup for OSS projects I reviewed. The fact that the authors have added charts to make us understand different test cases is brilliant. During round 1 itself their wiki page was up-to date. As per my understanding wiki is perfect.
0,Wiki page is well documented and the write up is explanatory. Diagrams have been used to enhance the understanding of reviewers
0,"The write-up, when combined with the screencast video, explains thoroughly the background and execution of the project. It does suffer from grammar and spelling issues which make it slightly more difficult to follow, however."
0,"The project should be deployed since there were no testing done before, and some of the scenarios are pretty important which the team has covered. All the tests seem to work as they should, as well as all of them pass. It has a coverage of 100%."
0,"The team's RSpec tests are well-written to check all of the functionality of the collusion_cycle model. Since all tests pass, the model code is ready to be deployed."
0,Does not seem to have any issues.
0,I feel that the code is ready to be deployed as the test cases seem complete and the team has approached the problem correctly.
0,I think the code is ready to be deployed. The only thing that the authors need to do is to make the code climate fixes. The code increases the test coverage and should be a vital addition to expertiza.
0,The code definitely looks like it can be merged with the production server. My only concern would be to fix the Codeclimate issues as much as possible since it's a good practice to follow conventions so that future implementations will do the same and keep the code clean.
0,The pull request was not accepted which implies there are some changes required by the authors to be done. As a reviewer I believe if the authors added more comments it would be better for the code admin to understand the flow and then add the committed code to master branch.
0,Code seems to increase code coverage for the entire product and can't cause any side effects.
0,"Code is extensive, easy to follow, and increases test coverage."
0,The build did pass in Travis CI. There is no problem with it.
0,continuous-integration/travis-ci/pr — The Travis CI build passed
0,Passed in Travis CI
0,Yes The build passes in Travis CI and looks ready to be merged with the main project.
0,The build passed TravisCI but did not pass the code climate check. The authors need to fix these issues to make up to the coding standards of the repository. Code climate checks for maintainability of code by checking various rules. It is a must for the code to meet these standards.
0,"The pull request passed the Travis CI build successfully. However, Codeclimate indicates 76 fixes to be implemented. Most of them seem to be block similarity issues or methods having too many lines. But those issues cannot be fixed in this case I believe. Howver, there are some spacing and indentation issues. So the team could fix that easily."
0,"Coverage has increased which is a good thing. Also, the build has passed but code climate check says fixes required. There was no conflict present."
0,The build passed in Travis CI
0,The team has done a pretty good job in terms of writing the code. However I still feel there are some minor issues. I had mentioned that that some of the code is repeated in the SummaryRevieweeReport class and class SummaryReport. That is still an issue. In the  In the module
0,"The emphasis of the project was refactoring two methods and looking at the work done by the team it is clearly visible that the size of the methods which were to be refactored has significantly reduced, thereby proving that the team has done a good job.


As far as a naming problem regarding a variable ""count "" that was suggested in the first round of the review has been successfully fixed by the team."
0,The code is well written and comments have been added for understanding the code. The refactoring has significantly reduced the length of the existing code.
0,Names are very well defined. Refactoring really impacted the look of this code. Good job!
0,Yes there has been a significant number of additions to the code for the second round.
0,"An entire helper method was written in the second round. This shows that significant work has been done. The team has properly divided the work during the timeline. However, only two out of the three team mates have committed to the repository."
0,"Yes, the new code was committed during the 2nd round as well."
0,Yes the team has added new test cases and the pull request shows that there has been a 0.2% increase in the coverage. The newly added tests seem to cover almost every aspect of the project.
0,"I can see that the coverage has increased.The team has modified the existing test plan according to the refactoring done. Also in spec/helpers/automatic_review_mapping_helper_spec.rb, I feel that the test describe"
0,"The coverage has increased. In the last review, due to lack of test cases, one of the controller was not achieving full coverage but it is now. The newly added code has taken the total coverage to 7.07%. The response_report and review_mapping controllers have all the tests pass."
0,Added many tests that pass and increase coverage.
0,"Yes, after refactoring all the functionality works correctly."
0,"Th team has not deployed the code and so, I cannot manually test the functionality. However, they have included a screen capture of the testing and all the tests have passed which is indicative that the functionality is achieved, given that the existing tests were exhaustive.Also, the screencast video shows that the functionality works."
0,"As this is a refactoring project, the features are working as expected."
0,Couldn't think of any edge case so it seems that the tests do a good job covering the functionality of this project
0,There were not many problems with the writeup in the first round of the review and the team has added some content to the writeup which describes the newly made changes to the project. Overall the writeup is well written.
0,"Since it is  a refactoring project, extensive code changes have been made. The team has posted snippets of all the changed code in the wiki. This has made the document unnecessarily lengthy without much information about the project or the refactoring itself. Mostly, the code is repeated except for the addition of helpers. Also, it would be more helpful to explain which sections of the test were already present and which sections were newly added. Other than that, the team has explained the different aspects of the project very well."
0,The write-up is concise. The project has been explained in details with comparison between the existing and the new code. The UI has been explained so as to see the functionality.
0,The write-up is great.  Complete with examples and screenshots.
0,Very well written and very obvious how much of an impact the refactoring had.
0,"Well even though the team has done a commendable job on refactoring the required methods, Code Climate mentions few issues that need to be fixed and I think until these issues are sorted out the code is not ready to be deployed onto the production server. Having said that, the work that the team has done can be used by future teams that intend to work in this particular area."
0,I still feel that the helper methods are a bit too lengthy. Work can be done to improve that and merge these changes to the production server
0,"Yes, the code is ready to be deployed as it works as expected. The refactoring, which was the goal of the project has been done very well and is achieving good coverage."
0,This affected the functionality none and increased the readability a lot. This should be deployed immediately
0,Yes the build passed and there appears to be no conflicting files present.
0,The Travis CI has been passed by the build. There are some issues which are needed to be resolved such as presence of multiple cognitive complexity in the code.
0,Passes the Travis CI build.
1,"I believe their code looks well written with few DRY problems. They certainly follow a Ruby style when they have created the controllers and view. Though there are spots where they dont follow basic guidelines that were especially outlined for us before starting these projects. Unlike another project I reviewed, their view looks more clean and easily manageable."
1,The code seems proper. The names used and length of functions are reasonable. The code could use a few more comments which will help the reviewer to understand the code in a better way. Also Code Climate shows instances where identical blocks of code are found thereby indicating a less DRY approach. The team should use the suggestions suggested by Code Climate to fix these.
0,Not sure about the specific code contributions
1,The names are intuitive like retrieve_commit_data which makes it easy to understand what the method is intended to do and functions are not complicated. But more comments can be added to the code.17 files were modified. So all changes are not explained.
0,"other then some issues with indentation the code seems to be following ruby convention, naming convention is good and gives a good idea of what it is doing."
0,The code seems to be complete and well written . The variables names seem to be logical and correct
1,"By reviewing the code, I made the following observations:


1) None of the functions are too long; they are all around 8-15 lines each and good modular approach was followed."
0,"The code mostly follows good Ruby practices and there are a few more comments than in the first round that tells what that particular code should do. The functions don't seem to be too lengthy (some are, but the code seems to require it), which is good. The functions and variable names are intuitive as well. There seem to be a few problems with indentation and spaces which could be fixed."
1,"this


Link to the pull request was not provided. I found (link above) pull request. I see that there are a lot of commits regularly done which is really good. I was not able to see my previous response but I believe there were no lines of code in this file (20180402023525_create_github_data.rb) which now has the piece of code. They have considered the first round of reviews and improved significantly. Apart from that, they have some other minor changes aimed at improving which is good. They have added new functions in"
1,"They added what looks to be two test cases, one for the controller and one for the model. I dont think the coverage passed, especially with them only having two test cases. They had a large amount of code to set up the situation for the model, but ultimately there was only one test done in this case and you won't have too much assurance with these results. Perhaps it could be a future project's task to add tests to such a design or to fix the code climate problems, but more tests need to be added."
1,"The wiki page is not well written. The improvements and the testing topics have been left blank.


So , it is difficult for a new reviewer to find out the details that needs to be done to have a proper overview of the work done by the team.


A better explanation of the steps would have been beneficial."
1,"Yes, basic test cases have been added for controller and model, but there must be more test cases directed towards corner cases, some sample cases could be if the repository is private or link is wrong or some other issue, it would have been better to have such cases."
1,"The team added tests for controller and models file . The primary aim of the project was not testing , but the tests were seen to pass"
1,"The team added two tests, one for the model and for the controller. The tests seem to cover the basic expectations of the project i.e to retrieve the expected data. I would think the coverage would increase, but I am not sure since there is no mention of this. I believe the team could have a few more test cases testing edge cases or scenarios where the values are not retrievable due to a private repository or when a student uses multiple accounts to push commits."
1,"it was not possible to test the UI as it mentioned to clone and deploy the server, I would rather have one user associated have git profile associated with him and let user view it, also the images just give a static view and a video could have been much better."
1,"The team has provided a brief description of setting up the project on our local environment and testing it out since they couldn't get it set up on a hosting service. I believe it would work, but going through a series of steps might be out of the scope (I believe) as a reviewer. The team could have looked into creating a detailed video showing the improvement work as expected."
1,"As I said earlier team has really put in efforts to improve from the first round and they seem to have added functions as well as improve the code. However, a screenshot of a terminal showing the test cases have passed/failed would have better helped understand for the reviewer. I would suggest try running the tests and put some information regarding the same and if the tests are failing reviewers might be able to help if they would have faced a similar issue."
1,"The writeup does seem good and gives the complete idea of what the though process was,


 Sample view does give a idea of how the view would be and they have improved from the previous Wiki page and have taken suggestions into consideration, I would remove the code part from the wiki."
1,"The write up has improved in comparision to the first review , but in totality more information could be added , example the test sub section is written in a line , probabily more description would have been better"
1,"The write-up looks complete and informs the reader about what the functionality does. The use of images to explain things done and achieved is helpful as it's more powerful than words. They have improved it significantly since the first review. They could add more information in the testing section about what tests were made and the results. But overall, job well done."
1,"The writeup has significantly improved for sure. They have added an improvements section which shows what they did in this round. They have also added screenshots of their outcome which I really liked. However as I suggested earlier, I would put more information about whether the test cases are passing or not. If they are failing then reviewers might be able to help solve the issue"
1,"I do not think this code is ready to be deployed mainly because of the staggering amount of code climate issues and the fact that the build failed. I think they did a great job in implementing such a useful feature, but there are hardly any tests done to validate that this won't break any pre-existing code. I think that maybe this could be used by a future team and built upon by fixing said issues and adding tests, and after that teams contribution could certainly be deployed to the production server."
1,The code should be only deployed to the production server when all the issues suggested by Code Climate are fixed and also there was an error because of which the build could not complete. Although the future teams could use this as a good start point to continue this project as the efforts by the current team are commendable.
1,The Travis build failed and there 87 code climate issues to be fixed. Also more files are added/modified. So care should be taken so that they dont affect other features. So the code is not ready to be pushed onto production.
1,"I would keep the code out of deployment until all the test cases have been met, which could be a different project as there are many aspects to be considered and many things will be looked into, even though the team has done a good job, but due to lack of test cases and more corner cases needed it would be better to keep this out of deployment."
1,"Yes, I think the code in terms of functionality based on the writeup and images is ready to be deployed in production and the team has put in a good effort. However I have two big concerns - one needs to manually test it to see if it's working as the team describes it does. Second, there could be more test cases covering different scenarios. But this could be added as a future responsibility to a different team. In terms of use case, I believe it would be helpful to the instructors in assigning a grade."
0,"Apart from the issue that the Travis CI build is failing, they have produced a neat and understandable code. If they can overcome the issue that would be really great. I would add more comments in case if this project will be continued by members who have not worked on this. Even if the same team or same members are continuing the project, it is always a good idea to add comments for better readability and understanding of code."
1,"I checked that Travis CI build does not pass for their new pull request. I further investigated on why it is not passing and found that they are trying to run install commands in deployment which seems to be the major issue why the build is not passing. This issue can be solved either by finding another way to resolve dependencies before the deployment mode. I would first search what would be the ideal way to install dependencies and if not, ask mentors on how to solve this. This does not seem to be a big deal as fas as the code is concerned, there are no issues there."
0,"There is no comments in your code as well as there is some  DRY problems. score1,2,3 could be used in a before(:each) statement as well as let can be created. Even though its dry it is very well formatted and easy to read."
1,"There isn't too much code to review, but I think they could have used a style that was more DRY. They continuously name the same variables (score1, score2, score3, ... scoren) where they could potentially put them in a before(:each) block and eliminate the need to use up all that space. The expectations are done well, but setting up that code in a more DRY way can be very useful and just make the code more manageable and easier to understand and follow. Other than that, they do have the situations labelled well as to distinguish specifically what each test does."
0,"Overall the code is written really well. Good work. And testing is really thorough.


I suggested one variable name change. Maybe they don't think it is a good idea."
1,"The code is pretty concise and well written. The controller method that has been changed by the team is quite small and dry. The variable names used are spot on and ruby conventions are followed. 


In the first round, it was suggested that the lines shown below could be clubbed together using method chaining to make the code more ruby like. However this does not seem to be implemented. This is not really a major flaw as this cannot be considered as repetition as such. However, this certainly helps the code look more concise.


""row_average_score /= no_of_columns unless no_of_columns.zero?


    row_average_score.round(2)."
0,Modification were made to the vm_question_response_row file . added code was seen to be clean and as per guidelines
1,"The code was well written with proper naming conventions and modular approach was followed. I can see that no new changes were added after the first review, so I'm going to repeat my earlier comments that apart from a couple of comments in the model file, I couldn't find comments anywhere else, especially in the rspec file where they have made a lot of changes in their different commits including the hex codes."
0,"The last commit was 9 days ago on March 26, I don't believe they committed there code in the 2nd round"
1,It does not look like any commits were added after the first submission.
0,No. They did good on first round. I did not see new code committed.
1,No new commits have been added by this team. The last commit made is on 26th march which was the last day to submit for the first round.
1,No new commits were seen during the 2nd round period
1,There are no new commits to the code after 26th March.
0,There were no new commits after the first submission.
1,No new tests have been added
1,"They did add test cases to test their fixed calculations. The coverage seems to have decreased by 1%. This is likely due to the fact that they added code, but the code added to test this added functionality wasn't enough to increase the coverage. I think they did a good job, as the added tests test for the various types of score data they may receive to verify that the system does as it should"
0,"Yes. The team added test cases for the method they modified.


I don't really know where to find the coverage. But I would assume it increased.


I don't understand this question: ""How well do the newly added tests cover the range of this project?"""
0,No new tests have been added by this team after the first submission. However the tests written for the controller method are pretty extensive. I cannot think of more cases to be tested. The overall coverage has increased by 0.1%.
0,The team wrote / tested for the updated functions
0,No new test cases were added in  the second round. But the team has tested the functionality. The overall coverage increased by 0.1%.
0,The team has given detailed test plan in the writeup and also implemented the plan accordingly. The tests cover a range of scenarios and seems to cover the range of the project. Coverage has also increased marginally from 44% to 44.09%
1,"This project is a testing project and it does cover all the scenarios that I can think off. The it methods are descript enough I can understand what is being tested. All the different combinations of values,nills, and zero scores have been tested. All the tests pass."
0,"Yes the functionality does work correctly. Essentially, when a score was blank or nil, it was taken into consideration when calculating average score, even though it contributed nothing to the score. This in essence divided the score incorrectly to create the average. However after adding their code to fix this, the score is then calculated correctly. I definitely like how they included a video that explained what their project was, what they did to fix the problems outlined, and then going through and showing on the UI that the solutions worked."
0,Yeah. The modified feature works as intended.
0,"The team has not deployed the app and thus cannot test the added feature manually. However, the author has included a screencast and a screenshot of the Rspec tests showing zero failed examples. These are indicative that this team has successfully implemented the mentioned functionalities."
0,Youtube video shows the case of fixing the issue of scores not being correct
0,The code has not been deployed but the team has included a screencast and screenshots of the test passing which is evident that the intended functionality works.
0,Manual testing for the project works fine and the average score is calculated as expected and mentioned in the document.
0,"The write-up is good, gives me the general idea of what you been testing doing, but it does not explain what the difference between a nil score and a zero score, you end up testing them, but never explain if they are the same or different."
0,"I think their writeup is sufficient. What I mean by this, is there is not too much explanation, but ultimately due to the scope of their project, there doesn't need to be much explanation. They explain the problem, the implemented solution, and then have a concise but well crafted explanation of the tests they added. So when i say sufficient, i don't mean it as a bad thing, but as they kept it concise but satisfying all of the important conditions. They haven't added anything, but it seems in general they didn't fix anything between submissions, which I am a bit disappointed about."
0,The writeup is well written. And it is easy to understand. The youtube video makes it way easy to understand what their work was.
0,"The writeup is very descriptive and well documented . The problem statement is clearly mentioned. The approach of this team is explained in detail. The different testing scenarios and their implementations are also included and are explained in detail which makes it easy for the reader to understand. The screencast is also illustrative of the feature that has been implemented.


The suggestion made in the first round to add the screenshot of the Rspec result has been implemented and thus is incorporated.


Another suggestion, which was to include the original code along with the changed code in the wiki has not been implemented. I believe this would have made it easier for the reader to understand the changes made by this team."
0,Write up was seen to be complete and full as per my set views
0,"The writeup written is quite detailed. The authors have included a detailed explanation about the problem, and also the proposed solution. They have included the code snippets and screenshots of the test passed. All this makes it easier."
0,The code is ready to be deployed onto the production server. The only concern I have with it is that there is no comments in the code as well as its DRY.
0,"I do think the code is ready to be deployed on the production server. I do think the tests should implement a more DRY procedure, instead of redefining what is essentially the same code. There are a few code climate issues which I consider to be very insignificant."
0,Yes. It could be used in the production server.
0,"The code is somewhat ready to be deployed. This team has done a great job in implementing the said features. The code written is concise and DRY. The functionality is working correctly and the tests included are exhaustive. Some minor code climate error persists which requires fixing. Only three fixes are required. Once this is done the code is ready to be deployed. This team has almost done everything and with a few minor changes , i believe the code is ready for deployment.


I believe, to use this project as a base for future projects wont be very productive and the next team rarely has to do anything as most of the part is done and what is left is minor code fixes."
0,"Yes, i think the code could be deployed"
0,The code seems to be ready as there were no issues with the build. The implementation is complete and works as intended. So it can be deployed.  The approach they have used seems to be good and hence can be used by the future team.
0,"I feel the only areas where the team has to improve are in fixing the code climate issues and in adding more comments. Otherwise, code and test cases are well written and everything is documented properly, so it need not be done from scratch."
0,It passed the Travis CI there is no conflicts which need to be resolved.
0,"The build did pass in Travis CI. There were a few code climate conflicts about a few of their methods, but to be honest I don't consider this a serious problem, since in other aspects of the code in the project, there were pretty large methods that would have definitely failed the same checks."
0,The build passed. And there was no conflict.
0,"Yes, the build successfully passes. There are no conflicts of the author's branch with the base branch. Some minor code climate errors persists."
0,Yes the Travis C! test was seen to have paassed
0,The build passed and there are no conflict with this branch except for a few code climate errors.
0,"After checking the pull request, I can see that the Travis CI build has passed and the coverage has also increased marginally from 44% to 44.09%. Moreover, there are no merge conflicts. However, they haven't fixed the code climate issues and hence I am reducing a point."
0,This team did a great job implementing the new Student view. I didn't find any DRY problems. The namings are in accordance with the coding conventions for Ruby.
0,The updated code is well written. The authors have included additional comments which ease the understanding of the code structure.
1,The code is well written with appropriate comments for every step. Names are appropriate like set_student_view. But action_allowed? seems generic. It can be more specific like instructor_action_allowed?
0,"The code is very well commented and it is very easy to know what code was changed, and what the changed code does."
0,"1. The code is very well written and comments are well explained


2. modular code"
0,"Most of the code written by the authors seem to be neat. Some code seem to require refactoring. For example:


 


display_item_condition = (session[:user].role.instructor?)?(session[:hidden_menu_items].include?item_id)?false:true:true


Two condition checks in the same line should not be done since it makes the code less readable."
0,The code seems to be written very well. There does not seem to be much/any repeated code.  In addition ruby style/syntax is followed properly. Good job!
0,"1. The code has comments and is very well explained. 


2. Since last review the authors have considered helper methods."
1,"Everything looks dry and names are self-explanatory. In the _suckerfish.html.erb file though, I recommend adding a comment to the long line of ternary operators because it is not immediately clear what this line does"
0,There are new commits since the first submission.
0,"Yes, some amount of code was added during the second round."
0,Six to seven commits were performed during the second round. There were changes in the code and comments were added.
0,Code was indeed committed during the 2nd round.
0,latest commit was made 2 days ago
0,"Yes, the code was committed multiple times in the next round. But the commits were fewer. It would be more helpful if the authors made more frequent comments."
0,There were several commits made throughout the resubmission period. I like how even though you did not have too much to change during round 2 you still split up the commits to many different ones.
0,Yes new code was committed during 2nd round which was accepted as seen from the pull request.
0,The team's job was to test 2 cases: whether Assignments and Course Evaluation are hidden when in instructor view and whether Manage content and Survey Deployments are hidden in student view. Both cases are covered by manual and automated tests.
0,"The team has added tests for two of the functionality. As i am unable to find the specific rspec file, i cannot comment on the coverage."
0,The team did not add any test cases. So test coverage reduced.Test cases are described in the writeup that they can be added. But no file changes are made.
0,"From what can be seen in the Pull request, and from the seven commits so far, there were no test files modified or added. I believe the team will be able to write the appropriate tests to increase coverage and thoroughly test their changes. The team also describes their test plan in the wiki, and it is apparent that they are aware of what to test."
1,"Since the code was not about testing, I dont think coverage needs to be increased, but since the pull request is accepted it looks like they need no testing, and the work is complete from their end"
1,The team has added test cases. The tests are also clearly described in the documentation. But there is no evidence of the test coverage. This might not be in the scope of this project.
1,"The team manually tested it and also provided 2 pieces of code that also test the code.  Overall, I think this is enough testing for this project. The main goal was to get it working and not exhaustively test everything."
1,"Since the project was not about testing i dont think coverage has to increase. Since the pull request is accepted it looks like there is no requirement of testing. However, they have mentioned it in their wiki page that there is an automated test for it."
1,"They did recorded a screencast showing that the system operates well under their changes to the code. But I wish they have added the deployment link, so I could test the UI on my own too."
0,The problem which was stated in the wiki page has been partially addressed in this project on manually running the code. There is a loophole which the authors have missed which i have explained in the subsequent answers.
0,"The UI works as expected. Detailed screenshots and description given on the wiki page made it easy to review. On switching to student view, the items of student view are displayed and there is revert to instructor view."
0,"As I followed the instructions outlined in the Wiki, the UI changes that were expected to be seen showed up. Great job! The Wiki should outline a few more features and expected outcomes, as this provide a clearer picture of what changed from a UI sense and what can be tested. Overall, the functionality seems to work."
0,The code works as intended to. The authors have used helper methods to make the code modular
0,"The authors have shared a screencast of their application instead of live deployment of code. From the demo shown in the screencast, it appears that the authors have implemented the required feature."
1,While this seems to be working (video proves it).  It would have been nice to have the app deployed.  The video shows it is working for 1 or 2 cases but if I could have manually tested it I probably would have tested it for a lot more scenarios.
0,Yes the code works as intended. The authors have considered the idea of using helper methods from reviews. The project fixes code and as it is accepted I can say the work done is good.
0,Everything works as expected and shown in video
1,"The write-up looks good. They gave clear details and explanations what the problems were, they included the code that was changed and added to enhance the functionalities for the project. They also added  walkthroughs for tests. 


One suggestion thought to improve the look of the wiki page is to use the same style for External Links and References as for the background (like, [http://expertiza.ncsu.edu/ Expertiza])."
0,"The write-up is properly presented. The implementation is explained with the help of code snippets. Furthermore the Ui testing has been explained with the help of diagrams, making it simple to run the test manually. The only difficulty i had was while testing the automatic test. The authors haven't provided the spec files with which to perform the tests. The team hasn't included the files which were changed in their wiki page which would have made it easier to access the specific files for checking if needed."
0,"The writeup is well documented. All changes made in the files are described and the UI description is also given which makes it easy to follow.Since there are several roles like instructor, student and each role has specific functionalities, a use case diagram could have been inserted in the beginning to give a clear picture.Also, the problem statement can be explained in a detailed manner as to why its a problem and why this needs to be fixed."
0,"The write up is detailed, and addresses issues presented prior. In addition, the doc includes pictures, which is crucial for this project since it required major changes to the UI. The team also utilized the code snippet feature of the Wiki, which made it very easy to understand the context, purpose, and details of code changes and test cases."
0,The write up is very clear and well explained
0,The write-up is sufficiently well written for the given problem statement. The have all the relevant sections included in the write-up. They have also explained their code in the write-up.
0,The w
0,The writeup is very well explained. The fact that they have added images makes it more informative and understandable. Since last reviews the authors have made good changes to the wiki.
0,"The authors do a great job of describing the project, what exactly they did, and how to test their changes."
0,The code is complete and it works. I think it's ready for the deployment on the production server.
0,"No, this code is not ready to be deployed onto a production server. The reason for that is: there are various aspects which the authors will have to take care of. Firstly, when clicked on course evaluation when in student view, i am redirected to the manage content view. This shouldn't happen as i am a in a student view."
0,"The code is simple and neatly done. The build passed and all checks passed. The functionality is also working. Only concern is with testing. No test cases have been added. So when a new functionality is built on top of this feature, the test coverage will reduce."
1,"The code is very readable, the test plan seems solid, and the UI clearly works. However, I believe that a few more specifications for the ""Student-view"" should written up, implemented, and sucessfully tested. Given this, I think the project is in currently in a good place for a future to team to pick up and improve."
0,The ocde is already merged from which I can conclude that there are no merge conflicts and is very well written
0,The code seems to written fine. The only concern is to actually test the functionality live on a deployed project. At the moment it is not clear if there are side conditions that need checking.
1,While it seems that everything is working I think more testing is needed to prove everything works and nothing breaks.  Assuming there was more testing I do think that it is ready to be deployed.
1,There are no build fail errors and merge conflicts. Since the pull request was already accepted I think the code is ready to be deployed. I still feel the code needs more comments to understand the flow of the code.
0,This is a pretty straightforward add. I think it could be deployed easily with no issue
0,"Yes, the build passed the Travis CI."
0,All checks passed and has no conflicts with base branch. The Travis build also passed. There are 0 code climate issues
0,"Based on the details from the pull request, the Travis CI build passed, the CodeClimate checks passed, and there are not conflicts that need to be resolved."
0,"there were some conflicts initially which were resolved in the second round


The code is accepted which means that code is well written"
0,"Yes, the build passes for the pull request. The authors have also made code changes to resolve conflicts."
0,Everything is working with the pull request.  The build passes in Travis Cl.
0,There were conflicts which were resolved by the authors. The pull request is accepted by the code admin which implies the work done is good. There were no build failures and no conflicts in the pull requests.
0,Everything Passed
1,"Yes, it says that 20 commits were added between the first and second submissions, which is good that it basically means that functionality was improved."
0,Yes. A lot of new commits after 1st round.
0,"Yes, the code was regularly committed."
1,"Yes, it seems the majority of commits were made between the first and second round of submissions. Several of these commits seemed geared towards solving code climate issues and ensuring that the build passes Travis CI. The team did a good job of evenly dividing the commits between members, and a great job of committing changes early and often. The only suggestion I have is maybe more explicit commit messages."
1,Most of the code has been implemented in the first round with lots of refactoring and modifications done in the second round. There are lots of commits made (40 commits) which shows they have been pushing the changes then and there to the master.
1,"Yes, a good amount of commits have been made in the after the 1st round."
1,There were lots of commits made during the 2nd round.  In addition it wasn't just one big commit.  Most were very small which is good. While I think y'all did a good job with the commits a little longer description could be nice.  I had to go into the commit to truly know what was changed.  But besides that good job!
0,Yes new code was committed during the second round.
1,I was unable to access the AWS deployment so I attempted to test in my personal environment. After pulling the repo and building as normal I ran into several errors and was unable to test the functionality. I would leave the stars section blank but I cannot seem to remove my rating for some reason.
1,"The sample submission link and functionality seems to be working.


This is not a testing project rather an implementation project."
0,Yes. It works as intended.
1,"From the screenshot, it is seen that the functionality is well implemented both from student view and from instructor view.A screencast could have been attached to verify the flow."
0,Everything seems to work well.  I did not exhaustively test everything (probably out of the scope of the review) but in the tests that I ran everything worked.
1,"The UI operations work as expected. Though not a testing project, the authors have included tests to verify their functionality."
1,"Everything works as intended, but I had some difficulty making sure that the sample submissions were actually being displayed for the correct student.  Nonetheless, great job on the UI ya'll!"
1,"The writeup is amazing! I really liked the graphics that helped explained everything.  While it probably could have been explained in words, the pictures really helped make things clearer."
1,"The writeup is quite descriptive. It contains explanation regarding the project issues. The authors have included code snippets which makes it easier for the reader to follow the changes made in the code. They could have included explanation regarding why the changes were made by adding a few comments. They have included a Test Plan stating all the test cases considered, they can also add a screenshot of the test passing so that the readers know that all the tests work."
0,"I am not quite sure about this.


One thing is, for an instructor to select past assignment as a sample, it seems like all the assignment with valid course id would all show up in the list.


Does this mean every instructor would have accesses to all the assignments in the database? Is this an issue or my understanding is not correct?


Another thing is, could we improve this by providing a search function to search relevant assignments not listing all the available ones"
1,"The writeup looks great and I was able to understand what your project is suppose to do.  One of the highlights that I thought strengthen your writeup was your use of diagrams and pictures to show the flow of how students are able to make their assignment public and how they are able to view sample submissions based on what an instructors makes public for students.  The only thing that I think it lacks in is direction of how to guide the reviewer on how to test your application.  In other words, when a reviewer wants to test your deployed application, which student/instructor should they log in as to ensure that what they see matches what your sample submission pictures in the writeup."
1,"The writeup is very well written with the flow, steps, test cases, well described. The flow is neatly drawn with what is to be expected. The file changes are also described for every file.Files modified/attached section could have been added because lots of files have been modified. So files modified and files added section would make it easy to understand."
1,"The writeup was very well written, the flowcharts for both user types at the beginning was a very nice touch. The sections are divided well and each one is explained in an easy to understand manner. They are not too verbose, but not terse either. The minus 1 is for the things. The developed code sections feels slightly redundant as you included the pull request at the bottom, a reviewer can check the pull request rather than read the wiki. This also introduces potential for version control error, so I would recommend sticking to just the git. The second is there is no explicit mention of design patterns."
1,The write up could have been better. Any new reviewer should be able to seamlessly able to navigate to the exact part of the codes where changes have been made
1,"The improved the writeup a lot since last review. Now it is really easy to understand, especially with flow chart."
1,"From my first review, I remember they still had quite a few aspects to explain through well, like the testing area. They certainly improved upon the readability of their document! They have a nice graphic that explains the couple of different control paths that were created and improved upon, which helped me to test out the deployed application. They clearly laid out the project tasks they had set out to accomplish, which is a nice touch. They then separated by each task and showed the code they added to accomplish said procedure, which i like because it gives an organization that is easy to follow as viewer. They have a clearly laid out test plan section where they show the test situations they added in RSpec. This is good, but perhaps it would be better if they would explain their reasoning behind the tests, which i feel would be more representative of a test plan, rather than show the test implementation right off the bat. They end on a future scope which is a great idea because it makes i"
1,"The writeup is descriptive and well written. The project objective and the proposed solution has been clearly stated. They have added snippets and explained them which is an improvement from the last submission. This has made the wiki a lot easier to understand. The test plan section has been included with detailed descriptions of the different testing scenarios and the corresponding spec snippets have also been added. It would have been better to include the screenshots of the Rspec results.


Adding comments to the code would have been beneficial."
1,"One concern I have is that the Gemfile.lock file is conflicting with the current expertiza repo, which could be concerning. If they used things in a different way than other aspects of the code base, then perhaps it could break those aspects for the entire system. I do think this is a good starting place though, because they definitely seem to have done great work! I do think the views should be limited in the inclusion of logic, and they were not quite aligned with this though, but other than that they wrote fairly well styled code. Testing-wise it could be taken as a slight concern when considering how well the paths were justified, as it seems the test coverage may have decreased slightly."
0,All checks seem to pass the travis cl.  Good job!
1,The pull request does not mention that the build has passed. There are conflicts with these branches. The conflicts are with the Gemfile.lock file and  app/assets/javascripts/response.js
1,Their latest build passes in Travis CI from their latest push to GitHub.  There are a few conflicts that must be resolved in order to successful push to the expertiza master branch.  Those being Gemfile.lock and response.js in app/assets/javascript.
0,"No , the build on this has failed. There are a few conflicts with the base branch. The conflicting files are :


Conflicting files


Gemfile.lock"
0,"The pull request passes both Travis CI and code climate with no issues. Several commits went into fixing code climate issues after the first submission, this was something the team put a lot of effort into. great work"
0,I did not find any merge conflicts.
0,The build passed in travis ci. But there was some conflict. I think maybe they changed some gem file and javascript thing in order to deploy it.
1,"Yes, the build passed. There are two conflicts, in the Gemfile.lock and app/assets/javascripts/response.js files."
1,"I did not find any mention about the tests written to test the functionality. So, without exactly writing the tests, it may be risky to deploy the code to production.


Rest of the code looks ok and any team can pick it up."
1,"All checks have passed. There are conflicts with the base branch. app/assets/javascripts/response.js shows as conflicting file. Since lots of files are modified (20 files), care should be taken that the feature does not affect existing features."
1,"Once the conflicts has been merged, I think this is ready to be merged with the Expertiza master branch!"
1,This seems like a good approach as everything seems to work fine as expected. But the build for the pull request has not passed and there exist a few conflicts regarding a few files which should be first resolved before deploying. As the approach used implements the functionality correctly this can be used as a baseline for the future team to start upon and improve the issues.
1,My only hesitation with saying that it is ready for production is that I don't know the result from the tests.  I am assuming everything passed and if that is the case I would say it is most likely ready.
0,The team has made good commits for the 2nd round which indicates the team has been actively working on improving the project. There were 8 commits for the second submission.
0,"The code is well written and organized. Some of the naming conventions of the functions have been improved from the first submission. Some part of code require comments to better understand it. While team has made a good effort in making comments easy to understand and makes it easy to walk through the code. The authors improved the code when compared to first round. However, regarding some procedures there can be more DRY way to do it like for the test four_node_cycles and others."
0,The build did not pass the Travis CI. The team made good efforts to merge and made several changes to convince that their build works but the pull request has not been accepted till date. The team made good effort to correct all the code and requested for new pull request.
1,The code follows ruby style. There are a few fragments that have been repeated and can be made DRY. The variable names given are apt.
0,Yes new commits have been made in the round 2.
0,"The build and checks have failed. 


There are conflicts in the following files:


app/assets/stylesheets/application.scss"
1,The team has added test cases and extensively tested their functionality. But since the build did not pass I cannot see the overall coverage of the tests.
0,The deployed version works as intended.The tests that are written seem to cover all the scenarios I can think of.
1,The writeup written is quite detailed. They have explained the problem and the proposed solution included the files altered. They have also included guidelines for UI testing. I would suggest that they could have explained a little more about AJAX as not everyone is familiar with it and explained why they have done what they have done.
1,The code is almost there. As the build did not pass and there a few issues that need to be fixed before the code is deployed. The team has done a great job and hence this can be a great baseline for the future team to start upon.
0,"The code is nicely written. One minor thing is in the suggestion_controller, lines 43-45, maybe remove commented out code?"
0,"Yes, there are many commits after 1st round."
0,It didn't pass travis ci. There are some conflicts.
0,"Yes, they included new test cases, and they also suggested further testing required.


The coverage increased.


I think the newly added tests cover well for this project."
0,Yes. It works very well.
0,The writeup is very detailed and easy to understand. Good job.
0,"Yeah. Maybe after resolving the conflicts, it is ready to be deployed."
1,"Although there were not many problems with names selected, Code Climate reports few serious issues like function itemTemplate and method load_add_signup_topics exceed the allowed number of lines, few blocks have high number of lines, etc. The team should look at the suggestions provided by Code Climate for these issues and should fix these"
0,Yes the team has added new code during the second round.
0,"The pull request shows that all checks have failed so that means the build did not pass. Also there appears to be two conflicting files ""app/assets/stylesheets/application.scss"" ""app/views/assignments/edit.html.erb"". The team should look into these and figure out how to sort these out."
0,The team has added test cases for the second submission. Although there is no comment on the pull request about the coverage change so cannot comment on about coverage increase.
0,The application was deployed on the Heroku server and it works correctly.
1,The writeup is very well written and covers everything required for the project. The authors have done commendable job by throughly going through all the required details. Having said that I still cannot find much information regarding the use of AJAX. This is something that was also mentioned in the first review.
1,"Well as seen from comments on the pull request, the build has failed and also there are some conflicting files. Also, Code Climate mentions few significant issues that needed to be fixed. I suppose that once all these issues are sorted out the code can be deployed on to the production because as far as the functionality is concerned the team has done commendable job. The current work is worthy enough to be considered as a starting point for future teams that are assigned this project."
0,"Code is well written, but problems not fixed."
0,"Yes, there are multiple commits in second round."
0,"There is conflict in 2 files:


app/assets/stylesheets/application.scss


app/views/assignments/edit.html.erb


 


There are still over 70 code climate issues."
0,More test cases have been added.
0,"The project works as intended. Project has been deployed on Heroku, which made testing much easier."
0,"Screenshots, code snippets have been added in the writeup now based on given suggestion."
0,Code climate issues are too man and need to be fixed first before deploying.
0,"The team's work looks good. They added all modified files in their write-up , which helps in checking the actual code."
1,"The team made a pull request, but the build didn't pass in Travis Cl. These are:


Conflicting files


app/assets/stylesheets/application.scss


app/views/assignments/edit.html.erb"
0,The team added test cases for topic_suggestion_spec.rb. The file covers all possible test scenarios.
0,"Their task was to add new features when managing topics. The team implemented the ideas that were provided by the instructions.


The team gave great instructions step-by-step on how to test the system from the UI."
0,"They did an excellent job. They gave clear details and explaining what the problems were, they stated their work plan, listed all the files that they had to edit to enhance the functionalities for the project. Great job on instructions for 'Functionality walkthroughs'."
0,I think their improved functionalities are ready to be deployed onto the production server.
0,The team added the test cases. This increased the coverage of the project. And also the test cases added cover the range of the project.
0,The project is an expertiza testing project. The test covers a wide range of scenarios. There could be additional scenarios that could be tested to increase the test cover range of the project. The team made a good effort in testing with various test cases.
0,"The write-up was well written and described the intent of the project. The write-up was detailed enough to easily understand and test the project. The team made a good effort in write-up. The write-up clearly explained the type of tests written and their purpose. The authors explained all tests like four node cycle, three node cycle etc."
0,The team has made good efforts to test nearly 90% test cases and some additional test cases can make this code ready to be deployed onto the production server. The code was well written and tested hence some additional testing could make the project deployable.
0,"The build has passed in Travis CI. There are no major issues as such. The only issues are codeclimate issues, which the team tried taking care of so as to make the code as DRY as possible. The code needs some minor refactoring in some places."
0,The code is very well written and is easy to follow. The team has diligently stuck to following good rspec practices from the beginning and have done a very good job of trying to keep the code DRY.
0,"Yes, new code has been committed during the second round. They have been pushing their changes throughout the course of the project."
0,"I think the team has followed the right approach and has painstakingly made sure that they follow good coding practices. I do think the code, with a little refactoring, is ready to be deployed onto the production server."
0,"They have done a great job with the writeup this time around. The writeup is very descriptive, and it's very easy to follow what all changes the team has made, how they have done it and where the changes are from the writeup. They have also added a screen cast of what all changes they have made which makes things easier."
0,The code works fine and the tests are as intended. They have done a great job of following good coding practices. The tests do cover all the scenarios.
0,The coverage has increased after adding their code. The test cases are well thought of and exhaustively cover the range of this project.
0,"The Travis CI build has passed, however, they are having code climate issues yet and the coverage is 45%"
0,Commits were made according to the review given in the first round and changes were made accordingly.
0,"Yes, the code is well written and follows the conventions of Ruby design principles."
0,The write-up is clear and self-explanatory
0,"Yes, as per my understanding the code is well-written and has covered edge cases, but since the pull request has not been accepted yet, I believe there are minor changes to be done"
0,"They added new test cases for the project, coverage increases by 0.8%, altough there are few comments in the code, so it is difficult to understand the code flow"
0,"As mentioned from the wiki, they have covered all the test cases


Since comments are not present, it is difficult to understand the flow of code"
0,"I feel that by making changes to the code and removing unnecessary and repeated statements in the test cases the code can be improved more and thus can be dried up a lot, which will then be ready for deployment."
0,The authors have done well with the writeup. They have done a good job of explaining the test scenarios and also have uploaded a screen cast which makes it easy for a reviewer to review their work.
0,"The code works fine and tests cover all the scenarios, but the code could have coupled the repeated statements in before each and that would have been great."
0,The coverage has increased a lot and reached 100% coverage. The team did a good job in covering all cases and edge conditions.
0,"The build passed in Travis CI. The codeclimate issues still exist and they could be taken care of, moreover I feel the code could have been dried up more by removing repeated let statements."
0,Yes they have pushed changes after the round1 of the project.
0,"The code is well written but could have been dried up more, there are some repeated declarations in the let(..) statements of rspec that could have pushed up in their before(:each)"
1,No comments are added in the code. Less number of changes are made and the names seem to be intuitive.
1,"There are very less number of commits. Commits were done either 1 week back or 10 days back.In the changes done 10 days back, less modifications were made. Most of the new code seems to be added after first round."
1,No test cases are added and it is not mentioned in the writeup as well. So test coverage has reduced.
1,"No screenshots/video/youtube link is provided. So its difficult to understand the flow and find if the feature works. Steps to test the code are provided in the writeup but images and what is the expected output is not mentioned.Based on the build status, the feature might have issues to be fixed."
0,"Major improvements are needed in the writeup. Sections like files modifed/added, Testing, Automated test cases, Screenshots etc are missing.The problem statement can be explained in detailed manner like previously how it worked and how the new feature improves the functionality etc."
0,"The build failed and there are issues to be fixed. Since less number of modifications were made, it should be easy to troubleshoot and should not cause issues with other features. Since test cases are not added, coverage might reduce after pushing it to production."
1,Very Few lines of code was written . They seem to be fine  as very minor modifications were done
1,No commits were found
0,Not an expertiza project
1,Couldn't find any explicit testing done for this code . A general description on how to build was given . Also testing was not menthioned as part of the requirement document
1,firstly no deployment was done and they was no clear understanding / explaination on how the code changes the complete system as a whole . so it was not possible to do a UI/ any kind of test
0,The write up was too minimal . It did explain a few aspects but they didnt tell clearly on how the steps were done or good general introduction of the system which i felt was necessary as it was a mozilla project and background understanding was minimal
1,"The project seems to be half done . also it was mentioned in the commits that ""Created framework for adding har files to servo part 1.


Incomplete, but pull request is required for class. Will fix for part 2."" which was not convincing fully ."
1,"The wiki explains how the authors wish to solve the problem. However, what changes are done in the code has been mentioned by the authors. Also, comments are not present in the code which makes it hard to understand."
0,The new code is committed. They tried to remove some bugs which can be seen from their pull requests. The pull request was not accepted which indicates some changes are required. The build failed and there are some merge conflicts present in the code.
0,They have mentioned it in their wiki page but from the pull request it seems there are no testing code present. The build fails and merge conflicts are present. From the comments it is seen that the code requires more changes.
0,Since the build failed it is hard to determine whether the project works as intended. The testing section in the wiki page but the code lacks testing code.
0,"The writeup is neat. The authors have explained what they wish to establish with the project. However, I feel the wiki can be more informative and should have images to understand situations."
0,The pull request is rejected as the build fails and there are merge conflicts. The project requires major changes for it to be deployed on the production server.
1,"1. The steps followed in code are explained but the code is not present in the wiki page. So, I am unable to review"
0,"Some changes were made to code after 1st round, however, build has failed after that"
0,"They have mentioned the test cases, in the wiki page, however, from the github page, we see that there are no test cases present"
0,"The build has failed, so am unable to verify whether it would work correctly or not"
0,"writeup is clear. The authors have explained in brief, however, this can be made more elaborate"
1,"The pull request is rejected because build has failed, they require some major changes to be merged"
1,"Code did not change from last review. So, it seems fitting to use my description from last week:


""The code pushed to the repo seems to be just right. The team uses comments where ever necessary. None of the functions seem too long. And, most of the code added doesn't need to be split up into functions. There seems to be opportunities to make the code more DRY, but, as someone who has contributed to Servo myself, making the code DRY may not be the best course of action in certain situations.""


The authors did not make any new commits. As a result, their code was not merged because it still needed some changes."
0,"There are 8 commits in the second round. According to the pull request, the last commit was 8 days ago. In fact, all of the commits were 8 days ago. Furthermore, the code still needs some changes before it can be merged into the master branch of Servo."
0,"The team did not add any tests. As a result, the coverage did not increase."
0,"While review this team's work, I came across a bug on Expertiza. This caused me some problems when trying to edit my review after I saved it. I finally got an email saying that my problem has been fixed and that I can resume working on my review. However, I no more have enough time to answer this question thoroughly. Building Servo takes a couple hours on my computer, and I do not have enough time to test the code due to an Expertiza bug."
0,"Like last time I reviewed this write-up, something as basic as ""Understanding the Servo Implementation"" is still on the writeup. This can take attention away from the actual material of the writeup by introducing clutter. Furthermore, it seems as though the implementation section was a little hard to follow. A few snippets of code would have helped me understand the implementation a lot better."
1,"In my opinion, this code is not yet ready to be deployed onto the production server. This is mainly because the status of the pull request shows that the code needs changes. Furthermore, there are 10 commits that the team made in total. Usually, in a pull request, all the commits must be squashed into one commit. This will make the easier to merge with the actual code."
0,Code is will written and nothing new has been improved since the first review.
1,No new commits have been made since the first review.
1,No new test cases were added for this project.
1,"Given the pull request, it looks like the system is not operable at this point and does work as intended due to merge conflicts."
1,The write-up is basically the same as what I reviewed from the last review.  Nothing new has been added to the writeup and their documentation needs major improvements to better understand this project.
1,"This is still a work in progress based on what I have reviewed.  Not enough work has been put into this project and nothing new has been put in since the first review.  My biggest concern with this project is where the team is currently working on at this moment.  They should push what they have so far done so that a future team can pick up on it for a future OSS assignment.  The project is fine for the moment and nothing should be redone or redid.  Overall, this team worked the best they could on this complex project and I give them all the praise for the work they have gotten done to this point."
0,"The code written, as seen in the pull request, seems to be following the coding conventions. It is not very evident from the code, what is happening. So the authors might want to add more comments in their code."
0,The last commit was made 7 days ago. So there are no new commits after the review.
0,This is NOT an expertiza project.
0,"The author do not mention about tests they have conducted in the project. Although there is a test plan section, it is not clear what test cases/scenarios are being tested.


Testing might also be out of the scope of this project."
1,The authors have not provided any live deployed code or screencast for review. It is not possible to tell from current submission how this project operates.
0,"The authors seem to have added the write-up in the wiki user page of one of the authors. They need to add a new section the expertiza wiki page. Although there are relevant sections in the write-up, many of them need to be clearer. There are no screenshots or images in the write-up. There are no examples or code given as well."
0,"From the comments in the pull request, it seems that there is some pending work that the authors need to do. There is also suggestion about adding tests, that the authors have not done. At this point, it is difficult to say if the code is production ready or not."
0,Code was well written. Naming conventions seem to be followed. Comments have been added for understanding code
0,No new commits were added in the link provided for the pull request
0,This wasn't a testing related projecct
0,The feature seemed to work although I do not have a full understanding of what the project was intending to do.
0,The write up should have included the description of HAR as it is not easily understandable from the code or the writeup.
0,The code is good enough to be deployed into production
1,"The System operation works as intended. The UI works well. There is an enhancement that can be done to the project. 


The Random HTML files are produced manually when we run the program. Instead, the pages could have been generated directly in the browser. Rather than first running the program to generate and open manually. This could be one of the good enhancements to the project."
0,This is a Mozilla Project.
1,"This team has only made changes to the migration files. The team has not added any significant code since the last submission. One more migration has been committed. This migration adds the bookmark to the menu. These migrations are made according to the ruby conventions and are DRY. Comments have been added by the team stating the purpose of these migrations.


I can see that two of the issues are still not resolved. Probably as mentioned by the authors, they were facing some kind of JavaScript error."
1,"This team has made very few commits after the first submission. Major changes includes a new migration added. I can see commits in a few controllers such as the questionnaire controller and the tree display controller. However, the authors have not mentioned changing anything in these controllers in their wiki."
1,"Yes, the build passes successfully. There are no conflicts of the branch with the base branch. 


Some minor code climate issues persists. However, they are very minor and can be fixed."
1,"The coverall coverage report indicates that the coverage has increased by 0.05%. However , no new test cases has been added by the author. 


I believe in this project, this team did not require tests to be written for the implementation they have done. The code added only involves migrations which involves changes in the variable name and thus need not be corrected."
1,"This team has not deployed this app and thus it is not possible for me to test the UI manually. i tried to run the repo on my local machine but it did not run as i faced a lot of error. These errors may be due to my local machine.


However , they have included a screencast which is pretty descriptive and indicative of the functionality included by the author and thus it can be concluded that the functionality included by the authors is working fine. The screencast lacks audio. I believe adding audio to the screencast would have made it easier for the readers to understand.


It seems that the team faced a major javascript error , due to which the add bookmarks option is not included in the menu. Thus the team has justified why they were unable to implement the other two problems."
1,"The writeup is very descriptive. It clearly defines the problem statement and proposed solutions of the author. The karma points system designed by the author is pretty impressive. The instructions for UI testing are illustrated in details and thus are easy to understand.The authors have also proposed solutions for unimplemented problems which is impressive. They were unable to do it due to some other Javascript error which is not really their fault. One suggestion i had was to include the db files or the new migrations created in the wiki for the reader to understand. This would have enabled the reader to understand how the previous migrations were faulty and how it was changed. 


Plus the functionality of the new migration would be clear. At least the names of all the migrations altered or created should have been included."
1,"No the code is not really ready to be deployed. Only one of the three issues have been fixed. Even though the build passes, there are some code climate issues which needs to be looked at. Unfortunately , this team faced a lot of problems with their interactive menu javascript. Firstly, these issues needs to be resolved. Secondly , since no tests are included, the newly added features should be thoroughly tested before deployment.


I believe the project should not be completely scrapped. Rather , the issues with it needs to be fixed and the future team can use this work as a reference."
1,The changes that the authors have made are mostly in the migrations. So they haven't altered or added the code from the last round. The migration that was added to add Bookmark Rating to Menu items follows ruby style coding. The changes include comments wherever necessary.
1,"Yes there are a few commits during the second round. But as the authors have mentioned in the wiki, they were facing issues with the menu editor and hence could not implement certain parts of the code which justifies the less number of commits"
1,Yes the build did pass. There are no conflicts shown with the branch. There are a few spacing issues that can be fixed.
1,"No Tests were found to be added in this project. But as per the project requirement it doesn't show a need to add test for the part that has been implemented as the changes made are in the migration which mostly are changing variable name. 


The test coverage has increased by 0.05%."
1,"The team has uploaded a video showing the UI demo. The app was not deployed so after manually testing the app as per the instructions given in the wiki, the functionality works as expected. The reasons for the issues that are not implemented are justified and a proposed solution is also mentioned."
1,The writeup is quite descriptive and contains clear explanation of the issues. It also contains proposed solutions for the problems that are unsolved. It conatins instructions for UI testing making it easier for manual testing.
1,As a few issues remain unresolved this code is not ready yet according to me. The functionality of the menu editor needs to be tested and after complete implementation should be deployed on the production server. But as the implemented functionality works fine this can be a good baseline for the future team to work upon and fix the remaining issues.
0,"They mostly had to update the existing code by adding spaces, capital letters, or underscores where it had been written incorrectly before."
0,Most of the commits were just removing extra comments from their original commits.  They also added a bookmark rating field to the model.
0,It passed the Travis build and only had minor whitespace issues with code climate.
0,No new tests were added to this pull request.
1,The first two cases they describe work well but there was no implementation of the additional features described in their writeup.  There was no work towards adding additional bookmark rating criteria.
1,It was a very clearly explained writeup that gave helpful information about their task as well as images showing what the problem looked like in the current implementation.
1,It correctly added the bookmark ratings to the menu and passed the tests so I think it is ready to be deployed.
1,Everything looked good on this front.
0,No tests were added
1,"couldn't really come up with a corner case so when I performed the same process as the video, everything worked ok"
1,"Clear what the project was. One thing though, the images on the page are all huge comparatively(again this doesn't really matter but)"
0,The bookmarks functionality was broken therefore meaning this should be deployed to fix the issue.
1,"The code was well written. 


Some changes in the project could make it much better.


1) The names of the functions and variables are long and complicated.


2) Though most of the code included comments the author missed some code for which comment lines could be easy to follow and test."
1,"The team made good number of commits for the second round. The commit count was 5 and the code added, improved the previous code."
1,"The project was an expertiza project and the pull request did not get accepted yet, this is one of the reason, I could not test the code. Since the ""Manage"" Tab did not reflect in the expertiza page."
1,The team did not include the test cases. This could be one of the reason the pull request might not been accepted. The team could make test cases to increase coverage and range of the project.
1,The intent of the project seems to have satisfied based on the screenshots in the write-up. Since the pull request has not been accepted the desired tab is not displayed in the expertiza page.
1,The team has made good effort in making the write up easy to understand. The primary purpose of the project is clearly displayed in the write-up. The write-up also included screenshots of the project which made it more easy to understand the project. The write up was detailed enough to understand the functionality implemented in the project.
1,"Since the pull request has not been accepted. We could not test the project. But as mentioned in the write up and taking a look at the code, the code could be deployed with good testing. The team must include a wide range of test cases to make it more credible to deploy in the production server."
0,I cannot see the changes which were made in the code as i don't know what exactly the changes were. The authors have mentioned that the migrations have been added and i can see those migrations.
1,"Yes, the new code was commited during the 2nd round."
1,The Travis CI has been passed by the build. There are some issues which must be resolved. But these are very minor changes and related to the spacing for example.
0,The project doesn't have any automated tests present to check the functionality.
1,"Out of the three issues which the team were assigned, only the first issue has been implemented..till a certain limit. The authors have said that the problem lies in the menu editor and it wasn't their responsibility to fix that. The second and the third issues also haven't been implemented as expected but the team has explained the second issue and the error which causes the failure."
1,Most of the aspects are fine. The authors should include some code related to their functionality even if it is just the migrations.
1,"No, there are a lot of issues which need to be resolved before deploying the code. The third issue has not been dealt with(at all).The future team should resolve the menu editor which is causing one of the problem as well as the problem causing the error message to appear."
1,First round did not have any problems.
1,"Yes, there are multiple commits in the second round."
1,"- Travis CI build passed.


- No conflicts.


- Number of code climate issues has decreased now."
0,No new test cases.
1,Project still works as intended.
1,Screencast has been added based on first round review suggestion.
1,"Since number of code climate issues has been reduced to 4, with a little work the project can be deployed onto the production server."
1,The code was clean and well written. I could understand that there was some amount of refactoring done on the project just by looking at the code. I only feel that one or two comments could have been added to explain one of the DB migration files.
1,Quite a few commits were made in the second round and the Travis build status has also passed for these changes.
1,Travis Build has passed and also there are no merge conflicts.
1,"The coverage increased marginally by 0.05%. No test cases or automated tests were provided, but I don't think it's necessary for this project. But the team did provide a Manual UI testing plan."
1,The refactoring works as expected and all the features mentioned in the document work have been implemented.
1,"The writeup was well written. It clearly explains the problem statement, the solution, the files added/changed and the test cases included. Some screenshots were also provided which helped me in understanding the problem statement properly. Overall, it was written in simple, easy to understand manner and hence I am giving a 5."
1,"Apart from maybe adding a few comments in a migration file, I think everything is fine and could be deployed to production since the Travis build has also passed."
0,"There's random comments added like ""#changed"" and


 


""##


 


##""


 


That just make everything worse.


 


Otherwise, there's not any massive changes as part of the project, so it's hard to say."
0,"There's three commits total, and this isn't a Mozilla project, so it's not like y'all had to squash your commits together."
0,"Coverage decreased (-0.01%) to 43.886% when pulling 68a1d1d on ShrinathCheriyana:master into 57527db on expertiza:master.


 


Not much else to say about that. Not sure why this isn't a checkbox either."
0,"It works perfectly. Good job. Rating bookmarks is loads of fun, of course."
0,"I understand perfectly what the goal of the project was.


 


There's some awkwardness in the English, but nothing that's super important:


 


""The current functionality only allows for the author to review the bookmark, and the reviewer is not able to assess the usefulness of a bookmark."" has a random ""for"" in it and is a bit excessively wordy.


->


""Currently, only the author can review the bookmark, and the reviewer cannot assess the usefulness of a bookmark.""


 


But that's picky and something that would be dealt with by the editor for a document, not the developers."
0,"It's a decent starting place, I guess. The bigger deal is the fact that codeclimate is justifiably super mad at the code. The issues it reports are bad and should be dealt with accordingly."
0,There are not much meaningful code refactorizations.
0,"Yes, but this was mostly just removing comments."
0,Travis CI passed
0,The topic did not call for new test cases.
1,Good use of UML diagram.
1,"The build request did not pass, and the codeclimate does indicate alot of issues, my suggestion would be to use ruby mine options of refactoring before push. Please look into the issue with Gem file"
0,It pass in Travis CI.
0,Changes a lot. It satisfies the requirements right now.
0,The team added many test cases and the coverage increased.
0,Its coverage satisfies the requirement 90% but not 100%
1,It is good. It introduces the code of the model with detail. But I think it need more introduction on the test.
0,It doesn't need to be deployed.
0,"Code seems to be fairly well written overall. It's organization could be improved, however. For example, the test ""computes and returns scores"" contains many assertions, and uses several variables defined outside the method which are not clearly related to that specific test."
0,The Travis CI build passes.
0,"The tests added slightly increase the overall project coverage, dramatically improve the coverage of the class under test, and all pass."
0,"It is not clear that these tests coverall many edge cases or invalid inputs. Otherwise, however, the tests seem extensive, and this is reinforced with the high code coverage achieved."
0,"The documentation is well-written, having a clear, logical path and detailed explanations."
0,"Tests pass, improve coverage, and seem ready to be merged if deemed extensive enough."
0,The code is observed to be dry and well written / complete . They had issues with model in the first phase which seem to be corrected now
0,A good number of coomits were seen to be done for the 2nd round
0,Yes the build passed and there were no conflicts
0,The coverage is seen to increase and it is shown that 92% coverage was reached by the team . The team did a very good job
0,The test cases cover all the functions to be tested in the model file .
0,The write up was pretty much in detail of what was being tested . The team wrote about finctionality of different functions in the model file and then wrote the corresponding tests
0,The code is seen to be complete and could be deployed
1,"I think there are just a couple ways to DRY out their code, where some of the assignments were done when they could have been done in one before(;each) block before all of the tests. the allow, expect style is well done and the kind of style which makes it easier to see what you are testing. In general this could have potentially been done in a more DRY fashion, which what that really does is make it easier for those in the future to use."
0,"Yes, several new commits were added between submissions."
1,"The build did pass, but there are 80 conflicts with Code Climate. A lot of these issues seem rather trivial and easy to fix, simply being stylistic problems, such as extra spacing or indentation here, or extra line there. These things are so simple to fix I don't think they pose much of a problem."
0,"They did add test cases, as that seems to be the crux of this project. They were able to increase the test coverage to 92% which is pretty impressive and good, such that the Expertiza team will have a good level of assurance that the code that was tested does what it should do and doesn't break other areas of Expertiza. They cover the whole range of what on_the_fly_calc does, especially to receive such a high amount of coverage as a result."
0,"As a testing project, this implementation works very well to nearly exhaustively test the model! Through the video they show, there are a few methods not tested by the spec file, but most of the aspects of the code are, and so I think they did a great job in this regard!"
0,"I think the writeup is very thorough and explains their thought process well. This type of design, where they explain the problems, proposed solutions, and the reasoning as to what led them to the solution is very easy to follow. I like how the were essentially having a conversation with the reviewer and instructors and whoever else may be reading the document."
0,"There are some minor issues with Code Climate but besides that I do think this is ready to be deployed, as their video and results show, they have increased coverage from 0% to 92.74%, which is quite commendable. They achieved their goal and thoroughly tested a model to be integrated into the production server. Seeing as this what such a successful project, perhaps a future team could be made to do a similar project, where they thoroughly test other models or controllers that are in need of such test coverage."
1,There are very less comments in the code. Names can be more specific like make_public is very generic. Like what is made public in the function is unknown. So it can be renamed like make_submission_public. All other names are intuitive.
0,"From my review the code follows good practices, the variables and methods are named according to the style of other Expertiza files. The names are easy to understand and you know what a method is attempting to do by reading the name. I didn't see any obvious repetitions or poor formatting either. The most recent updates seen in githubs compare function show a lot of work went into properly formatting the code for Expertiza. Great work in this area!"
1,"A lot of the code does look well done. I'm not exactly sure how to review the javascript that was written, but for the ruby code it does follow convention. I do notice in app/views/sample_submissions/_general.html.erb that there seems to be a lot of logic contained within the view that could be moved into the controller. In general you want to use the view for very limited logic and just to control how something looks, where the controller decided what is shown. The same is true of the app/views/sample_submissions/_responses.html.erb. I would say the index.html.erb file was done better, but in general try to design the system such that minimal use of logic in the view is achieved. The test code looks pretty good where you set up the situations and assert certain outcomes, or use capybara to run through the view tests."
0,"Overall, I think the code is well written. Only minor thing is view code contains some logic. I don't really know how we could avoid this."
0,The code is well written by following all good design principles.
1,While it was a little hard to go through every line of code (changes made in many files).  I was able to go through most by looking at all of the commits and looking at the code in the documentation.  Everything seems to be pretty well done.  There are not that many comments but the code seems to be readable enough.  Besides adding more comments I think you did a very good job with code/syntax/style.
1,Code that has been added follows ruby style coding. The name of the functions are also intuitive. The authors could have added comments to the code to make it easier to understand.
0,"The code is well written. There are not any redundancies that i can see. The ruby coding conventions are accurately followed. The variable and function names are spot on and the code is reasonable DRY.


However, i believe adding comments would increase the readability of the code and increase the ability of the user to understand."
1,"Based on the commit history from March 18th to April 3rd, the code is written very well.  Methods are commented appropriately for the sample submissions controller and student tasks controller and follow the Ruby and Ruby on Rails syntax.  Also, I am happy to see that during the second round of reviews that you all were able to refactor their code and fix all Code Climate errors.  Great job on that!"
0,"Lots of new commits were made since March 29th.  Most of these commits were either refactoring commits, or small changes to already existing code while the rest were new code added in were towards their sample submissions views and controller, their student tasks views/controller, and their database.  While I didn't review your work for the first round, it sounds like you all got a lot of work done and your final submission deadline was just wrapping up anything you didn't get done from the first submission."
1,"Yes the team did add test cases. I believe the coverage may have decreased by 1%. From what i see in the sample_submissions_controller_spec.rb file, it seems to be mainly the scaffold created result, where there is not much  more coverage as to the functionality they included for the views they added. There are some capybara tests which test the view that is good, but I believe that further testing could have been done on the controller."
0,"Yes. Test cases were added. I would think the coverage increased.


They used capybara to test the views they created. I think it is thorough."
0,This is not a testing project and test cases to check the fun
0,"They added tests cases to test their code. While it seems that it covers things well they never talk about if the test cases pass or what the coverage is. However, I think that could be out of the scope of the project."
1,"The pull request does not state anything about the coverage. But the team has added test cases. They have made use of rspec capybara. The cases considered seem to cover a good scope of the implemented functionality. 


Suggestion: They could have added screenshots of the results of running the tests which shows whether they pass."
1,"New tests were added to test the functionality of sample submissions, but I can't tell if their coverage increased and how it covered the range of this project as their coverage for these tests are not mentioned in their writeup."
0,"Yes , the team has added test cases in this submission. I cannot see the coverall coverage report. This may be due the fact that the build has failed. Thus , i cannot comment if the coverage has increased or no. The test scenarios added are pretty exhaustive and cover most of the scenarios. Maybe more test cases merging the single scenarios can be made. This should cover all the conner cases.


I believe screenshot of Rspec results could have been included in the wiki."
0,Lots of test cases are added in sample_submission_controller_test and rspec is written in sample_submission_spec. These test cases cover most of the feature.
0,The team added several test cases and the test coverage does increase. The writeup does a great job of covering the test cases that were added and the tools used to create those test cases. Capybara was used to check the UI results of actions taken on their system.
0,"Everything works fine on the UI. The guide to UI test this manually is pretty descriptive and detailed. It makes it easy to test. All the functionality proposed by these authors have been implemented and runs without errors. 


Though not required, this team has added tests to make their code full proof which is a good practice."
0,The pull request passes both code climate and Travis CI without any issues. The project seems to do what is required according to the write up (Again I was unable to test this for myself) and the test coverage increases. I think the pull request is ready to be deployed. Great work!
1,"This team has done a great job in implementing the said functionality. However, this code is not ready to be deployed just yet. There are a few conflicts with the base branch. These conflicts should be resolved. There are a few code climate issues that requires fixing.


After making these changes and after the build passes successfully, this code can be deployed.


This can also be used a base and future teams can work on adding features which the author has mentioned in future scope."
0,The build is passing but the branch has conflicts with the base branch. app/assets/javascripts/response.js shows as a conflicting file. There are no code climate issues.
0,"They have really made lots of improvement. Compared with first round review, they abandoned the lengthy before hood I mentioned before and use “let” to create objects their test needs (they didn’t build objects from factory because the factory they need doesn’t exist in factories.rb which is reasonable). Also, I can’t find any repetitive code. Good job! But I’d mention a minor problem, it seems they didn’t make a good use of describe-context-it hierarchic structure. They just used describe-it. It will be more organized and intuitive if they can put some “its” into a context or describe such as “Above a child item with parent” and “Below a child item with parent”"
0,Yes. 5 commits in total in their master branch and the latest is made about one day ago.
0,Yes. Their latest pull request passed in Travis CI and has no conflicts with the base branch.
0,Their project is writing unit test and the coverage did increase 0.8% to 44.745% after pulling.
0,This is a testing project. Their goal is to thoroughly test menu_item.rb model. I think the test covered all the scenarios because I manually run the test and the coverage of menu_item.rb reached 100%.
1,"The write up is well organized and almost covered everything needed. However, as I mentioned in the first round, I think it’s not necessary to introduce expertiza, TDD and unit testing. It’s better to explain more about their project in the introduction section. Also, I’d recommend to include a screenshot about the coverage result they got which will be more intuitive to readers."
1,"Almost ready to be put into use. Code is concise, well commented and covered all scenarios, so the code is good to go. But the write up on wiki I think still has room to improve as I mentioned above."
0,"Code seems to be written fairly well, but suffers from potential DRY problems. That is, before every test, the methods under test are run numerous times, but the results from only a few are typically used. This also increases the cognitive load in reading the code, as you are forced to jump back and forth from the test you are looking at to the top repeatedly."
0,"Tests pass, coverage increases."
0,"Tests appear to be extensive, covering a wide range of scenarios, despite the redundancy in test execution."
0,"Write-up is clear, easy to follow, and detailed."
0,"The code should be ready to deploy. A slight refactoring would, however, reduce execution time (due to methods being called but results ignored) and make the code easier to follow."
0,There was one update but it was just removing autogenerated comments from each test.
0,The build passed on Travis CI. The code climate was showing 73 issues but that wouldn't cause any issues in implementation.
0,Yes their task was to implement tests on an existing controller.  It increased coverage by .8%.
1,The tests cover a large majority of possible cases.  It doesn't seem to do a great job covering edge cases (like invalid numbers or nils) but it could be that those inputs are never possible.
0,It was a very thorough write-up.  There was detailed information about testing and what they intended to accomplish with testing.  They also showed the tests passing to make it easier to verify that the test cases were working.
0,It is a low risk deployment because it only adds test cases.  The tests couldn't break the system and did a good job adding test coverage that wasn't there before.
1,"The code seems to be very well written.  I like how you moved more code to the top of the file to avoid having to repeat code over and over for each test case (like you did in the first round).  Overall, very good job with the code.  My only complaint is that you create these test1, test2, etc objects.  If they were only used in a single test case it would be fine to name them that since I could discern what they were used for.  However, since they are used in multiple test cases it is hard for me to determine why you use test1 rather than test4 (just an example).  Naming them with a more descriptive name could help with this."
1,"I personally don't think this question is that fair.  If it was already perfect I don't think it should matter if you added many or none at all.  However,  since your project did have a few problems you did need to fix stuff.  Only 1 commit was added.  While it seemed to have fix most things, better programming practices would have probably split that 1 commit into several smaller commits."
0,Everything seems to be working with the pull request.  The build seems pass in Travis Cl.
1,"The test cases added seems like they should help with coverage, however I cannot tell for sure.  No where in the documentation or the video showing that it work does it tell what the new coverage is.  This makes me worry that they did not hit 90%.  However, there are definitely a lot of test cases that seem like they should help with increasing coverage."
0,"Kind of the same problem as before.  While the tests pass and seem to be working, I cannot tell what the actual coverage is (the goal of the project).  Therefore I cannot tell if the actual goal is met."
1,"I feel that the write up is very well done.  The pictures and video really help show that things work.  I also really liked how you set up your problem statement and made us clear of the goal.  Overall, I would really only add the coverage amount (and prove it with a picture or video)."
0,Yes!!! Even if coverage is not 90% it is still better than before and everything seems to be working.  Should not hurt at all to add to production.
1,"The code is well written but I feel that the code could have been dried up a lot more.


The assignments such as  the ones @test7, @test8, @tes9 have been used multiple times and can be moved in a before each clause, this would significantly dry up the code."
0,"Yes, the team has committed changes after round1 . They have significantly increased the number of test cases from round1"
0,Pull request link is not uploaded and I am not able to view the coverage or if the build passes in Travis CI or not.
0,"The team has certainly added test cases and their test cases work, but nothing  can be commented about the coverage of the tests. They have not mentioned in the document as well on how much coverage they have achieved and the pull request is not visible."
0,The test seems to cover all the scenarios and from the video link uploaded it can be easily seen that all the test cases pass.
1,The write up is really well written and they have explained the functions and scenarios well using pictures in their wiki link. It is really helpful for a reviewer to understand the working of the functions and how the authors have approached to writing test cases for the function and the authors seem to have done a good job in explaining these things.
0,"As the pull request is not visible I cannot comment on the the coverage of these test cases, moreover their are a few places in the code that could be dried up, otherwise the test cases seem to pass and it seems that they cover a lot of scenarios. All in all, by doing a coverage test if the coverage is above 90% then I feel that the code could be deployed on the production server."
0,"The code written, at the first glance. Proper ruby standards have been followed in general. But the code seems to have several issues as seen in the code climate check in pull request, 63 issues at the time of this comment."
0,Commit was made after the last round. But there are very few commits overall. The authors need to be more frequent with the commits to prevent loss of work.
0,The build passed TravisCI but did not pass the code climate check. The authors need to fix these issues to make up to the coding standards of the repository.
0,The code coverage has increased by 0.8% as seen in the pull request (coveralls). This is a good indicator that the tests are actually helpful in these cases.
0,The authors have provided a screencast of their project. The tests seem to pass in the screencast. The tests are extensively written and seem to cover all scenarios.
0,The authors have done a good job with the write-up in expertiza wiki. All the relevant sections are present in the writeup. Also the sections are detailed in explaining the tests.
1,"I think the code is ready to be deployed, only after the users make the code climate fixes. The code increases the test coverage and should be a vital addition to expertiza."
0,The spec file has been written well and overall seems to follow good coding practices. All the tests are short and the name of the test indicates its functionality
0,"A new commit was made after the deadline. Also, very little code has been added in the new commits. A single line of code has been changed to fix a typo in the name of the test. Rest of the additions is in the comments"
1,Travis CI build has passed and the code coverage has increased.There are some issues to be fixed as denoted by codeclimate. There are no conflicts with the master branch.
0,The project is based on writing tests for the menu controller. The coverage has increased by 0.8%
0,"I was unable to verify the UI but the video and the screen captures show the working efficiently.


More tests can be added. For eg- the first test only checks if a name for the menu is present. However, I feel checks should be made for the naming convention. This will help maintain uniformity throughout all projects.The team has checked if a menu name is nil. Similarly, tests could be written to see if an invalid name is entered. Also the test case 7.2 is just a slight extension of test case 7.1. I wonder if an additional test is required for the same."
0,"The writeup is very detailed and easy to understand. The use of screen captures from the UI and the Git-hub are useful. Also, the team has added screen captures to show the code coverage and also that all tests have passed.I mentioned in my last review, some of the information about Unit Testing and Test Driven Development is just a background to the project, however it will be useful for new users who wish to work on the project."
0,"I think the test cases are not exhaustive. With the addition of a few more test cases, this can be deployed onto the production server."
1,"The code is very well written overall. However, I noticed that you have named your test menu item variables as ""test1, test2..."". This is slightly misleading as the name ""test1"" seems to imply that this object represents a test, rather than a menu item. Consider changing this before merging with the original repo."
0,The team has worked on changes after the first round.
0,"The travis build passed and there's no conflict with the base branch. However, there are some code climate issues that need to be resolved."
0,Coverage increased by 0.8%
1,The test cases are thorough and cover all relevant scenarios.
0,The write-up is very well written covering every aspect of the project. The explanation is very clear. Great work!
1,"The code is almost ready to be deployed onto the production server. My only concern is the naming of menu item objects. Other than that, good work!"
0,"Code for menu_item_spec.rb looks good and it follows Ruby syntax rules.  There is one suggestion I would recommend however.  For instance, while it's fine creating your objects the way you have them, I would recommend using stubs for testing and build your objects from the factories given to you in the factories folder in the spec folder.  Regardless, good job on coding!"
0,One new commit was made during the 2nd round.  All it was was just cleaning up comments in the spec file.
0,Latest build passes in Travis CI.
0,"Based on the YouTube video provided, all tests cases pass for the menu_item_spec file.  However, no mention of where their coverage is at is mentioned in the writeup or the YouTube video, so I can't tell if their coverage has increased or if they managed to reach the achievement mark for this project.  For now, I am assuming that everything works properly and that they achieved the maximum amount of coverage they are told to generate."
0,Tests cover all the scenarios based on the methods in menu_item.rb.  Great job ya'll!
0,"The write up seems well written.  It's easy to follow, it provides all the necessary details from what the problem is for this project, what menu items are like between an instructor and student, and what the testing conditions are for each test in the menu_item_spec.rb file.  While I did not review this for the first round, I think improvements have been made accordingly.  Great job!"
1,"With some refactoring and Code Climate fixes, I think this is ready to be deployed onto the production server."
1,"Yes the system works correctly. I followed the control path to make an assignment public to students, and saw that this was correctly done. Then I went to see sample submissions and saw that you can create and view these as well."
0,The code that is written follows ruby conventions. The variables names used are intuitive and are self-explanatory.
0,"the difference in current and previous commits is of comments, other then that there doesnt seem to be any changes in terms of test cases"
0,"Yes, new commits have been added during the second round. The team has been working and updating their code throughout the course of the project."
0,"There were just a few commits since the last round which mostly just included adding comments to the code. Since most of the work was done in the first iteration itself, there wasn't any need for more commits. Good work!"
0,A few commits added on the last day.
0,"yes, they add many comments for different test cases separately."
0,"The current iteration of tests achieve 100% coverage on the file, so the coverage increased and the team did add more test cases. These tests look great, and all of them pass."
0,The project was completely related to testing so there are test cases added.
1,"The team has added test cases which exhaustively test every aspect of their project. The overall coverage has increased by 0.8%. The code coverage of the test written for the menu item model is 100%, which is commendable. The team has done a great job!"
1,"Coverage increases, tests pass."
0,they didn't add the test cases but they had already achieved 100% coverage last time.
0,"Yes, it covers all the scenarios."
0,All of the test scenarios are covered. The team did an excellent job.
0,Based off what is in the wiki and test file it appears that all scenarios are covered. Again I think that the tests are set up well with the numbering in the test plan to have a directly associated test for each numbered item. After running the code myself I can confirm that it works. Good job!
0,The given test cases has been completed covered and explained well in the wiki and images in that do say 100% coverage was obtained.
0,The test do seem to cover all scenarios and all the edge cases have been taken care of. The team has very meticulously included all the scenarios in their test.
0,"All test cases have been converted as explained in the writeup and the team has implemented this in code as well leading to an increase in test coverage. There is no way of testing them to know if they are failing, but only thing the team could have done additionally is create a screencast to show the testing they did on their system."
0,"Tests cover a variety of scenarios, including edge cases and invalid input."
0,"no, still the same problem i found in 1st round. Test case 7.2 is not complete."
0,An introduction video will be better.
0,"The team gave a clear description on what their model is responsible for. They listed its parameters, described its methods, and included all test cases needed to test the functions of the menu_item model. 


As it was suggested from the submission 1, they added the coverage output that indicates that menu_item.rb is 100% covered."
0,"The write-up is well-written. There a few sections I consider superfluous such as the unit testing and behavior driven development seem to be too long relative to the size of the rest of the wiki. However, these sections do not detract from the quality of the wiki. I think overall the wiki is great, and it has been improved since the original version significantly. Great work!"
0,"Write up has well defined structure overall, the project has been explained well, a well defined explanation of eah module and test case has been given"
0,"The writeup has definitely improved from what it was last time when I reviewed. But, I think they could have elaborated more on what all test cases are considered and how they are implemented. Also, the team could do away with some unnecessary things in the writeup. Overall, I think the wiki page is good but could be improved."
0,"The writeup for this project is well written and has a lot of information that lets the reviewer know what the team is trying to accomplish. They have well formed sections that gives a nice flow to the task at hand. I did not have to go to the project description file to understand what the project was about. This is well in line with the first iteration. They have also included screenshots to show test coverage as a conclusion which is helpful. But as I mentioned previously, avoid using excessive descriptions about things other than the project description and instead consider providing a link to the user in case he want to reads more (For eg: BDD) as it might be redundant information. Overall, well done."
0,"their wiki page is pretty good. if they could add some explanation on their how they make the test plan, the wiki will be much more better. But  that's not a problem, just a personal advice."
0,"Yes, It's good."
0,"The team's RSpec tests are well-written to check all of the functionality of the MenuItem model. Since all tests pass, the model code is ready to be deployed."
0,It looks like this could be merged into the expertiza master branch with at most one or two modifications to make sure it meets teaching staff specifications. I say this only in the sense that the TA's or the Professor may want to modify a few things just to make it fit in with the rest of the project. Overall I think that this is a solid test file and should be merged.
0,"The testing module has been well defined with comments and proper variable names, even though there were certain issues but these were related to space which need minor refactor."
0,I think the team has exhaustively covered all the cases and have followed good coding practices. Their approach seems to be the correct one and I do think the code is ready to be deployed onto the production server.
0,"Code appears to provide solid value, and is easy to understand."
0,"Unit test doesn't need deployment, and their code is very good to be merged into the project."
0,"Yes, it passes in Travis CI."
0,The build does pass. And there are no conflicts that need to be resolved. Great work!
0,There are 63 conflicts most of which are due to space missing.
1,The build has passed Travis CI. The only issues were codeclimate issues which can be overlooked. I don't think there are major conflicts as such that need to be resolved.
0,"The pull request passed the Travis CI build successfully. However, Codeclimate indicates 63 fixes to be implemented. Most of them seem to be spacing and indentation issues. So the team could fix that easily."
0,they passed the Travis CI.
1,"Yes, they committed several times between the two submission dates."
0,Yes the team has added new code for the second round.
1,"Yes, the commits were regular in the 2nd round."
0,Lots of changes were done in the code after first round. But they were all modifications of the previous code. So the changes mentioned in the reviews have been implemented. There are good number of commits.
0,"There are new commits added post the last review, The later commits are mostly related to removing unnecessary changes and  refactoring. Only one major change was involved, which does indicate a good thing"
0,Good amount of work was seen to be done for the 2nd round
1,New code was committed and it was good to see that they have followed up on previous review and made code changes. But I am reducing a point because there were many commits well after the deadline of April 2.
1,Yes there seems to be quite a few commits in the second round. There are regular smaller commits rather than a single big commit which is good.
0,"Yes, there seems to be significant change in the code and new code has also been added which was probably missing in the first round of review. Great work. I would like to still see more comments for better understanding and easy job for reviewers."
1,The pull request does not mention anything about the coverage so I cannot comment on that. Although the team has modified a spec and also added a new spec. The tests seem to cover a significant area of the project.
1,"Few test cases were added to github data controller spec and github datum spec which cover the functionality like retrieve_graphql_data, retrieve_github_url, show method in controller etc. So the test coverage has increased."
0,"The team had added automated tests for a controller and model, which was also mentioned in their test plan document. However, since the build never completed, there is no coverage report from which I can tell if the coverage increased or not. The majority of the logic for this project seems to be in the github_data_controller and github_datum model and these two files were extensively covered using tests."
0,"The project is not deployed so I was not able to verify this for myself, however from what they display on the wiki page, you can see various graphics and it shows Github metrics and how each team member contributed in kind."
0,I could not manually test the app due to some issues with my ova file which even I faced during my submission. Although the screenshots included in the writeup by the team are suggestive of the working functionality of the project.
1,"Yes, the team has done a good job implementing the required functionalities.


From the Github  Data snapshot, it can be seen that summarization of the number of github commits,deletions per user is clearly visible."
1,"From the screenshots provided, it is seen that, data is extracted from the pull request. With the new api, we cna specify what data is required. So the feature is well implemented."
1,"The project is seen to be working . If the team would have deployed or have added a youtube video , the taske would have been easier . Screen shots were seen though"
0,The system seems to work as intended with the Github data being pulled up. However I am not sure how much of it was done after the deadline and hence reducing a point.
0,"They present their design in a concise method and the background as well which is good. They talk about improvements made as well as show the code which is making the improvements which goes a long way to justify the efficacy of changes made. Results have several graphics on each of the metrics saved, which allows a viewer to understand precisely what their solution did. The part that could have been done better is the testing section, as there is just a single line that only says where the tests are kept. I think for this project the team did a lot of great work on the implementation but not a whole lot to test the routes through which the data flows, which is in a lot of ways the most important aspect."
1,"Well the writeup briefly mentions what the project is about and what is the team's approach towards the same.


One suggestion that I would like to give regarding the writeup is that the authors should elaborate a bit more on the Proposed Design and Improvements section."
1,"I found the writeup to be not sufficient.


If a step by step guideline or explanation was written in the wiki page, it would be easier for the reviewer to review.


For example , the Implementation and the testing headers were completely left blank."
0,In the pull request it shows that 17 files were changed. But in the writeup only a portion of the change is mentioned. And the code is not described as well. Detailed steps can be given as to what the code is about and why its written the way it is.Files modified/added section is highly required because 17 files were modified in the pull request.Test cases need to be explained at the end.
1,"The writeup was well written. It clearly explains the problem statement, the previous design, the proposed design, files added/changed and the test cases included. Some screenshots were also provided which helped me in understanding the problem statement properly.Overall, it was written in simple, easy to understand manner and hence I am giving a 5."
1,"Honestly speaking, I had a tough time finding out the specific contribution the team made to the project.


The documentation and steps a reviewer should perform to get to the specific part of the code was not there.


So, apart from the snapshots, it was tough for me to find out the exact changes in the code made by the contributor."
1,"The authors did provide link to their work forked  on to their repository but  a merger(pull request) was not found onto the actual repo . The code / work seems to be complete as such , but not knowing the effects on the complete build of the system it might be difficult to comment about completion / pushing into production server"
0,"The code still has some issues which is evident from the build failure. However, the team has done a great job with the design and test cases to have progressed so far! So I feel this will be a good starting point for a future team to work upon."
1,"The build did not pass and there are a multitude, about 90 issues with Code Climate. Ultimately I think these things need ti be fixed because it is general style guidelines that should be followed."
1,"The Travis CI build could not complete due to an error. No conflicts are found but there are a lot of problems indicated by Code Climate such as instances of identical blocks of code, blocks with high number of lines, etc. The team should follow the guidlines suggested by Code Climate to fix these."
0,I could not find much pull requests. I could only find only 1 active pull requests in the past one month.
1,Travis build failed with deployment error. Code climate has 87 issues to fix. The problem is because of the new gems added.
1,The authors did provide link to their work forked  on to their repository but  a merger(pull request) was not found onto the actual repo
0,"The Travis build did not complete due to errors and hence the status was also not shown. Moreover there were code climate issues as well. However, there were no merge conflicts, hence I am giving a score of 2."
1,The pull request did not pass the Travis CI build and Codeclimate indicates 83 fixes to be implemented. Most of them seem to be indentation errors. So the team could fix that easily. The Travis CI build indicates a failure in building the gem file.
0,It improves a lot. But still something looks not good like 'xcontext' and the spaces don't match well.
0,The code is very well written. The code lacks comments which makes it hard to understand. the authors have made many changes since last review. There are some code climate changes required as seen from the pull request.
0,Since last round many changes has been done. The authors have made all efforts to finish the project in time.
0,The coverage increased. The build passed and no merge conflicts were reflected on the pull request. Some code climate changes are required.
0,Since round 1 review majority of the work is done and the authros have considered all the test cases as mentioned in their wiki. The coverage has increased and there are no conflicts in the pull request.
0,the authors have considered all the tests as they have mentioned in their wiki. I cannot find test cases where the authors missed.
0,The wiki page is very informative. The authors have checked last round reviews and brought necessary changes to the wiki. I still feel they can add more images to make it more informative.
1,"Even though the pull request is not accepted, there are only minor changes required in the code. After those changes the code can be deployed to the production server. The build has passed and there is no merge conflicts."
1,"The team has followed good coding practices and they have made sure that the code is DRY. The authors have made necessary changes after the last review. The only downside is a lack of comments which makes it difficult to understand what a particular snippet of code does. Otherwise, there aren't much changes required."
0,"Yes, majority commits were done during the second round. The team has made sure that they include every possible test case in their automated tests."
1,The build passed in Travis CI. There are no conflicts at all. The coverage has also increased. There are a few minor codeclimate issues but these can be overlooked.
0,The team has added new test cases to their code and the coverage has increased. I think the added tests cover the range of the project. The team has included every test case they have mentioned in their wiki.
0,"The authors have included tests which, I think, cover all the scenarios. They have meticulously considered every possible test case and everything works as intended."
0,"They have improved their writeup a lot since I last reviewed their work. They have made sure that they addressed every problem mentioned in the last review. Every aspect of the project is well described. Also, the team has made things easier by adding a screen cast."
0,"I think the team has made sure that they cover all the test cases exhaustively. The code follows good practices and I do think, with some minor refactoring, the code will be ready to be deployed onto the production server."
0,"Great work on your code!  You labeled your variables appropriately, the Ruby syntax is on point and you cleaned up your file by adding duplicate code to before each lines.  The only thing I would suggest is adding in comments for your tests.  While I know it's listed in your wiki page, it's a good habit to document your code so that a code reviewer understands your work if they do not have access to your wiki.  Regardless, I think you all did a great job unit testing on_the_fly!"
0,"Since March 28th, there are a significant number of commits made on the day of the due date.  Good job having each member contribute to these new commits rather than one person committing all the changes!  New code was added, mainly new tests and stubs in order to increase their code coverage."
0,.No conflicts need to be resolved for this project.  Build passes Travis CI based on last commit.
0,"Based on some of their new commits listing where their code coverage was currently at, it shows that when they added in new tests, they also increased their coverage.  Adding in tests like computing the average and ranges hash increased their coverage to approximately 75%.  Later on, new tests such as computing the total score of an assignment given all questionnaires and when a current assignment varies rubrics by round and number of assessments by non-zero raises it up even more to approximately 92%.  While I don't know the exact code coverage for each new test added, these examples show that from the first review, they have continued to increase their code coverage up to the achievement mark of 90%.  Maybe in the future, as a suggestion, either tell in your commit message where your code coverage is currently at or mention it in your commit header as what you did for a few."
1,"Based on the YouTube video, almost all of the tests cover all the scenarios for the on_the_fly model class.  There are a few methods in on_the_fly that were not tested and were not mentioned in the wiki as to why these were not tested.  Regardless, there were enough tests that covered an ""on the fly"" scenario."
0,"Writeup looks fantastic!  I love the way you broke down your sections from the introduction, to what ""on the fly"" means in Expertiza, the environment you used, and the details of your test functions.  I even liked the cases for consideration for each test as well.  That's a good way to show not only reviewers, but future teams tests that you they could work on that you may have either didn't have time to do or didn't know how to approach.  Great job on your writeup!"
0,"This code is well ready to be deployed onto the production server.  As mentioned above, while it doesn't test everything on_the_fly has, it tests more on the important methods on_the_fly uses often for Expertiza.  If future teams wants to expand upon this, they wouldn't have much work to do to increase the coverage, but they could implement your cases of considerations mentioned in your writeup."
0,"Most of my complaints in the previous review dealt with the wiki. The code is dry and well written! However, if you check code climate you can see that some of the code does not follow the ruby style guide (inconsistent tabbing, inconsistent spacing, etc.) I appreciate the use of context statements to help organize the code!


 


Great job!"
0,"Yes, there were a significant amount of commits for the second round.


 


Again, good work!"
0,"Yes, the build passed. The only errors with code climate, which was addressed in the first rating."
0,"Yes, the authors provided a youtube video showing the code running and that the coverage increased to 92%. The newly added tests are not toy tests and do cover the range of the project."
0,"Yes, based on the test plan in the wiki, there are tests that cover all of the scenarios, and all of the code in the tests is well explained in the wiki."
0,"The write-up has improved significantly. If I remember correctly the wiki in the last review was missing a test plan section entirely. However, it is been written well, and I understand the code much better after reading the code."
0,"Aside from fixing some of the style issues, I do believe that it is ready to be deployed onto the expertiza server. Perhaps there are some changes that need to be made in order to satisfy a TA or the professor, but these wouldn't be something I could determine since I imagine they would be stylistic or code formatting preferences. Overall though I think it was solid."
0,"Code is well written. However some of the fixtures used (question1, questionnaire1) don't quite give a description of what the data holds."
0,New commits were added in the second round
0,Build was successful on Travis CI
0,The team did add additional test cases to increase the coverage to 92%..
0,The testcases have brought the code coverage to 92%. However all scenarios haven't been covered. Score_assignment function and participant_score are completely untested
0,Write up was explanatory and made it easy to understand the test cases. Extensively written and a lot of extra background information was also there indicating effort and supplying context for the reviewer.
0,2 more functions need to be covered for this test case to cover 99% of the code. Would have preferred if the team mentioned in the write up the difficulty they faced in testing these two methods.
0,"The code written is quite extensive. 


The code follows good coding practices.


Yes, the authors have improved the code."
0,"Yes, the code commits were quite regular."
0,I could not find the pull request.
0,"Yes, the team added test cases that were required.


The test coverage also increased.


The test written covered each of the methods.


 #compute_total_score,#compute_review_hash,'scores varying rubrics and returns review scores"
0,"Yes, the features work as expected, except for the features which is dependent on the :


context 'when current assignment does not vary rubrics by round'"
0,"The write up is pretty extensive.


Its is intuitive and it easy for a new reviewer to find out exactly what to review and give the review.


So, it saves valuable time."
0,"Yes, the code that is written is extremely well written. But I found that one context ,


context 'when current assignment does not vary rubrics by round' was not implemented."
1,"The overall structure of the author's code is good. The variables have been properly named and the ruby convention has been correctly followed. However, in my last review, I had identified a part which is repeated in multiple controller methods and had suggested to make a separate function for it for DRYing out the code. But I don't see this implemented. The author has used the same functions with a little repitition and thus there is scope for making the code DRY.


Addition of comments would have increased the readability of the code."
0,"Yes , the team has made commits to the repo in the second round. There has been considerable amount of commits in the second round but not in large amounts."
1,"No, the Travis build as well as the code climate checks have failed. There exists conflicts that needs to be resolved. The files with the conflicts are. 


Conflicting files


app/assets/stylesheets/application.scss"
1,"Yes, the team has added a number of test cases compared to their last submission. However, I cannot see the coverall coverage report on their pull request. This may occur as their build has failed and therefore no coverage is reported. So I am unable to review this part. I tried to clone the repo and run the tests manually. However, the specs do not run completely as some of the tests fail.


I would suggest to add tests to check if the instructor is able to edit the comments."
0,Tested the deployed version of expertiza according to the instructions given by the authors. All the said functionality is correctly implemented and everything works. The code does not break.
1,"The writeup is well written. The team has clearly mentioned the problem statement and explained their plan of action. The files altered have been mentioned which is neat and an improvement from the last submission which did not mention all the files altered. The test cases have been clearly explained along with the instructions for testing the UI which has been explained in detail. However, I feel the team should have included a brief explanation of the code they altered, rather than a high level overview of the implementation. They could have given a gist of their code.


Also , I believe adding a few lines about AJAX would have been beneficial for someone unfamiliar with it. This would have increased the understanding of the reader.


Another improvement in the wiki could be made by including the screenshots of the results of the new specs that they have written. It helps the reviewer understand and judge the implementation ."
1,"The code is somewhat ready to be deployed. The build on this has failed and there are a few conflicts with the javascript files that needs fixing. The code climate checks also suggests 73 issues which needs fixing. I believe these changes could be made before deployment. The team has done a great job so it would be futile to scrap their effort and build from scratch. Rather , this can be used as a base and its functionality can be improved. 


The code can be made a bit more DRY and logic from the views can be moved to the controller. Also issues with the json, and scss files should be fixed before it could be deployed."
0,Don't see a pull request
0,Very thorough documentation.
0,The test variables are not very descriptive about the item under test.  The tests themselves do a good job describing what each test is doing.
0,"There weren't many problems with the code with respect to variable names, function sizes, etc. The only problem that was mentioned was lack of comments. After observing the code, I see that the team has added a few more comments to elaborate the what the code does and have also changed some method names to make them more suggestive of their functionality."
0,"Names of variables and methods follow good practices and are also easy to grasp the meaning of. I don't see any repetitive code that could have been refactored into separate methods, and the comments are not over or under used. Very good job on coding style! The only small quips are that quite a few lines in the student_task view are too long, they can be broken up into two separate lines to make it easier to read."
0,No problems in the first round.
0,The code is well written and comment shave been added for easy understanding of the code.
0,"These guys have followed good rails practices. Their code is easy to understand and very well spread out with helper methods added wherever needed. They have followed proper naming conventions with each function name clearly defining the functionality. Having said that, I think the code needs ti be refactored in some places."
0,The code was well written with proper naming conventions and modular approach was followed. I can see that more comments have been included now in the controllers and models following the feedback from the first review making it much more readable. Good job!
0,Yes the team has added tests for the second round. The pull requests show that the coverage has increased by 0.2%.
0,"Yes, they added several rspec testcases for the new functionality."
0,"The team added test cases and the coverage did increase, as seen in the pull request: Coverage increased (+0.2%) to 44.07%. The newly added test cases cover the vast majority of the range of this project. The -1 is for the tests file, lines 46,47, 56, and 57. These tests seem to cover the same thing? The context for both is the same, but you expect different results? Perhaps I am just confused on what the tests are attempting to do."
0,"Yes, many new test cases have been added in student_task_controller_spec.rb."
1,"The team has added test cases. I couldn't find their pull request the last time I reviewed their project so it is hard to compare. But overall, the coverage has increased and the newly added test cases definitely seem to cover the range of this project."
0,Extensive testing was performed on student_task_controller_spec and also detailed instructions for manual testing were given. All the tests provided cover the range of the project testing all possible scenarios and the coverage increased from 44% to 44.07%
0,The app was not deployed so could not manually test the UI. Although the team has included screenshots of the UI which verifies whatever the team has achieved.
0,It works perfectly. I see a big beautiful list of past-due assignments.
0,"Pagination works, past due tasks are applied the correct colors and show up separate from current tasks. No errors came up when manually testing the feature. Seems to be all working as intended, great job."
0,The functionality which was supposed to work is working correctly.
0,"Yes, the features work as intended."
0,The UI works fine with every functionality working as intended.
0,"Everything that is given in the requirements work as expected and also the team has gone an extra mile and implemented some extra features such as adding pagination, improving the layout and refactoring the student_task_controller. Great job!"
0,"The write is well written. There were not many issues with the writeup for the first round. The authors have added a few topics to the writeup which depict the new work that has been done on the project. So, overall the writeup looks good."
0,"I understand exactly what the project is supposed to do from a documentation perspective.


 


From an English perspective, it's a bit wonky in a few places, like these really short sentences here: ""Presently, the required actions list does not show entries for review tasks. That is, the list only displays tasks that have yet to be started. Therefore, once an assignment has been submitted, additional required actions such as reviews do not appear. In order to solve this problem, a few lines of code were added to student_task_controller.rb."" 


 


They clearly want to be combined into one or two sentences: ""Presently, the required actions list doesn't show entries for review tasks, instead displaying only tasks that have yet to be started, so, once an assignment has been submitted, additional required actions, such as reviews, do not appear, so a few lines of code were added to student_task_controller.rb""


Flows a lot better and doesn't break single t"
1,"The write up is well done, and easy to read. The sections are not overly written or verbose, but also are not lacking information. Each section covers just that topics information and doesn't spill over into related areas. There are two issues that could be easily solved. There isn't any information on how to manually test, but it is also rather obvious how to. A very short sentence or two on how to do so would still be appreciated. The second area is discussing any design patterns used in the project, where they are used, and why you chose those patterns."
0,"Second round improvements done based on suggestions:


- Test plan has been added


- List of files modified & new files created is added


- Code snippets have been added"
0,The write-up is well written. The authors should include code snippets with comments of the related files for better understanding of the code.
0,"The team has improved their wiki page a lot since the last review. The wiki page is very well written, covering every aspect of the project exhaustively. Things such as 'Test Plan', which were not covered in the previous writeup are now very nicely described. The team has done a very good job of explaining with the help of screenshots wherever required. They have done a great job this time around!"
1,Again could not manually verify the app because it was not deployed. Although the way the document describes the project it looks promising. The future teams can surely use this as a starting place to work on. I think code will be ready to be deployed onto the production server only when all the issues with the code mentioned by Code Climate has been satisfied but the team has done a good job overall for future teams to continue with the project.
0,"Go for it. Merge it!


 


It would really improve Expertiza to have this functionality in it."
1,"It seems the code works as intended, doesn't conflict with other tasks (that I know of) and passes Travis CI. Test coverage is also minorly improved so test cases are well written. However, Code climate does report a few errors (18 currently) that can be very easily fixed. It would only take a few minutes to resolve them and then the merge should be simple."
0,I think project should be deployed to production server only after the existing code climate issues are fixed.
0,"Yes, the code is ready to be deployed on the production server as i couldn't find any error or bug in the functionality which they have implemented."
0,"I think their approach is spot on. I think with some refactoring, the code can be made deploy ready."
0,"The team has not only implemented what was asked of them, but also gone ahead and implemented a few extra features; the build has passed with a marginal increase in coverage and there's also a writeup documenting all the changes. The only small drawback is code climate issues and if they're removed I think this code can be merged with production code."
1,"Yes the build passed. Code climate mentions few issues towards the code like it has found similar blocks of code in various locations, a method has a high cognitive complexity and also few blocks have high number of lines. Code climate also suggested the solutions for these issues so the future teams should use these suggested ideas to improve the code."
0,I'm also not sure why this one isn't a checkbox. It does.
0,Build passed and no conflicts are seen
0,"Yes, the build passes in Travis CI. It would have been better if they had submitted the link to pull request in the second round, or at least added the link to pull request in the wiki page."
0,"The build is passing the Travis CI. There are 20 conflicts which the team must resolve. These are related to refactoring, spacing and method length which can be easily addressed."
0,"The build has passed in Travis CI. There are no major conflicts as such, but there is some redundant code and refactoring is needed. There are a few codeclimate issues that need to be taken care of."
0,"After checking the pull request, I can see that the Travis CI build has passed. Moreover, there are no merge conflicts. However, they haven't fixed the code climate issues and hence I am reducing a point."
0,"It's generally decently well written. There's not much in the way of comments (but there really shouldn't be, since it's readable without them and comments are a code smell anyway)"
0,Yes there were a few more additions to the code for the second round.
0,Yes. I'm not sure why this one isn't a checkbox.
0,Several commits made after the first review period. Commits also made by a variety of team members. Good work on committing with small incremental changes rather than large changes. I don't have any real ideas for improvement in this section.
0,"Yes, there have been recent commits for the 2nd round."
0,"Yes, new commits were added during the second round. These commits have taken care of the functionalities missing during the last review. Added automated tests which were missing in the last submission. They have done a great job!"
1,I can see that many code commits have been performed in the time after the first review and many of the changes recommended during the peer review have been implemented!
0,Yes the team has added test cases which has increased the coverage. The test cover only 54% of the controller. Around 7% of the project coverage is achieved.
0,"They talk about the project purpose and design in quite a bit of detail but have not as of yet outlined the testing plan. I would urge them to consider how they will test the updates and various improvements they are planning on making. I don't think they are missing much besides that, but perhaps they should put a quick numerical or bulleted outline above the design section that quickly lists all of the changes to be made that they go into detail about later. As a reader, it was sort of difficult to read everything when it was so crammed together. Though, as a counter point they did have nice use of headers to distinguish different parts. I still think a slightly better and more readable organization can be realized."
0,The design wiki is completed. A lot of related pictures are shown there which introduces what they want to do very well.
1,"The authors have not included a testing plan in the document. The major focus of the project is on making a lot of changes to the UI. So, the authors could have mentioned about adding certain tests that will verify whether the changes that have been made to the UI are correctly working or not."
0,"This is one of the better developed layouts for the graders.


The details were very well implemented and explained."
1,"The document starts with two lines of explanation on what expertiza is about and then followed by existing review report shown for the users. Mockups are shown that helps to understand more on the problem. Problem statement is shown that explains what exactly the project is about in a crisp way. Review report page is then explained with all possible screenshot with the proposed changes for the screens.


Testplan is not mentioned anywhere in the document. Please add test plan that Adding bulleted point wherever necessary could have improved the readability of the content."
1,"The design doc is almost complete. It includes most of the relevant subsections. The problem statement has been clearly explained with the help of images. The design which the team proposes to solve this issue has also been explained thoroughly. However, the test plan section is missing . They haven't mentioned anything about testing their proposed design.


Also this team has mentioned the changes that they need to make in detail but have not mentioned the files that needs to be changed. This would make it easier for the reader to gauge these changes and see if they are accurate or not.


Thus, I would suggest to add a test plan explaining in detail the proposed testing methodology and include the files to be changed with a brief explanation of changes in each file."
1,"The design document is very well written. The problem statement and suggested solutions were described in detail. In addition, screenshots of the issues were put in place, which helped provide context and visualize the problem. However, a test plan will need to be added, and it would have been good to include a few mock-ups of proposed changes. Overall, this is a great wiki."
1,Very thorough with the description of the purpose and design. The only thing missing is any plans for testing.
1,"The design doc is very well written and is easy to follow. The authors have very well elaborated what the project is about and what is expected of it. The only thing missing here is a test plan. Apart from that, the authors have done a flawless job."
0,"The authors have done a great job explaining the intent of the project. The screenshots and descriptions are very helpful. The only improvement I can suggest is to segregate the sections properly. At the moment, the ""present scenario"" and ""proposed implementation"" are mixed up. The authors need to separate these into different sections.


Secondly, the proposed implementation should also contain details of the application files (views/models etc) that needs changing.


Third, the authors need to add a ""Test Plan"" section and describe the same."
0,"The design document provides in depth details about the current issues and things to be implemented which is good. They make use of images to good effect. The only issue I see is that they are missing a few key sessions. Consider thinking forward and adding test plans, as well as setting up a git fork that you'll be working on and adding it as necessary external links."
0,"I really like how y'all included a lot of information about this project.  While the information was great I do wish you had a stronger introduction.  It is confusing about what is new (what y'all are going to do) for this project.  Also, nothing is included about tests."
1,The Design document does incorporate all of the functionality they are supposed to implement as per the requirements.
0,"Yes, the design incorporates all of the functionality required."
1,"After checking the specification provided for the project, it can be observed that the authors' proposed design has incorporated all of the required functionality and does not appear to have missed any part."
0,"Yes, the doc incorporates all the functionality required.


They have tried to implement all the functionalities to their best"
1,"Looks like the project has lot of changes to be made in the system and the team has carefully noted them and included in the design document. Team has worked really hard in making sure not to miss out any details. Good work.


In review report, right from adding metrics to the review report, adding background color to the sorted table, adding colors to the reviewers the team has taken time to explain the details with screenshots.


In the Review summary page, the header changes, ui changes to the question, checkbox questions are all explained well with appropriate screenshots."
1,"The design doc incorporates all the functionalities that are required to be implemented for this project. It explains the role of each functionality and explains the plan of action for implementation.


Just one suggestion , the project requirement states that in the review report , the course name and the student name must be shown as correctly it does not display that. This part has not been clearly stated in the doc but rather implied. It would be better if this is also stated as a goal and implementation steps are shown for it in the next submission."
1,The design plan completely covers all of the functionality required in the problem description.
1,"Yes, the design doc covers every aspect of the project. The team has provided a highly detailed view of what the project is and what should be expected of it."
1,Yes. The authors have captured all the functionality mentioned in the project requirements. They have also done a good job explaining the same in their documentation. They could improve this by separating their documentation into mode logical sections than it is now.
1,"As far the functionality goes, the design doc covers it and it seems to include all details no matter how small. I couldn't find anything that is missing based on the requirement spec. So, well done!"
1,Yes! Everything seems to be included.  I like how you included screenshots just like in the spec of the projects.  Helps convey info better!
1,"I like how you explain the reasoning behind fixes as you describe the proposed implemented solutions. It seems that you all have really divided up the tweaks and improvements well, that they seem to be quite modular and all small chunks that are quite manageable, so good job! Overall, i still think it may seem a bit too cluttered and maybe just that small summary of all of the improvements before the design section could help out."
0,The wiki introduces the functionality very well. With pictures I can understand the work they want to do. But the wiki only show what they will do but not how to do it. The introduction of how should be a little more detailed.
1,"The explanations for the changes proposed are good and makes the reviewer understand what needs to be done but I feel the explanations that are provided do not answer the question ""how it is going to be achieved?"". So I feel there can be certain additions to the explanations that describe how the proposed changes will be implemented.


Suggestion: Mention the files that will need changes and what kind of changes so that the person reading the document can understand what changes on code level have been proposed."
1,"Their explanations are extremely lucid an intuitive.


Each of the sub modules are well explained and it is very intuitive for even a new person who does not know the application to understand."
1,"All the explanations are easy to understand and follow. The changes mentioned could be understood by anyone who doesn't have any prior knowledge on the system. Good work team. 


The most important part is that they have explained everything in detail with all the necessary supporting examples. 


The changes made in the Review Summary Page like changes in Header, where the team is trying to figure out fixing whitespace is not clear to me. This could have been explained well."
1,"The author has proposed some pretty concrete changes in the this doc. All these changes address the requirements as stated in the project problem statement. The idea of color coding in the review report is great and would make the job of the instructor easier. The idea of propagating the change in background color after sorting is great. This is not explicitly mentioned in the problem but rather have been spun up by the team to add convenience. This is really good.


However , I would suggest that , instead of just stating your plan of action , the team should have given a brief explanation of the implementation of these proposed ideas for the reviewer to judge. Including the files required to be edited would also be great and increase the understanding of the implementation that the team has in mind.


Adding a brief explanation of the implementation and including a list of files in which the proposed changes have been made would be really helpful for the reviewers."
0,"The explanations of the changes are excellent. On top of being documented with a problem statement (in those where its necessary) and picture, the specific improvements for the changes are provided as well. I would say the only issue is that some of the suggested changes are in bulleted points, and those lack some of the explanation that other changes have. I would suggest splitting all of the suggested changes into bullet points to increase readability, but to keep the level of detail (or add in cases where needed like in the Checkbox questions section)."
1,All of the changes were well explained.  More details about exactly what needs to change will probably be added as they get into the code more.
1,The changes that the authors have proposed are easy to understand. The explanation provided is in- depth and well written.
0,"The explanations provided for each of the proposed features are well written. The authors have also provided screenshots of the functionality that they intend to implement, which is an added plus point."
1,The document covers the changes that the team will be making and seems to know how they'll be tackling them. It's not hard to follow and I can understand it clearly. The only thing I felt inadequate was that there's no mention about the potential files and/or functions they would have to change to implement the requirements. Including these give a feel that the team has been thorough and have a solid foundation to work on.
1,Explanation of each change is very good and detail - I really like the screenshots.  I do think you need a better introduction explaining things.  Just go into a little more detail about what expertiza is and what you're trying to do.
1,"On the add metrics chart section, I think it would be helpful if you would at least show a mock-up to illustrate the type of graph you expect you will produce. That way as a reader, we can understand the certain contribution and how helpful this will end up being. Other than that I think the design looks well constructed. I would perhaps be specific in which files you plan on editing to perhaps get a better look at the specifics, so we understand where you will have to be careful and to ensure you have thought the design through well enough."
1,The wiki doesn't introduce how to achieve all the functionality in detail. But some of them are good.
1,"As I mentioned earlier, for all the proposed changes the authors have not mentioned what files will need modification and what files may be added so I cannot make a comment about the problems mentioned in the question."
1,"I did not find a section where the classes, models, controllers or views that would be impacted were listed.


They could have listed it in a separate section so that they could have been visible properly"
1,"What the team has mentioned is sufficient.The introduction is well framed. I feel that the approach can be explained in greater detail. The team has elaborated on one part of the design that is score formulas but haven't explained about how they will address the other design issues. For eg you can elaborate on the design steps:-





Remove the ability to see peer reviews before self reviews-Does this mean that the student won't be graded till he submits a self review or he just won't be able to view it.


Create/find a function to link peer and self review scores - Which controller will be responsible for this? Which files will be modified or created for implementing this function.





Also the step in the design approach ""Implement function in a method that will be used when a self review is submitted"" is rather vague. The terms function and method are used ambiguously. I would suggest elaborati"
0,More explanations could have been provided for the images included as it is hard to follow what exactly is to be implied from these images.
1,"The authors have covered all the problems mentioned in the problem statement and have proposed a solution. However, they have only stated bullet points or goals that they intend to implement but they have not specified the implementation of their plan of action. They haven't explained how they intend to implement this.  For example - In the document , the authors have said, they need to find or include a function to merge the peer review and self scores in some way. They haven't specified which controller this method would belong to and what exact functionality they need to implement. 


Also , the test plan provided by this team seems to cover all the cases. However , they have just added bullet points. I think they should provide a brief explanation of the test scenarios which would make it easier for the reviewers to understand snd help them analyze whether more scenarios can be thought of. This would improve the test plan of this team.


The authors have provided 4 possible"
1,"The team has done an excellent job explaining both the scope of their project, as well as the steps they plan on taking to completing their project.  One area that could use a little improvement is the ""Testing"" portion.  While the team has given some excellent scenarios to test, I feel as though there might be some cases that they are missing.  For instance, the team is testing to make sure that ""Peer reviewers cannot be viewed before a self review is completed"".  After testing this though, they do not test to make sure that a peer reviews can be viewed after a self review has been completed.  I would also suggest adding some more explanation on how they plan on testing the project.  Other then that though, great job!"
1,"The design has not been discussed in much detail. So it is a bit difficult to make a comment on the aspects specified in the question.


Suggestion: Try to explain the design using aspects similar to those mentioned in this question so that the reviewer will be able to help you with some suggestions if he feels there might be some error in your approach."
1,"This question is difficult to review as the authors have not explained their planned approach but rather have stated their goals. However, based on the goals , I can comment that the function they are to implement seems a little complex. So here a few points to keep in mind while implementing.


1) Follow the DRY principle. If the code is getting repeated at any point, extract it into separate functions.


2) Use descriptive variable names which makes it easier to keep a track of the functionality implemented by the function.


3) Use appropriate design patterns to write reliable code.


 


Also while testing, consider the different possible scenarios and include a detailed test plan for future submissions."
1,"While the team does a great job explaining the problem statement, and going over different strategies for approaching their problem, they have not included any kind of UML or technical write up that describes what files they plan on changing, and what methods they will need to add/change.  I do not believe this is a huge issue though at this stage in the project.  It seems that after just a week into the project, the team has progressed nicely towards their goal.  They seem to have a good grasp on what they need to do and how they want to approach their project.  I would suggest moving forwards into the coding portion of the project, that the team take some time to really lay out a technical design document such as a UML.  I would also suggest the creation of a wireframe.  From personal experience, while it is tedious in the short term, creating a wireframe and UML make the coding portion of a project 100 times easier.  Furthermore, working through a wireframe and UML hel"
1,"The visual aids that were included depicted the score calculations. These gave a rough idea of how the calculations work.


Suggestion: Apart from the score calculations, you can include screenshots of the view UI where you plan to make changes. Eg. The project wants the user to see the self review scores juxtaposed with peer review scores. So you could provide a screenshot which depicts the current scenario and then explain what changes you intend to make and how it will be different from the current scenario. Screenshots like these will help the reviewer get a visual idea of the changes that the project will provide to the existing application."
1,"Y'all used conditional formatting in Excel, y'all rule. Any document with conditional formatting in it is A-OK in my book.


The numbers don't really make sense in a lot of them (Why is a 2 red and also a .5 red in the third one?) and the third one's formula is cut off.


I'd also click away from the box in the top left when taking the screenshot so that the formula doesn't have a random blue line through it.


But, again, you actually used conditional formatting and I love that so much.


Clean up the little bits of weirdness and you'll definitely get a good re-review from this person on this section."
0,"They have a good explanation as to the problem statement and then go into showing a nice UML diagram which represents the usecases of their solution. I think this is good because UML diagrams are great to model systems and flow of information or data. After they describe the problem statement, they then go into an explanation of each problem and show their planned implementation, or potential mock-ups of what the views could look like to implement the features outlined. They also have the test plan section with several good possible tests they could write to ensure a functional design."
1,"The design doc is complete. I didn't see any important part that is missing. Good job. They did not explicitly include the part for project purpose. However, I could clearly understand it through their implementation plan."
1,"The team has included heat charts of the different functions proposed for the computation of the self reviews. These charts make it easy to understand the merits and de merits of each function. However , they have not included any other diagram to assist their explanation. 


I think it would be better to include a flowchart or an UML to explain the implementation and data flow amongst the controllers models and views.


I also believe that they should include some diagrams to display what the outputs would look like. This is be a simple hand drawn diagram or a screenshot of the views with mock links to display the potential output. This would make the ideas of this team very clear to the reviewers and help them understand better."
0,"Strengths:


- Problem statement is clearly mentioned.


- Implementation details are given.


- Test plan is given with a list of things to be tested.


 


Suggestions:


- A general plan on how each of the given item will be tested can be given (like steps for testing through UI)."
0,The design doc has most of the information in it.
1,"I got almost everything I need to know about this project from their wiki. They got Background and Motivation, Problem Statement, Implementation Plan and Test Plan, etc. Nice write up! But there's a tiny problem: they introduced expertiza in Background and Motivation which I'd recommend to remove because it's unnecessary and I remember the professor said so in class."
1,"The diagrams that the team included showing the table of self to peer score relationships was very helpful in understanding how each of the different formulas calculated scores.  This was a really cool addition to the teams design document and I applaud them for putting in the effort to work though four different formulas.  That being said, it seems that the team has yet to complete a wireframe or UML diagram.  As I mentioned earlier, this doesn't seem like a huge deal as of now considering we are just getting started on our projects, but this should be a priority moving forwards.  When it comes to writing wireframes, a really nice web tool is balsamiq https://balsamiq.cloud/.  Balsamiq will let you sign up for a month free trial, and is super intuitive to use.  When it comes to UML diagrams, there are a lot of great options, but my personal favorite is draw.io https://www.draw.io/.  Draw.io lets you save your diagrams to GoogleDrive so you can share them easily"
1,"Everything is well documented. Use Case diagram is very useful in this situation especially since there are multiple contexts that are used such as the difference between a student and instructor and the operations they are allowed to perform. I think this has all the necessary sections to achieve full points. I would recommend better formatting for the Test plan section instead of a numbered list, but I do not think that this alone should cost you any points. You could achieve this by making a table or using the wiki formatting syntax to make it appear cleaner."
0,"Extra information : it has been specifically written not to write about expertiza


All the components required ie Introduction, plan of implementation and Test plan has been included.


One missing component here is classes affected"
0,The description is complete.  The required sections are present and the use of diagrams and screenshots provide good visual insights into what will be implemented. There could be more detail about the database tables.
0,"The team has mentioned the project purpose , the project design and proposed solution along with the testing plan. They have also mentioned the work that was done in the previous implementation of the project."
0,"The design document provides in depth details about the current issues and things to be implemented which is good. They make use of images to good effect. The only issue I see is that they are missing a few key sections. I see that the views affected are mentioned, however consider adding the controllers and methods that would be added/changed. Also, there is redundant information on what Expertiza is whereas it was mentioned not to include these details."
0,Yes they did incorporate all functionality that was required of them as per the assignment criteria.
0,Yes. It includes all the required functionality.
0,"Yes, the design seems to have all the required functionality."
0,The design incorporates the functionality which the team has stated in their design doc as they are improving on the previous implementation of the design. These changes aren't fully listed in the above stated link.
1,"Yes, in Implementation Plan they covered all the required functionalities in detail and gave descriptive illustrations on their implementation plans. Also they made an awesome diagram showing usecase. Good job! Maybe their Test Plan looks a little bit simple, but I believe they will add more stuffs as their project progresses. And if so, I'd suggest to include the test results (like coverage) in Test Plan."
0,"Addresses the problem statement directly, and provides their solutions from a design perspective. I think that if the design is implemented it will achieve full points. Each section has an associated visualization and explanation."
0,"The design documents appears to be covering all the functionality, they have mentioned the changes in views according to each sub topic which is a nice thing."
0,Yes the design discusses about the functionality which is required from this project and have uploaded images of how the view will look like when the functionalities will be implemented.
0,"As far as the functionality goes, the design doc covers it and it seems to include all details no matter how small. I couldn't find anything that is missing based on the requirement spec. So, well done!"
0,"They mention almost all the functions, creation, assignment and approval. however seems they miss one requirement, when instructor try to create new badge, he/she should be able to upload the image. i didn't see the uploading part in their wiki."
0,"They have a good explanation about their planned implementations, but they dont explain why they will do this or why they will do that. They do show a lot of pictures of mock-up UI changes, which is very good because in this case it makes it almost self explanatory."
0,"Overall, the proposed changes are well explained to me. Well done. However, the part where it mentions ""Approval of badges by instructor"" is not so clear me. It introduces a concept ""student-suggested badges"". I don't know where and how a student could suggest a badge for certain submission for a assignment. Is it about the badges assigned to the teammates?"
0,The explanations are easy to follow as they are supplemented by screenshots too.
0,Almost all of the issues has a pictoral description to elucidate the point.
0,"All the explanations of their changes are well-written and easy to follow. They explained the previous related implementation, illustrate all to-be-done's in detail and split them into several reasonable steps in their Implementation Plan."
0,"I think the explanations are easy to understand, and with the addition of visualizations, I think this only adds to the effectiveness of the design document. I think that your explanation should not rely too heavily on the visualization where possibly. Try to add more depth to the explanation if possible because you cannot always count on someone understanding your screen mock-ups."
1,"The changes have sufficient explanations and diagrams to support those functionality. they are easy to follow and provide good explanation in general.


The overall implementation is divided in sub topics and each one has view files associated mentioned, it would be better to have controllers mentioned but with diagrams and all given the explanation is good enough."
0,The restatement and expansion of the requirements from the description has a good flow and describes the proposed changes well.  Consider reviewing and updating the Use Case Diagram arrows.
0,The explanations given are good and have good explanation for each of the features that are going to be implemented. The explanations however could be more detailed. The authors could mention the alternatives that the authors decided upon or the different design decisions that the authors are going to take.
0,The document covers the changes that the team will be making and seems to know how they'll be tackling them. It's not hard to follow and I can understand it clearly. It seems like it is a good functionality to add.
0,they explained how they would realize the goal in details. they introduced the file in origin expertiza environment which need to be modified in their project.
1,"For the scope of their project, I think their planned implementation looks pretty good. They just need to be able to coordinate the adding of all of those selections to different views and control their actions. I think any implementation could make the code ""smelly"", but they should be careful to not put too much code into the views. It does seem that it may be better for them to consider even extra implementation since modifying a few views seems like a fairly narrow scope, but overall their ideas seem logical and coherent."
0,I think the designs would not cause any of the problems mentioned above.
0,"The above listed problems do not exist with the design. The design seems clean, as seen from the multiple screenshots posted. I don't think the design can be simplified further. I think all the changes they have proposed are necessary."
0,The authors haven't stated any code changes as of now.
1,"Their goal is to extend badging functionality and they will mainly add 4 new functionalities about badging, so I think they may increase the response time but it's inevitable. For example, the functionality that students are entitled to assign badges may slightly increase the time of loading pages."
0,"For the most part, the design looks good. The only thing that is missing is the UML diagrams or some model of the code that will be modified. I cannot check if the authors plan to add methods to the wrong class because I do not know anything about the code. However, aside from that issue, everything looks great! You tell us what files you are modifying on the front-end, but not on the back end with the database, which I imagine would be the more challenging portion. Please include that in the next iteration."
0,"In some cases it is mentioned which files would be changed but they are only related to view, it would have been beneficial to have included changes in controller as well.


In ""assignment of good reviewer"" its very difficult to just know a column by icon, usually if the space is very small it makes sense to have icon, but in this case it would be better to have written text."
0,"Though the files that will be changed are mentioned, a high-level overview of what code changes need to be made to these files is not given. It is suggested that this section be added."
0,"Some more effort should be expended on the design. There can be a section explaining the different designs that the team/ authors came across while deciding on the one they are going with, these could be explained."
1,"The changes proposed are mostly to be implemented on the View side and hence I don't think there is anything too complicated or something that could increase the response time of the system. The team has mostly figured out as to where the changes need to be made. However, knowing what controller changes would be made would be helpful to know as to whether it would be efficient. Also, make sure the icons used are open source and do not have any copyright infringement associated."
0,"i didn't see anything that going to be a problem in their right now plan. But one thing they might need to pay attention is when they modified the origin files, they should avoid collision with other related files."
0,"The UML diagram shows pretty well the exchange of data. It illustrates how instructors control creating and assigning badges, viewing badges assigned to students and approving badges. Then students can assign badges and view the badges they have received. Also their other diagrams show pretty clearly how they plan on updating the UI to enable these implementations."
0,All the diagrams are helpful in making me understand the project.
0,"Strengths:


- Use case diagram provided.


- Multiple screenshots added for each part.


- In each screenshot, whatever is to be added is marked and mentioned.


- None of the above listed problems exist with the visual aids.


 


Suggestions:


- Add UML diagram."
0,"The ""approval of badges"" should have been presented with an image to get an idea what and how the changes are to be reflected."
0,"They have made a cool usecase diagram which I think is very helpful for readers to understand the newly-added expertiza badging structure. But I guess there's a little problem with this diagram: ""View badges received"" should read data from the database instead of writing data to the database, so I think the arrow is backwards. Also, I'd mention a little advice even though it wasn't mentioned in the requirements: it would be better if they could illustrate (maybe not in this diagram) what other roles can do with badging (such as admin) rather than just instructor and student."
1,"Use of mock-ups is excellent, and are necessary. I think the explanations could be slightly improved, but I addressed this in previous feedback. The UMLs need to be added as well however I do get a solid understanding of what the authors want to do with the code even though I do not know exactly what parts of the code they will modify."
0,"Overall the visual aids provided give a good idea of where the changes would be and what the changes would be.


The user case diagram is bit confusing.


It would have been much better to compare the current expected functionality view and the use case diagram with the previous implementation, and write about why this change is needed"
0,"The edited screenshots provide useful visuals of the proposed changes.  As mentioned before, please consider reviewing and updating the use case diagram arrows."
0,The authors have uploaded screenshots and  UML diagrams explaining the project .  The screenshots are very helpful as they reveal how the end product will look like . The UML diagram looks complete for the required project and shows the different use cases of the system that is going to be designed.
0,The UML diagrams are helpful and they have explained it with the use of mockups pretty well and hence I don't feel the need for further details regarding the flow they would take. The images convey what the current system is like. They also have some images depicting how it would look after the changes.
0,"they use a diagram to show how will their project work, that's pretty good for reader to understand the project purpose. Also, they use some images to show what the website looks like at the end of this project."
0,I am not sure if implementation doubts should be part of the design doc? maybe they should just meet with their mentor to solve those doubts.
0,The documentation is quite thorough and provides all the required information for the reader to understand what the project is about and how the team will approach the problem statement. Overall the team has a done a good job.
0,"There aren't any missing sections, I don't think.


The problems I have with the sections that are there are well explained in other questions in this review.


I do think that basically everything should include more details, though, especially the diagram."
1,"The design doc is complete. All the important parts are present.


The minor concern about this new feature is that I am afraid that specific dividing labor among teammates would harm the cooperation."
0,"The design document is well presented, but I felt that the introduction part could have been written in points , because it is the most important part of the project and if it is written in points, the reader can have an overall understanding of the scope quickly"
0,"I might include a bit more information in your proposed implementation block. Currently as a dense list of steps its a bit hard to grasp what goal each step has, if you expand for a sentence or two on each one I think it would be perfect. Overall, great job on this, the write up flows well and is intuitive."
0,"The team's wiki seems to be written after they have fully understand the goals of the project and I think they almost got everything needed in their wiki. They got Overview, diagram, Proposed Implementation, Test Plan which is good. But I'd mention that Test Plan is kind of brief. They just wrote what need to be tested, so I'd recommend to include more information about testing such as the to-be-tested files, to-be-created Rspec test files and brief descriptions of to-be-tested methods."
0,"the Document appears complete


in the proposed implementation: i do have doubt regarding what if one student is doing multiple things 


In the files to be modified, it would have been better to include what changes should there be in each file, would give better idea as to why these files need to be modified.


Test plan should be more elaborate: testing before submitting project all the students should have some role


In the new files section rather then mentioning duties table, It would have been better to write about migration script and specify the columns and their data types"
1,"Very thorough, covers each area that the team has worked on, the results of those changes, and the reasoning behind them. I think improvement can be made by updating 2 areas here, the conclusion includes a link to the future subsequent steps that the team hopes to implement, I would take this out and put it in its own ""future work"" section. Then you can expand upon the steps more and describe why this would improve performance. The second thing is the testing of the webpages. I see you have tested with slither.io and report some very slight improvements, but have you tried any other sites? Maybe report on speed up or slow down of a regular site that doesn't contain 2000+ canvases."
1,"The design document is very well structured. Everything important is mentioned and described. The team has also added all the necessary links, which some of them serve as illustrations."
1,"The design doc is mostly complete. The project purpose is clearly stated. The fact that the ""Initial Steps"" and ""Subsequent Steps"" were listed out was nice. Project Design was mostly stated. However, most of the doc seems to pertain to the ""Initial Steps."" And since the pull request was accepted on 4/2, it seems like not much about the document was changed to include the seconds part of the project. The report had a testing plan, but it also seems like this was for the first part of the project."
1,"I think all sections are there, and complete. The test plan section could be a bit more in-depth than just describing one test that you perform for performance. Certainly varying the size of the image will affect the performance, and would be useful information."
1,"The design documentation looks pretty good at the moment.  I appreciate you explaining what Servo is as I had no idea what it was when I reviewed another team who had a Servo project.  Also, it was a good idea also to explain what Rust and what an HTML Canvas is as well.  The design patterns section doesn't need to be included if it's not part of your project.  While you do mention that you plan on creating test cases in the project description, these are fine mentioned in the introduction, but you should expand upon those further in a Test Plan section of your document along with the Testing subsection you added in your Implementation section.  Overall, you hit a lot of what this project is and what the problems are that you all need to fix."
1,"The design doc looks complete to me. But it is not straightforward for me to understand the implementation steps proposed in the project description.


The details present under implementation help in giving a better understanding"
1,"You included all necessary parts (purpose, design, testing).  I really like how you included all of the background on servo.  While people who are doing mozilla project might understand I doubt anyone else would unless it was added. Good job!"
1,"1. Well documented wiki project


2. images could be added


3. Performance measures could be better explained"
0,"The design document sections are complete and satisfactorily cover the need, approach, and testing required for the project.  It would be helpful to have some diagrams/mockups in the Test Plan or Proposed Implementation.  In the test plan section, the word ""role"" should be replaced with ""duty""."
1,The design incorporates all of the functionality they need to implement.
1,The design is very well written and the amount of detailed explanation for every aspect of the project is commendable. I don't think there is any aspect in which the doc is found lacking. Great!
1,The requirements have been mentioned clearly but could have been explained more like in section where initial steps and consequent steps are written more details could have been helpful for the user to understand the project better.
1,"All the completed steps during the OSS project are highly detailed in the design document, the team does a great job of covering the material there. The only thing that is not incorporated is the work that will be done in the future (during final project time). As stated in the last question you can easily take this information from the subsequent steps."
0,The design documentation contains a detailed overview of the project and contains implementation ideas and test plan that they intend to use. They have also included the doubts they have regarding the files that need to be modified and whether the instructor will add a separate rubric for non-duty based questionnaire etc.
1,"The design doc doesn't seem to talk about the design about the ""Subsequent Steps."" All it seemed to do so far was was simply restate what the instructions were."
0,"The design document was well written. It included all the major details such as project purpose, design(with UML diagram and list of files to be added/modified) and a tentative test plan. The proposed implementation was also explained clearly and the team seems to have a clear idea about how to go about with the project. I liked how they had posed implementation questions in the end of the document and these are probably to be answered as they proceed with the project. I am reducing a point only because a couple of mock-ups would've been perfect additions to this document."
0,Explanations are not adequate to understand the flow of the project and how are they have planned to achieve it.
0,"The overall changes proposed by the team are explained in Project Description. They have also added initial and subsequent steps that are listed on GitHub, which add up more details for the changes."
0,"As someone who has not seen Rust, Servo, or any of Mozillas codebase the explanations here were easy to follow and did not leave readers without direct Mozilla experience in the dark."
0,"Not many changes were proposed. All I could see was a restatement of the instructions from the project in ""Subsequent Steps"" section."
0,"Changes are pretty good, with references appropriately placed throughout the document. Ex. I did not know much about servo or rust so I had to check the references, and they were good."
1,There are some proposed changes made in the Implementation section of your document as well as code that shows what you have worked on.  This should be expanded upon each initial and subsequent step so that all of your proposed changes are illustrated and described.
1,"The implementation details are really good and show good examples. If more details were given for some of the other steps in the project description, that would be great."
1,The changes which were explained were well explained however (like I said above) I think the steps need more explanation.
1,"1. Very well written, to explain what they want to establish


2. Images could be added in a better understanding"
0,"1) They haven't mentioned which methods or files they are planning to alter.


2) By their approach it doesn't seem the code would be smelly but if some hint about code including in design code could have been better.


3) As the project is using rust, gems cannot be used.


4) The testing results are not discussed so can't comment on the response time. 


5) More efforts could have been given towards explanation of the steps."
0,"It doesn't seem that the proposed changes are complicated and will cause problems. Indeed, according to the document, it should decrease the response time."
0,"The only part I don't like is the section dedicated to the design patterns. You can still say the same thing, it is just off putting that the entire section is only the one line. The rest of the designs proposed are great, you followed exactly what Mozilla described in their project description."
0,"Not many changes were proposed. All I could see was a restatement of the instructions from the project in ""Subsequent Steps"" section. Furthermore, since not much was written about the design proposal,I felt a little confused on what the ""Subsequent Steps"" wanted the project to do or what the end goal was."
0,"Design shows that the code is added to the appropriate classes, and everything looks great from an implementation standpoint. Nothing significant is missing or wrong with the design that I can detect."
0,No designs have been proposed as to how these steps will change the way a class(es) is structured.
0,"Everything that is explained seems to be pretty sound.  None of the proposed changes/code seems to be smelly. Obviously if more explanation is added this will need to be reevaluated but currently everything ""smells"" good."
1,"It is hard to understand the code without proper experience


2. Wiki is very nicely explained, though during execution of the project, more changes needs to be done to help getting a clearer overview of the project"
0,"1) No visual aids have been provided but proper links and commands have been provided which help to understand how the project is run and what results can be expected after executing each command. 


2) No UML Diagrams have been included


3) No Diagram has been included"
1,"The design document doesn't have any UML diagrams or any visual aids.  However, I don't think the team could have provided any mock-ups particularly for this project. They did include the link for the  http://slither.io/ to illustrate the current performance of what they are going to improve."
1,"The code snippets helped quite a lot, really made it easy to follow along with the changes when they are side by side like in the adding ID section. One potential thing I would do is add some sort of canvas to the page, or a link to a page with canvas objects that the user can interact with. This would make discussing the canvas slightly more intuitive for readers."
0,"There were no visual aids except for those that correlated to the ""Initial Steps"" of the project."
1,"Code snippets are used, but not visuals are provided like UMLs or mock-ups. This is unfortunate since the project deals with the rendering of pages and a visual of the rendered pages could be appropriate here or even very useful to help understand the project. I say this with the intention that the project is easy to understand, but the explanations could be clearer with more visuals."
0,"No visual aids like UMLs, mockups, or tables in this document other than code snippet visuals."
0,There are no diagrams included. Maybe some diagrams could be used to explain the transition from one thread per canvas to one thread for all canvases. And maybe a diagram for the initial testcase.
1,No graphics were provided. While you make the argument really don't need design patterns I still think a graphic showing where or how these steps (that you will complete) fit in with the code would have been helpful.
1,"1. Visual aids could be added to help in better understanding of the project


2. No screen mockups present, they could be added to have a better visualization"
0,"Project Purpose: The project purpose has been explained but I am still unclear what exactly is the aim for the project. 


Project Design: The design has not been explained properly why particularly they chose this design.


Testing : Nothing has been mentioned about their testing plans due which design doc seems to be incomplete as how the functionalities would be tested isn't mentioned."
0,"Test plan is not included in the design doc. However this project is related to modify view files.


Another thing is, maybe they could include what the view looks like now before changes and what the view would look like after changes."
0,"The team did a great job explaining what their goal is for this project. Great visualization for project design (we should have included hand-drawn mock-ups too)! however, they haven't outlined their testing plan yet."
0,The design document was not well formatted. The entire page is not visible . The reviewer has to scroll to the left to see the entire page
0,"The team has given a short description on what the project is about and the files that has to be modified. Clear explanation is given on how the changes can impact the system. The design of the UI screens is provided in a neat and clear manner. Tone analysis is also shown at each of the review.


Only the above informations are given. The team has missed to provide the UML diagram, or any mockup screen of the present working scenario. This would have enhanced the readers understanding. Please try to provide a short information on what expertiza is about."
1,"The design doc submitted by this team is almost complete. However certain elements are missing. Firstly, the test plan section has not been added. I suggest to include a test plan with detailed,thought out scenarios which are exhaustive. 


The project design and implementation proposed by the authors is good. However it is a little brief and mostly only includes hand drawn pictures of the potential results and thus is difficult to follow at some places. I would suggest to explain how the proposed changes are to be implemented in a little detail. This increases the ability of the reviewers to understand the ideas proposed by this team.\


Also i suggest to explain the problem statement in detail and not just state it. It makes it easier to understand."
0,The doc seems incomplete as they have not explained the design as well as the testing plan for the project. The purpose of the project is clear but they lack information
1,"The team has written work to be done in a good way They have even put in  hand drawings which was impressive, But i was not able to find and testing plan in the document"
0,"The document actually looks very thorough and it seems they have considered what they need to do very well. They have included an incredibly thorough description of each method that will be tested thoroughly, the fact that they aim to have > 90% coverage, and an individual testing plan for nearly every method. I think maybe less explanation of each method might be better, but that could just be personal preference. Otherwise it looks great!"
0,They have included project purpose and listed out the problems and how they are going to solve them.
0,"Strengths:


- Project purpose - problem statement is clear.


- Project design - 


- Test plan is very details for every method."
0,"This design document is basically almost finished. Everything in it looks complete and well documented. The only issue I have is that you should create a section called problem statement instead of putting it in the intro. This is a minor organizational issue, and when fixed will merit full credit for sure."
0,"Reference kept blank.


 The design document appears to complete with all the files associated mentioned 


I liked that they have considered each method and what functionality they would test in that"
0,"They have covered almost everything, including problem description, methods description, and detailed testing plans. It would better if they can include some background information about Expertiza. In fact, most Expertiza groups did not. But not everyone has the background information. While we are also working on Expertiza, Q suggests us to include the information."
1,"The design document looks to have all relevant details about what the team has set out to achieve. They have mentioned all details about the files they are concerned which is good. Most teams seem to miss out on this important detail. Since this is a testing project, they have quite a few tests about how they would test the various methods. You could consider setting up a git fork that you'll be working on and adding it as necessary external links."
1,"The team has done a good job planning out their course of action for their project.  The Test Plan does a good job covering the over all scope of the project.  I like how the team has described what each method that needs to be tested does, and then goes on to give an example of how they will test that method.  One area that could be improved is edge cases.  I did not see any reference to them at all.  This could be due to there not being any, but it would be helpful if you touched on that just a bit.  Over all good job!"
0,Very detailed description of what exactly they plan to do.
0,Design doc is very extensive and complete.
0,"Functionality is defined as simply creating the integration tests, which I can see is heavily documented already. I really like the incredible detail you all go into to explain your plan for each method RSpec test."
0,"Yes, since this is only a test project, all they need to do is to test the controller and it has been described in the document."
0,Yes. The design incorporates all of the functionality required.
0,"Discusses all possible branches of the test file at length and lists out all used classes. Very well documented, and based on the problem statement I think that if the authors implement the functionality as stated in the wiki they will earn full credit on the assignment portion as well."
0,"The design document has mention of all the methods and classes associated one would test


Its good to see all the components present, they have done a good job in designing the document"
0,Yes. They have incorporated all methods.
0,"The design doc covers the testing details and it seems to include all details on the methods they would test. I couldn't find anything that is missing based on the requirement spec. So, well done!"
1,"The team has done a good job covering all of the required points in the the final project description.  The description required that the team create a new file named ""users_controller_spec.rb"" which they have described in their project design document.   It also states that the team does not need to test private or protected methods, but needed to achieve at a minimum, 90% path coverage.  The team did a good job covering this in their design document as well.  All in all the team has done a good job incorporating all of the functionality required into their design doc."
0,"Laid out all the methods that need to be tested and provided a ""it"" statement for each test they plan to implement"
0,"Design seems to incorporate all of the required functionality, including testing all methods and many edge cases."
0,"Seeing as everything they are adding is new, I can't see much problem with this. I like how they have already included the context descriptions each test will look into."
0,They have shown that how they are going to test each method that needs to be tested and it's easy to understand.
0,Each method is explained clearly. It is very easy to follow.
0,I think the Test-Plan was very well done and everything is easy to follow. One small suggestion to make is to resize the photo. It is too large to fit on the wiki and is a bit cumbersome to deal with.
1,"Being a Testing project, there wont be any changes but additions to test cases, each of their test cases has a well defined explanation of why this test case might be required.


Based on the number of test cases and functionality they will be testing it can be clearly seen that this will help in improving the over all test coverage"
0,"They have proposed their detailed plan very early, which shows they have a clear idea about the code."
1,"While the explanation of methods and tables is complete, this section may be better exemplified by using an ERD for the tables and UML diagram for the methods.  The same is true for the test plan.  For example, test 10 could be drawn out with decision diagrams to show the flow of execution and error/pass conditions."
0,"Since this is a testing project, the document seems to cover the changes what the team will be implementing and what test cases would be written out. It's not hard to follow and I can understand it clearly."
1,"The team has done a really good job explaining what each method they will test does.  They have also given the RSPEC test case headers that they will be using to test each method.  While this does a pretty good job explaining what will be tested, it might help to add a short explanation for each test.  For instance, under the ""Create"" method, one of the described tests states, ""Is this the name new?  If yes, good.  Otherwise, register the user by email address""  This is a bit confusing to me, as I don't fully understand what is going on.  It seems to be saying if the name is new, then don't register a new users, but this seems contradictory to the idea of a ""create"" method? Because of this, it would be nice to have some added explanation attached to each test.  Other then that though, everything looks good!"
0,Very straightforward explanation.
0,Explanations are thorough and very detailed.
1,"It looks they are inspecting the correct class as their project works around the users_controller.rb controller. I think at this point I would ensure you be careful when generating your tests and try to use a DRY approach. I found that correct use of a before(:each) block can truly make code look pretty and less cluttered with the same allow statements. Overall the thought put into creating the test definitely seems sound, I would just look through to ensure you are covering most avenues to acquire that 90% coverage. Otherwise great work so far on the design!"
0,The above mentioned problems do not exist.
0,"Methods are added to the appropriate classes, and I think that most of the other points for this section can be disregarded for a test class. (i.e. runtime does not matter too much for tests unless they are significantly longer, but this does not appear to be the case for this team)."
0,"There is no need to have design proposition as this is a test project, the test plan is good and doesnt appear to be smelly and doesnt over complicate the things. 


I wouldn't change anything here, all the right classes and methods have been taken into consideration and the right classes and associated classes have been targeted for testing.


Good job here."
0,"In fact, it is too early to check. Although they have a detailed test plan, they have not covered any code information yet. So do other groups."
0,The group has the right approach in stating the tables and methods that deal with the users controller and defining the test plan to test the methods.
0,"Since this is not a design requirement, there seems to be no reason to include any design proposition. But the test proposition seems to be adequate and should improve the system rather than decreasing any response time. Everything good here."
0,"The design appears to be very sound.  Since the team is just testing one file, they only need to edit/create one test file and their design document reflects this.  Great job."
0,Design is solid. Tests all seem reasonable.
0,The tests appear to be thorough and sound.
1,"Ultimately I like the idea behind the UML diagram. It seems to me that it is meant to enable the reader to understand the importance of the users_controller and why it is important to create these integration tests. This controller seems to enable new users to sign up and then to be approved by an instructor, which is quite pivotal to Expertiza. Perhaps before next submission you could come up with a few graphics as to the testing interface and how these integration tests will go through and ensure correct operation of the controller. Other than though, i think the UML is quite well made and easy to understand!"
0,I wonder if they could build UML diagrams for test plan?
0,"Strengths:


- Flow chart added to explain the methods.


 


The above mentioned problems do not exist. This project does not seem to require UML diagrams or mockups."
0,"Diagram of the flow of the code is used appropriately. I am not sure that a UML is necessary for this project since it is just a test class. Of course, it would not hurt to include one to help represent the portion of the system under test, but I do not think it merits a significant loss of points."
0,"They have included diagrams, and adequate information can be extracted from the diagram, UML and other diagrams wont be needed in this case as it is a testing project.


 There is a good enough depiction of the entire test plan and a lot of aspects have been taken into consideration."
0,"They use a diagram to illustrate the new method, which is really helpful."
0,"Adding more diagrams/visuals would be helpful, especially in the test plan section."
0,They have a diagram depicting the current flow for the creation of the users which is helpful. However I do not think any diagram could be expected of testing projects. You could include some screen mockups of when appropriate error messages should occur.
0,The visual aids that are included in the write up are very helpful in understanding the project scope and design.
0,The flow chart was very useful. Consider resizing it so readers don't have to scroll to see it.
0,"The one chart is used properly, and aids in understanding the content."
0,"No testing section, no explanation provided for the work they wish to do. A lot of details is missing. Authors needs to work on the wiki page as it is the only thing which will help us understand what they plan to do."
0,It's all good.
0,"The design document starts with the explanation of what expertiza is about with a crisp explanation. The problem statement states what exactly the project is about supported by screenshots how the current working scenario is and how the team has planned to enhance the functionality. 


The team has included details on Test plan has well that helps the reader to understand more on the feature.


Team could have added details on the design, to be specific the UML diagrams."
0,The wiki has everything which was required. The authors have added images making it easy to understand. According to me the wiki is perfect and needs no additional work. Good Job!
0,They have provided the required information. One thing to improve is that they should include their emails.
0,Very clear definintion of what the team plans to do and how they plan to test it.
0,The design doc contains all the information that is expected of the authors. They have given a detailed
0,The design doc is very detailed and explains all the functionality being added in plenty of detail. Test cases are well defined as well. I like how the current scenario is defined and proposed changes are shown as well.
0,"Design document is complete, easy to follow, and demonstrates a clear understanding of the problem and a clear plan to implement a solution."
1,They did not really talk about the functionality of related methods and objects. Just some descriptions of current pages.
1,"Yes, they have incorporated all the functionality they think should be present. However, with constant work more changes can be added which would require additional functionalities."
0,All the functionality described in the requirements are well covered and explained in detail.
0,"After comparing with the specification provided for the project, I can conclude that the the authors have mentioned about all the functionality that was required."
0,"From what I can see, the design seems to have taken into account all of the required functionalities. The document had an explanation on how each functionality was going to be implemented and also mentioned the names of the files to be modified and the level of detail was such that the screenshots showed multiple cases!"
0,Described everything in the requirements doc very well.
0,Design clearly covers all aspects of the task in detail.
1,"Brief explanations have been provided about the proposed changes. Overall everything looks good.


The only suggestion that can be given is to add something about how these proposed changes will be achieved"
0,"Explanations are clear and easy to understand, and cover each page on which changes would need to be made."
0,Explanation with pictures did a great job getting your point across
0,"Adequate explanation was provided on the features that are to be added. Everything from the problem statement to the proposed solution to the Test plan was explained. Also, the changes were explained in a simple manner and I had no trouble following what they had written. However, it would have been better if the explanation was complemented by UML diagrams. Hence giving a 4."
0,The explanation was really easy to follow as they have included before and after views of the application after they implemented which makes it really easy to understand.
0,The explanations are well done and indicate what files will be modified.
0,"The explanations is upto the mark. It is not hard to follow. Since the project is at a rudimentary phase, more changes might be required than the proposed one."
0,"The document clearly explains about the changes proposed with supporting screenshots of the mockup screens. It seems to be easier to understand the changes that the team has come up with. The team has explained with various scenarios also that could arise such as ""When the deadline is passed, whether the instructor can review the project"", ""In case of intermission deadline"" etc.


One suggestion i would like to propose is that the team could have explained the part of code they are going to modify so that it would be much easier to understand the changes."
0,"Yes, they have included required changes and explained their solutions."
0,Too early to evaluate that point. They have not talked about the code or any specific method.
0,As far as the design is considered the authors have mentioned for each proposed change the files that need modification. Cannot comment on the points mentioned in the question as the details in those aspects have not been mentioned.
1,"The team has done enough research to find out the files that has to be changed for each of the functionality in the problem statement and presented clearly. The changes doesn't require any specific gems as few lines of code has to be added in various files mentioned. Modifying the particular module/method doesn't need any gems. So the decision taken by the team is correct. 


There is no specific design pattern/technique proposed by the team so it's not possible to comment whether the particular change could make the code smelly. Since the code changes or the design decision is not mentioned by the team it is not possible to check about the response time. But the changes seems to be more in the UI side, the response time will be same as present."
1,"The wiki is upto the mark, with different approaches the authors wish to take. There might be a possibility that the code may get a little smelly. I would love to see how the authors tackle this issue."
0,I cannot comment on how the authors will implement the changes in the code as it is too early for that.
0,"1) I didn't find any improper method additions in the design


2) The document explains how different constraints are to be handled and I don't see any potential code smells."
1,The design seems fitting for the task at hand. Curious to see how the instructors reviews will be handled vs the student reviews.
0,Design choices appear to be reasonable to implement and clear to end users.
1,"The team has made use of mockup screen of all the current scenario and the proposed changes to explain the design. Making use of screen mockups help the reader to understand more about the project or the problem statement. For the scores table, the team has highlighted and shown the instructors view in specific. Good work team.


The team could have checked on providing UML diagrams explanation for the changes they are making on the controller part of their changes, which could have enhanced the reader's understanding."
1,"No UML diagram, but it might be fine since most of the change is on view."
1,The diagrams are upto the mark and are very helpful. The wiki is well written and they provide enough details for the reviewer to understand the project. Good work Authors.
1,They have included screenshot of the views before and after. They can include a design flowchart/UML diagram to show the overall changes that need to be made to attain the desired result.
0,Visual aids (primarily mockups) are easy to understand and greatly improve the ability to follow the document.
0,Pictures were on point and needed
0,The screenshots were extremely detailed and was able to provide a clear difference between the current scenario and the proposed solution. However I am reducing a point because of lack of UML diagrams. UML diagrams help a lot in the design of applications and provide a clear picture of the system skeleton and it would be better to include them.
0,"This wiki page seems contains all the content needed. They introduce the project purpose and their design. Also they use some image and diagram to show the work in details. Moreover, they introduce how they're going to use TDD for this project."
0,The document is very well written and includes everything that first time reader needs to understand the work the project aims to accomplish. The team has done a good job.
0,The diagrams used to show the proposed changes are well done and there are plenty of them to adequately explain all the changes in detail.
0,The diagrams are rather helpful. That is much better than most other Expertiza projects.
0,The Visual aids provided by the team are very descriptive and helps the reader to get an idea of the proposed changes will affect the User Interface. The team has done a great job in this section.
0,They have not mentioned any coding strategies so cannot comment on the code. But the design is well explained.
0,It might be redundant to separate problem and solution since they both use the same screenshot. I would suggest that they just describe each problem with its solution and then use the same screenshot.
0,The design has all the functionality incorporated in the documentation.
0,"The design document includes all the functionality as stated in the Expertiza project document. Good explanation given on how the instructors/TA will be given the opportunity to review the projects submitted. They have also provided screenshots on how the current scenario is working which makes it clear to readers. 


Team has taken time to make sure to include all the functionalities. Good work Keep it up!"
0,"The design document was well written. It included all the major details such as project purpose, design(with screenshots and files to be modified) and a tentative test plan. The proposed implementation was also explained clearly and the team seems to have a clear idea about how to go about with the project. I liked the way they had screenshots of both the current system and the proposed system. I am reducing a point because UML diagrams were missing from the document."
1,"They explain the project purpose well, but when they explain the design, or what they will do satisfy this purpose, I feel they could be more explicit. Perhaps in the resubmission they could explain the exact places they will look and files that will most likely end up being changed, but this document is fairly lacking as it is. Also, the testing plan only states that they will ensure previous tests work. What are the pivotal tests that must work? Graphical inclusion would be a great idea, and im not sure listing the entire documentation is too great of an idea too because its rather confusing and doesnt actually explain what their contribution will be."
1,"The portions that the team added at the top of the write up are good, they explain what is required of the project, and some of how they plan to get those steps done. But the bottom part, the list to all the tables in the DB, seems a bit overkill. The write up does not need to link to every table that will be touched, maybe if you want to include them they can be added in a simple string of links rather than these large blocks? Since they are added I feel there should be some details attached to them as well, like what each is used for, and how you plan on updating that specific one."
1,Yes they included project purpose which is easy to understand but they didn't mention their plan (didn't explain how they'd plan to complete their goals in steps)
0,"The design doc lists the project purpose and project design in a sense by listing objectives. The project invovles regularizing the database schema so it is understandably difficult to produce a project design like a mock up. However, the  suggested changes do not go into much detail and are not well documented. Listing few sections of the wiki that will be updated would have added to the completeness of the doc. In addition, the testing plan was hard to extract, and doesn't go into much detail. I think overall, the team should add headings to the document that clearly outline what the problem and background of the project is, what their suggested solutions are, and a description of each solution. Also they should have a seperate section for a test plan."
1,"They have provided the general description, problems and resolving steps. They provide a detailed description of each object. But the picture they uploaded seems redundant."
0,The purpose is defined but there is no description on how they will locate any redundant/unused data to remove it from the schema.
0,"I do understand that there is not a whole lot of explanation needed in the doc, but the team could have done much more than just stating what is to be done without actually explaining anything. The wiki page adds nothing to the project description. The wiki page lists some tables without actually explaining anything about those."
1,"The teams work is to modify the expertiza db to make it more functional removing the db. This message was clearly conveyed  


. The test plan was not explicitly mentioned . May be the team would need to check if the functionaloty is still maintained if the table attributes are changed , which as said they would run all the tests again"
1,"The team has done a good job covering the projects purpose and the scope of the project as a whole.  That being said, the team has not included a UML or Wireframe describing the technical layout of their porject.  Furthermore, the team does not appear to have added testing plan.  Even though the team has not done either of these two things, they seem to be on track given it is only one week into the project.  I would suggest though, that moving forward the team focus on getting these technical documents written up so that they can all be on the same page when it comes time to begin implementing everything."
1,"The project purpose and some information on the issues present in the old design was given. However, the implementation plan is extremely vague and very short, and no information on the test plan is given."
0,"After reading these requirements document, i actually realize that everything on the wiki was a cut and paste, so they actually don't have any design determined yet. They do satisfy incorporating functionality, but I would think it would be great to see how they will go about accomplishing these tasks in their own words."
0,They have included all the basic sections.
0,"It's pretty close to complete.


I'd like more information on what the objects look like. There's a lot of discussion of the behind-the-scenes table action, but there's not a lot of discussion on what the objects that will abstract those tables away look lie."
0,"The design doc is very well written right from the design strategy to the user interface change.


I felt that , the installation steps could have been provided, so that any new user can perform these steps and get to the files,codes to see the changes."
0,"The team has followed guidelines and included all important sections including the Introduction, Overview, Proposed solution, Design Strategy and test plan. The document is well structured and shows that the team has paid attention to the details. Not much unnecessary data is present, the explanation paragraphs are short and diagrams are used excessively which I feel help more than lengthy explanations"
0,"Pros:


Project purpose is stated clearly.


Project design is stated in depth with multiple flowcharts and screenshots.


Test plan is given and what all should be tested is mentioned.


 


Suggestion:


Some detail on how each of these will be tested in the test plan would have been good."
0,"The design doc is complete and through. They have included all the details. The problem statement has been explained well. The proposed solution is quite clear and the flowcharts provided are really easy to understand and reviewers can get a complete idea of what the team has thought of. 


However, I would suggest the addition of a UML diagram to explain the data flow accurately. This would strengthen the document and make it crystal clear."
0,"The team did a very good work , It is one of the best reports i have reviewed, this project session . All aspects that i was looking at were well written and complete"
0,The design proposal looks quite detailed and contains a lot of information including flowcharts and screenshots to help understand how the solution will be implemented. The test plan is well laid out.
0,"The documentation lacks references which I believe is important in documentation. Let people know where you found your information from. The design doc consists of the testing plan , the purpose and the project design."
0,The design document looks to have all relevant details about what the team has set out to achieve. They have mentioned all details about the files they are concerned which is good. Most teams seem to miss out on this important detail. They make use of images to good effect. The Test Plan seems to be short on tests and could include much more considering it's quite a big feature to be added. You could consider setting up a git fork that you'll be working on and adding it as necessary external links.
0,"Very complete project!! All necessary parts are included.  Intro/purpose, overview of solution, actual solution/design, test plan, and files that will change. I also like how easy the flow of the document is. Very easy to read and understand"
0,Very clear about what they proposed solution is. Having the suggested files changed shows that the team did their research in what exactly needs to be done.
0,It absolutely does. The functionality is definitely all incorporated.
0,This design doc incorporates all the functionality required
0,"Yes, the team has covered all the requirements stated in the problem statement.In the Changes to User Interface section, the team has just restated the problem statement. Explaining it in your own words would be better."
0,"Yes, the design doc does incorporate all the required functionalities. They have covered every problem given in the problem statement and have proposed appropriate solutions for solving these."
0,Yes the design in cooperated all the functionalities required as per the document
0,All the required functionality is described in the design and the authors have proposed design changes to incorporate them.
0,The design document seems to have covered all the functionality mentioned in the problem statement
0,Yes! Each bullet point in the project specs page gets talked/explained about in the document.
0,The documentation talks about everything listed in the requirements doument
0,"Explanation of design strategy can be more smooth, e.g. ""If the instructor has enabled a particular assignment to have supplementary review questionnaire a student when clicks on the ""Your Work"" tab sees a link to the add/edit Supplemntary Review Questionnaire."" can flow smoothly by trimming off bad grammar or adding some words."
0,"I'd like a bit more info on what the structure of this stuff is as objects instead of tables. There's a lot of discussion of tables, but that's not what's going to be used (I hope?), so more clarity on how the objects look would be nice."
0,The changes that have been proposed by the authors are very lucid and intuitive to understand.
1,"The team has explained all sections thoroughly. I just have one doubt, what kind of questionnaire will the SRQ be?A dropdown, checkbox or a Text field."
0,"The changes proposed are very easy to follow and are adequate because of the flowcharts and screenshots provided along with explanations for each. Even the column details that will be modified are mentioned, which is very helpful."
0,"This team has provided a good enough explanation to support the proposed changed. However, at some places the explanation is too brief and is almost just stating which is given in the problem statement. I would suggest , that they can explain the solution of each problem in a some detail so that it is easier to understand. Maybe a few examples can be added to aid understanding. 


Also one thing I would like to point out that the first flowchart is not clear. The flow is quite distorted as it connects the instructor views with the student . I don't think thats quite accurate. Instead a separate flowchart for the instructor side and the student side can be created. This would make the flowchart easier to follow and also track the data flow.


In the first flowchart, there is a design box with only one path without any indication for yes and no. I would suggest to fix this before the next submission."
0,"The team used flow charts to explain , it was quite intuitive to understand  ."
0,All changes are described in adequate detail and are easy to follow.
0,The changes that the authors seem to have proposed are explained well and are well aligned with the requirements of the problem. The authors have posted pictures describing the views and the flow of control expected in their solution.
0,"The document covers the changes that the team will be making and seems to know how they'll be tackling them. It's not hard to follow and I can understand it clearly for most part. However I am not too clear on how the grading will work. Initially it is mentioned that these supplementary questionnaire will not be graded but the UML diagram mentions that the SRQ scores would be appended to the original review scores. Also I'm not sure as to whether these would be optional or not. If they are optional, I believe people wouldn't be keen on answering them. If they are not graded, it is not fair for some people reviewing to do additional work in reviewing the team's work. It could be added as an optional bonus if answered."
0,"Very good explanation. While the topics aren't super simple and the explanation alone may have been tough to understand, the UML diagrams plus screenshots really make it quite easy to understand."
0,Very easy to follow any your design makes sense. I think the only tricky thing will be ensuring that you are displaying the correct questionnaire for each team. Assuming that a questionnaire for each team would be unique then this should be pretty straightforward.
1,"Yes, in their design description I can see all the required functionalities are covered which is good. However it's better if they can include a design plan/project plan to illustrate how they'd plan to meet the requirements in steps. They did write ""The scope of our project is to rectify these problems by performing the below steps"" but I think these “steps” are just the copy of the requirements and it's too abstract to figure out what they thought around these requirements."
1,"The explanations for the proposed changes are straightforward and quite easy to understand but they are almost the copy from the requirements, so I'd recommend they discuss them in detail. For example, for ""1. Go through the Expertiza_development database to find tables that not used any more or redundant records."" they may explain the criteria they decide to use to find the useless or redundant tables."
1,"Their goal is to regularize expertiza database schema so they won't add methods/classes.


From wiki it seems they just started their project and there's no code written yet, so I'd say more effort should be expended on the design."
1,"They included the old detailed description of the tables in Expertiza DB schema which is really descriptive. But for now it's hard to say whether it's helpful and necessary to help reader understand the project, however I guess when they almost finished their tasks they will update a rectified DB table on wiki, so at that time by comparing the rectified and old table, it will be very helpful for readers to figure out their project purpose and how they achieve them. Anyway, the table is well designed and shows their intentions."
1,"The design copy and pasted the required funcionalities listed on the main document, so yes, objectively the design does incorporate them somewhat. However, the actions that team stated they will take are not very detailed, so it is difficult to guage whether or not the requirements are being met."
1,"The authors need to be more explicit about the changes they will make. It is good that the team communicated that they will update the wiki to reflect the current DB schema, however instead of stating the potential changes, the structure of the entire wiki was instead presented. I think once the team dives a bit deeper into the project, they will be able to provide the names of the DB tables that were changed or removed."
1,"Overall, the scope of the project seems sound. It is difficult to guage whether or not the changes will have potential risky effects to the application without knowing which parts of the DB are being altered. However, as long as the team does go back update the doc with the details of their changes, it will become easier to analyze the effectiveness on the design of the project."
1,"No visual aids were used, and it would be a bit tricky for the team to include any on this one. However, screenshot of how various tables in the DB are linked together presently would have been a nice use of visual aids. I would suggest somehow providing a visual aid that helps provide the rationale for each change made to the DB. This would allow for more understanding regarding the project and the impact of the changes."
1,"The design does not describe how it will incorporate all of the required functionality, but it does claim that it will, and it describes several specific requirements that will be completed."
1,"The authors proposed to review the DB schema and update the Wiki. However, no more detail at all was given, and as such it is difficult to gauge the quality of the explanations present."
0,"The authors did not describe what design changes they plan to make, only that they will make changes."
0,"The item most similar to a visual aid is a list of DB fields given, which is not immediately useful if not accompanied with an explanation of what is being modified."
0,"There were actually no explanations given because they don't have any of their own design plans documented, just what was placed in the requirements document. I think they can come up with their approach, or a few, and explain them."
0,"I think the plan laid out could work out, but they will have to be very cautious because this is a fairly destructive project. Also I think they will have to make sure to be on the same page and double check each other before they decide to make changes. I definitely think more effort should be expended on the design as there doesnt seem to be much design as of yet. If they perhaps make it a modular design where they effectively peruse each DB table, maybe they can come to a more coherent and logical design they can then document."
1,"They do not provide any visual aids, which I think would be a great idea. Perhaps including a mock-up DB table that would then be able to show how thios project would impact expertiza. Or maybe there is some metric whereby cleaning up the extraneous references that are unneeded would affect it, and they can somehow visually represent the impact their design will have."
0,"Yes , the team's work was clearly conveyed and the same was explained in the document"
0,the explanation was crisp for most part . if it was possible to mention how they would plan to check all the attributes in a better way or go through each of them individually . I am just curious
0,"The project dosent fall in this catogory of questions. The task is db mogrations to make it more meaniingful, which the team has explained well"
0,Question not very apt for this project
1,"They list the project problems, and the scope of the project and introduce the steps to navigate to expertiza_development schema, which is pretty good. However, i still don't know about their design purpose and plan. I think they still need to tell us what kind of achievement they'd like to get at the end of this project and details of how they will do the project step by step.


Moreover, i think they only write a little contents in this wiki pages. The former half are just the project description provided by instructors. they just added 21 lines to the old wiki page and 12 lines of them are copied from project description."
0,"Yes, They include the content in first link to their wiki page."
0,they explained the project very well. But they just didn't talk about details plan.
0,this project doesn't need to change or coding something  new. it just checks the redundant and name confusion.
0,No diagram is used in this wiki. and i wonder if they can use some diagram for their project. But i'd like to see if they can come up with some flow charts for their detailed realization of design.
0,The planned steps mirror whats in the project description perfectly. The team has some ideas written down for how they will accomplish those tasks.
0,"I think an example would really do wonders here. Its a bit hard to grasp exactly whats being changed? The word normalize makes it sound like the team will make each table have a similar/the same layout when that likely isn't possible. Maybe show a DB that has a few redundant fields and how you will fix that specific one, and then show the wiki page its connected to, and how you have to update that page?"
0,"The design here is rather simple, create migrations to clean the DB, not much to comment or expand on. The team did a good job of keeping it easy to read and follow in the write up."
0,"No diagrams, but its also not really needed so I didn't put any stars."
0,There is no mention of the tests they may need to modify.
1,The proposed changes could be more thorough in how they are described and how they describe what needs to be done to make the changes.
1,The updates should make the database more clear and concise but there could be more work done in identifying what needs to be removed/modified and how to test to make sure it doesn't break anything.
0,There were no visual aids but there isn't much to show for this.  They could add diagrams showing how tables are connected.
1,They have covered the requirement of the problem description. It would be better if they explain the functionalities in detail.
0,Too early to evaluate the changes. Will modify the review when they have included their implementation steps.
0,Too early to check those points. Will update the review when they have provided their implementation steps.
0,They did not use diagrams and it would be much better if they did.
1,"The team should definitely put some more effort into expanding the documentation.  As mentioned above, there isn't really any need for formal documentation such as UMLs or Wireframes, but the team should definitely focus on creating a plan of action moving forward.  The team did do a good job finding all of the tables that could need editing, but I would suggest reducing these documented tables down to just those that will be worked on in the project.  Other then that, keep up the good work."
1,"The author does not appear to have proposed any changes out side of reiterating the project description.    Since this project is mainly focused on cleaning up the DB, I do not feel as though there is really any need for formal documentation such as wireframes or UML documents to be made.  That being said, it is important that the team lay out a plan of action so that both reviewers and other team members alike have a good idea what is going on."
1,"While the team reiterates the project description given in the google doc, they do not appear to have worked through any design decisions as of yet.  What they have done is go though all of the database tables and given links to them in the expertiza documentation.  While this is nice to have, it might be more helpful if just one table is linked with maybe a list of the tables that need to be changed.  The project does not require that all the tables be updated and changed, just the ones that are not set up properly."
1,"There are currently no UML diagrams, mockups, or screens and tables.  That being said, this is not something that this team necessarily needs given their specific project is focused more on reworking the database.  A suggestion for a diagram the team might add though could describe which portions of the database need to be reworked.  Visual guides and diagrams really help reviewers and team members alike understand visually what is being worked on.  Because of this, I would highly suggest sketching out a visual overview of the portion of expertiza that you and your team will be working on.  Other then that, keep up the good work."
1,"The design doc felt a bit incomplete to me. Although the problem statement was explained in detail, the document does not say what was wrong with the previous version of the project and why an improvement was needed. Regarding the design, a single mockup was provided which gave me an idea about what the team is planning, however it would have been better to provide UML diagrams and names of files that are to be modified/added. Also, a tentative test plan could have been included."
0,"The problem statement defines three sub-problems for the project, that is, improve the color scheme, compile review data together and visualize class performance for certain rubric criteria. However, the design does not address any of this and the lone mockup which was provided addresses one part of the first requirement. There is no other information related to the design, such as UML diagrams, files to be added or modified. I am giving 2 points because more design related information can be added."
0,"Only the problem statement was clearly explained. The design is not explained adequately. The information was too vague and I am not sure how the team is going to implement the project as the design is not presented clearly. I felt it would have been easier to understand had there been more mockups, UML diagrams and list of files to be modified or added."
0,"1) Methods to be added/modified was not mentioned


2) Not much detail was provided in the design, so I could not identify potential code smells.


3) From the single mockup provided, I think the designs are not too complicated and they have also mentioned that they will be using the Highcharts library of Javascript.


4) Since graphs and other charts have to be loaded everytime an instructor wishes to do so, I think the response time may increase.


5) I feel there is definitely more scope for design improvements as everything mentioned so far is vague and not specific enough.


For the above reasons, I am giving 2 points."
1,"Only a single mockup was provided which showed how an instructor can choose which data members to show and the type of graphic visual they would like to produce. This mockup certainly helped me understand the first requirement of the project. However, there were no visual aids for the other requirements and I suggest including them as it would greatly help an outsider to understand the project."
1,"The document starts with an introduction about the team members, followed by problem statement and preliminary design. The problem statement is neat and gives a brief explanation about what the team is working on. Link to the previous work has been given that helps to understand from where the work is going to be started and how the work is going to be done.


Preliminary design shows a mock up screen with basic design. Test plan is missing in the document and there is no implementation plan or use case diagram. Try to add the above mentioned items to have the document complete. Project repo link and the link to pull request are given."
1,"One of the changes proposed by the team is to change the color scale from blue to green, to red to green that allows the instructor to identify the necessary data. The team has included that in the design document with a mock up to allow the reader to understand it to the best. The integration of review performance is explained clearly in the document with the parameters such as number of reviews, length of reviews etc. One last requirement is to highlight the class performance with a visualization table based on the rubric criteria set by the instructor.


As the design document says the table has to be presorted and allow the user to sort it alphabetically too, but the design document hasn't mentioned that."
1,"The author has clearly explained about the problem statement and the high level solution such as using HighChart javascript to integrate the review data and the author data, and the team is still figuring out to find out a way to sort the data. Crisp explanations are given for each of the problem statement. I didn't find anything hard in following it.


My suggestion would be try to check out Ext-JS(Javascript) library to sort the table. It provides and extensive way of sorting by clicking the column names."
1,"The author hasn't made any changes to the code, so i couldn't comment whether he/she is adding to a wrong class or not and same is the case whether the new design could make the code smelly. 


As the author has mentioned about using highchart javascript, it is one of the best libraries available around to do data visualization. Highchart javascript library maintains the response time of the system and it is really efficient. 


For sorting purpose, the author hasn't figured out any solution, so he/she can check out this gem ""sortable-table"" to do the sorting. This would my sugesstion."
1,"The author has provided one basic mockup screen to understand about the visualization. Though the screen looks fine in terms of appearance, it lacks the information that is expected by the user. There should be more details explained in the writeup interm of the mockups.


The author could have given a UML diagram that helps to understand the functionality more. Try to refer the good writeup posted by our professor to figure out how UML diagram has to be."
1,"The team seems to have a decent idea of the purpose of the project, what they are supposed to do, how they plan to do it, visualization of how it would roughly look like. Currently they have the testing plan section empty. As this is more of an add-on project, I believe they would be doing same tests as previously and additional tests for the new functionalities. I feel that they have a pretty good understand of the details in the picture they have created. I would try to point out each part of the picture and put text alongside it to help others understand. However, they have written it down below, this could be another alternate better visualization for helping reviewers understand."
0,The team has covered almost all the functionalities as per the document (https://docs.google.com/document/d/1hEnWHshzGCvN5zBMA90L9-eQuuNKX7skYkkwwOQSjyU/edit). I do not have any suggestions here.
1,"They have done a really great job trying to explain it to users. They have tried to help reviewers understand their work by adding the picture. They have also added description below it which implies they have the exact understanding of what needs to happen. However, I would better like it if they could add more details to the diagram instead of ""Data"" buttons, adding more texts like ""Round x""..etc. That would add some more clarity."
1,"The design appears to be sound. I don't think we should be expecting to see what new methods would make the code more smelly. As this is the initial stage of the design document, this would be something to evaluate in the later stages post implementation. However, they have done a great job at describing the purpose of their project and how they plan to accomplish it. They have even looked into what resources they plan to use for changing the color scheme. I would just recommend making the figure more detail oriented than it is as of now."
0,"As I said earlier, they have tried to explain all the aspects of the projects. They did add what is expertiza section which was told by the professor not to do in last week's lecture, but well that doesn't matter much. They have added diagrams which I believe with a bit more details would be fantastic. Apart from that, great work!"
0,"Test plan section is empty, and there is no explanation of how the mockup fulfills the requirements, or how the intended functionality will be implemented."
0,"There is very little information describing the intended design except for a single image. Therefore, although it appears they have considered many aspects of the project, the design document does not communicate how the proposed design incorporates required funcaionality,"
0,"There is almost no explanation for the intended changes, aside from a mockup image."
0,"From the one mockup image, it appears the design will be clean, easy to understand, and fulfill at least some of the intended functionality. However, very little detail is given."
0,"The diagram is helpful and clean, however it is not explained, and it is difficult to determine where it fits in with their design."
0,"The team explained what their plan is, the purpose of the project, added a mockup for visualization. The test plan is not implemented yet."
0,"According to the description for their topic, they have included all details. However, as the main document for the final project states: ""Your design document does not have to (and should not!) explain what Ruby on Rails is, or what Expertiza is, or what Mozilla/Servo is."" So, maybe you should delete the Expertiza description."
0,"The changes that they are going to implement are clear and detailed, easy to read and follow."
0,"The team's plan is clear: to change visualization graphics. However, they haven't indicated what files they will work on in order to implement their design. So, it's not clear yet if their changes would make the code ""smelly"" or they would increase the response time."
1,The team followed the description for what they are to implement. They have added a good mock-up. I wish they have added the current issues screenshots. I'm sure once they will add more detailed screenshots once they're done with the project.
0,"Testing plan is missing. (Only heading is given).


Project purpose is clearly stated in the problem statement.


Project design is given. A mock-up screenshot is also provided which makes it very easy to understand the expected end result."
0,"Yes, the mock-up incorporates all of the required functionality."
0,3 goals are stated for the project in the problem statement. A general description is given in the design. It would have been good if each of these goals and the changes relating to them are described again in the design.
0,"1) the authors plan to add method(s) to a wrong class


No details about methods or class provided in the document.


2) the new design may potentially make the code ""smelly""


Not enough information provided in the document to judge if the code can become smelly.


3) the new designs look complicated and there might be existing gems that could simplify them


Not true. The design looks simple and easy to understand.


4) the new design may potentially increase the response time of the systemNot true.


5) more effort should be expended on the design


No, the design looks good and not rudimentary."
0,"One mock-up of screen is added. Visual aids for tables or UML diagrams is not present.


1) some diagrams are unnecessary and do not help reader understand this project - No. The mockup is necessary and helps me understand the project very well.


2)  some UML diagrams do not follow the conventions - There are no UML diagrams.


3) some diagrams are too high-level design and do not provide enough details - Details are explained below the mock-up diagram so there is no issue here."
0,"There could be more elaboration on how the review data will be shown more clearly. The preliminary design for the visualization is pretty easy to understand and is clean. Also there isn't a design proposed for seeing the class metrics


The authors haven't given a test plan but I am sure they will have one in the final submission"
0,"There isn't a proposal for ""class performance"""
0,The proposed designs look very intuitive and have the potential to be useful if implemented properly.
0,The design changes haven't been proposed in detail that I can comment on the quality of code being added.
0,The diagram included is very good. Would help if there were mockups for the other changes being made as well.
1,"Considering this is just a crude version, the wiki page is well written. Although not all things have been added, I am able to get an idea of what the team is planning to implement. There is an empty test plan section. As the functionalities that the team is expected to implement, they have a lot of freedom to try and implement different ideas. I would have loved if the authors had been a little more descriptive of the things that they are trying to implement."
1,"As the project is still in a nascent phase, I don't think the authors will have an exact picture of what the final product will look like. That said, the doc is descriptive enough of the functionalities the team would try to incorporate."
0,"The functionalities the team wishes to implement are easy to understand from the doc. The team has made a good effort in trying to explain what the changes would possibly look like. As there no predefined changes the authors are expected to make, it is difficult to explain in entirety what the end result would be. But the team has done a great job with whatever they know as of now."
0,It is very difficult to know as of now about the exact changes the team will make. But I think they are on the right track and the design they have proposed seems to do the job as of now.
0,"There aren't any UML diagrams. The screen mock up they have provided seems good enough. They have also explained how they plan to make these changes. As of now, the visual aids they have provided seem to do the job."
0,The team has provided the project purpose and the design plan. The testing plan hasn't been provided at all.
0,The design does incorporate the given functionality of integration of review performance and class performance.
0,"The authors have explained the changes sufficiently, a demo image has been provided for easier understanding."
0,The exact changes which are required in the files isn't provided at all. The authors should add more information about the code changes.
1,The diagram provides a good reflection of the idea behind the project. More diagrams such as flow chart of the logic etc should have been provided.
1,"Every section is included except for the testing plan. All other sections are well documented and easy to read. Great work on this. The lack of test plan is fairly understandable at this point so I did not feel that it should lose a significant number of points. On the lower end, however, there is no UML, but a wireframe is present at least. I think if a UML were added and update the test plan this would merit full points for this section."
1,"I think the wireframe and explanations that are provided are great and are presented well. However, I think it would be great to have a bulleted list where you address each problem directly with your solution. Use the same numbering as you did in the problem statement section. This will certainly improve the document and make it incredibly clear and easy to follow."
0,"The wireframe provided appears simple enough and looks like it solves the issue of the confusing visualizations that are discussed in the problem statement. Since only a wireframe is provided it is difficult to tell whether you would be adding methods to the wrong class. I think, however, that with more effort and with the creation of a UML diagram I could give more useful feedback about your design."
0,"Again I think the wireframe provided is great, but you need to add UMLs to show what code you are planning to modify."
0,"The wiki is well written. some sections are still missing, but i get the idea what the project wants to establish. More information would be better i believe as it makes it more understandable"
0,They have mentioned all the functionality they wish to incorporate in the wiki. I would love to see how to project turns out to be.
0,The changes are easy to understand from the wiki. They have tried their best to explain what they wish to establish with the project with all the information they know about the project.
0,Hard to determine as there is no code present to check whether the changes will make it smelly. Overall they have explained it very well.
1,"They have only used 1 image to explain what they want to do. Although the given image can be used to get all the information about the project, more images can be added to make it more informative."
1,"The authors have given a good introduction to the project in their description. They have added a ""Problem Statement"" section and a ""Preliminary Design"" section for the same. But the team needs to expand these sections as well as add more relevant sections to their documentation.


They need to add ""Proposed Implementation"" and need to fill in details in the ""Test Plan"" section."
0,"The design incorporates the features, but only at a very high level. The team needs to describe the functionality (existing and expected/proposed) in a point-wise manner. Right now, the design description is brief and does not incorporate all the featured requested in the project document."
0,"The authors have not proposed detailed changes that they want to make in the application. They have mentioned that they want to use ""highcharts javascript library"" and also a few high level descriptions of the features. But they do not mention specific files (.rb, .html etc) they want to modify, or views they want to build."
0,"The authors propose a cleaner, concise UI. But they need to incorporate more details about the rest of their implementation. Specifically, they need to add point-wise details for all their functionality. They need to mention the various modules of their project and their relationships. At the moment, they only describe the View part of the MVC."
0,"The authors have have a good visualization of what they want to implement. But their work needs to be more details. At the moment it only gives a high-level description of the requirements and does not give minute details. They need to add diagrams for each of the features they intend to implement.


Also, they need to add application flow diagrams if they intend to change the current flow of application or a add new flow."
0,"The design document is very well written. The problem statement and suggested solutions were described in detail. In addition, screenshots were used effectively to illustrate the problem statements and the proposed changes. The test plan is also very thorough as well, listing each problem, solution, and how to test it. Overall, this is a great wiki."
0,"The design incorporates all of the funcitionality required and described in the problem statement. The specifics of each functionality is addressed, and the proposed solutions designed to implement them are well described and illustrated in the proposed solutions section. It is apparent that this team has a very clear understanding of the scope of the project and have put a good amount of thought into the design of the solutions."
0,"The explanaitions of the changes are excellent. They are able to relate the proposed changes to the problem statement, provide a visualization of the changes, are very detailed as to how the features will be implemented. One thing that is missing from these explanations is the files that they are modifying. If the doc had an overall section called Files modified or if each solutions explicitly stated which files are being modified and created, the explanations of the changes would benefit greatly."
0,"The designs are well visualized, so it is apparent that the team has a clear direction for their proposed changes. In addition, the changes appear to be based on the view, so code smells and complicated code are quite unlikely. It can then be concluded that the changes will not affect the runtime of the system. The design appears thorough, and the team has a clear sense of what to do. I would suggest that a visualization be put in place for the second proposed change, as there currently isn't one."
0,"The visual aids are used very well. Not only did the team use visual aids illustrate the problems in the exisiting system, but they also used them to illustrate their prorposed changes in detail. As opposed to a paper or whiteboard mockup, the team put in the time to alter screenshots and create digital visuals to accurately depict their changes. The only issue is as mentioned before; one of the proposed changes (Updating Review Summary view) does not have a visual aid, even though the change affects the view."
0,"In general the document is really good and complete . I appreciate the teams effort in analyzing the requirement . Test plan was also written , Few things i think could be in cooperated are 1. i was not clear on how the visualization would be incooperated into the table view , more details will be pretty helpful 


2. A little more information on testing like , it is to the unit test files or would it be a ui test etc could help a lot"
0,Yes the design talks about all the functionality that were addressed according to the requirements document
0,"The changes the author has suggested seem to be straight forward addressing the issues . And the changes were intutive and have been explained in 2 lines along with a diagram . 


adding a diagram after change for issue 2 would have been better.


 


Also , if possible, where in the code the changes are to be made could be added"
0,Report did not talk about any changes from the code point of view so it is not possible to review it
0,diagrams are added for the UI point of view and are seen to be good . No UML diagram were shown in the report on what calls are going to be made to accommodate the required changes
0,Your design document looks great so far!  The task and problem statement is fairly straightforward and you highlight all the necessary issues that need fixing.  Your proposed solutions and test plans also look promising as well.
0,Design incorporates complete functionality required for this project.
0,"Your proposed solutions are great and the quality of each one is understandable to me.  Overall, you all have a good understanding of your project and have great proposed ideas in mind."
1,"Currently there is nothing about the coding aspect of changing these pages and what the plan is to pretty them up.  Since this is just changing existing code on Expertiza, there are no designs for new classes that needs to be reviewed for this project."
0,"I like your use of a bar chart to display the Metrics of a student instead of displaying text.  I also like the idea of having each bar be a different color so that one is the average of all students, one is the average of just the student, and the others are the rounds for the peer reviews.  For the second issue, while straight forward, you could have drawn up a mock design of what the review scores page would look like based on what you explained.  Finally, for issue 3, I think it's a great idea to include another color to distinguish reviews that the reviewer has made no revisions on.  Is there a possibility to include another color, like yellow, to show if a reviewer has reviewed for one round and not the other if different questions are being asked in the second round?"
0,"The presence of screenshots for the current functionality and the proposed redesign provides good information to the reader. I would suggest adding more test cases to the test plan, outside of just the ""happy path"", and not going into the steps that each test case involves."
0,"The design document does a good job of rewording and stating the pending tasks. It would be good to go into some detail for Issue 3 regarding color scheme of the reviews. More specifically, it would be good to see how the new changes will determine if the author has or has not resubmitted their work for the reviewer to review."
1,Proposed code changes are not given in the proposed design section; please add these. Add a screenshot to the proposed design for issue 2; these are a good visual add in seeing what will be changed.
0,Applicable screen shots are used to describe the problems and proposed solutions. The only suggestion I would make would be to outline the problem in all three problem statement screen shots; this would mean outlining the white space in red for issue 2 and maybe adding an arrow stating that a red review is really red because the author did not resubmit. This would help make the screenshots more stand-alone.
0,The design document is well written. It contains all the major topics such as overview of the project. A complete and detailed explanation of the project. Proposed implementation and the Test Plan.
0,All the issues are clearly explained and all the functionality seems to be incorporated.
0,The proposed solution is very well put. It is easy to understand as they have included screenshots of the current scenario and how they wish to change it highlighting the current problems.
0,They have not included any coding strategies so cannot comment anything about the code but they have explained their problem really well and offered a detailed solution.
0,They have included screenshots of the current views. They could have included a UML diagram or a flowchart to explain the design so as to have an overall view of the design.
0,"The document appears complete, its good to see the test plan and references, I would also include the pull request, It be beneficial to see what files would be affected and what changes would be there for each file. The images does give a idea of where the changes would be in each view, but adding controller and view names/location in the changes would have been better.


There is a gradual list of what the changes would be which is a good thing.


The images are a tab bit big."
0,"The design does incorporate all the changes required.


they have done a good job in identifying what the issues are and what the related tasks are for each issue and what test cases would be there.


The design does incorporate all the functionality"
1,"Yes the design document identifies all the issues and what test cases are there related to each issue which is something i really liked.


 


""Check if the changes are appearing in the page as mentioned in the proposed solution"" this particular statement is something i didnt like, it would have been much better to state what should be the expected outcome."
1,They haven't mentioned which classes would be affected or what methods in those classes would be affected so its hard to judge this point. But based on the view it does appear they are moving in the right direction but its not possible to check for classes or methods.
0,"The diagrams which have been provided give a deep insight of what and where the changes could be seen, the diagrams are a tad bit big, UML cannot be expected from this project as its completed related to view and controller.


The diagrams are just enough to give proper visual aid and are very helpful in understanding the project."
0,"The design document was well written. It included all the major details such as project purpose, design(with screenshots) and a tentative test plan. The proposed implementation was also explained clearly and the team seems to have a clear idea about how to go about with the project. I liked the way they had screenshots of both the current system and the proposed system. I am reducing a point because UML diagrams and list of files to be modified were missing from the document."
0,"From what I can see, the design seems to have taken into account all of the required functionalities. The document had an explanation on how each functionality was going to be implemented and also provided the corresponding mockups. I am reducing a point because names of the files to be modified were not mentioned and only the functionality was explained."
0,"Adequate explanation was provided on the features that are to be added. Everything from the problem statement to the proposed solution to the Test plan was explained. Also, the changes were explained in a simple manner and I had no trouble following what they had written. However, it would have been better if the explanation was complemented by UML diagrams and list of file changes. Hence giving a 4."
0,"1) Methods to be added/modified was not mentioned


2) No details of file changes were mentioned, so I am not sure about potential code smells."
0,"There were a lot of mockups which explained clearly as to what is the problem and how it is proposed to be solved. I didn't feel that any of the diagrams were unnecessary. However, I am reducing 2 points for the lack of UML diagrams."
0,All the basic parts have been incorporated in the project document.
1,"Some of the functionality to be added isn't included in the document. The third problem has a lot of little aspects which are to be followed. For example the ""more"" button to display the whole comment hasn't been included. Same goes for the ""graying"" of certain reviews."
1,More in-depth information should have been provided. The classes or files to be modified for the respective changes would have been a good idea to justify the proposed changes.
1,No information has been provided regarding the code to be modified or added. Hence cannot comment.
0,Good visual information has been provided. If a flow chart depicting the various stages for each problem would have been a good idea.
0,The authors have done a great job in writing all details of the project elaborately. The only thing missing is a test plan for the project.
0,"1. There is a detailed explanation of all modules of the project


2. Images added to the project helps making a clear overview of the project and understanding it in a great  detail"
0,"1 The changes proposed are easy to understand


2. The plan of execution is clearly elaborated in modules"
1,"1. The job described is appropriate and easy to understand 


2. They have done a good job in using images to help in visualizing things better"
0,"1. Good amount of screenshots added to understand the project well


2. No UML diagram required for the project"
0,"The introduction in wiki isn't completed very well. Only a small part is used to introduce this project. When I read it for the first time, very difficult to understand. It only introduces what to do but not why to do that."
1,"It's a Mozilla project, so most of this is just provided by Mozilla, and there's not a whole lot that could really be added.


 


A little bit of background on what Servo is would be appreciated, though, since most of the students in the class have never interacted with Servo ever."
1,"The design document does a good job of covering the requirements, the work that was completed during the OSS project and the work still left to do. It was concise and made good use of external references to keep it that way. However, one portion that is missing is the testing plan. How does your team ensure that the models they create are functioning as expected?"
1,"The document is quite well written. The purpose of the project, the proposed actions, and the testing plan are all apparent from reading the doc. There is, however, a general lack of visual aids, so it hard to see what the current state of the project is. Another suggestion would be to outline a more detailed and thorough testing plan, and also putting in a seperate section by adding a eading."
1,"The design document is almost appropriate. I see that the project is continued from the previous OSS project. I feel the authors can add sections to explain what they plan to do ahead with the project with more information. There is no testing plan present in the wiki, authors can add this section for review 2."
1,"All was well with the design doc. The purpose was laid out well. Although the specifics of the project design were left out, the big picture was communicated to me. There was no test plan in the document. However, the description of their project seemed to have included a way to test the difference between Servo and Firefox."
1,They have the general structure. It would be better if they can include more background information. And they can reserve one extra paragraph for their team members.
1,"The design document clearly mentions the purpose of the project. They also mention the proposed next step. But the authors need to add more sections in the design document:


1. ""Test Plan"" is not mentioned anywhere in the document.


2. Also, the authors need to add a ""Proposed Design"" section.


The ""Work To be done"" section can list more specific details such as models/controllers to be changed (or related code changes)."
1,"The team has done a really good job describing their previous work, as well as what they plan on completing in this up and coming iteration of their Mozilla project.  They have done a good job breaking it down into steps and describing each step in detail.  One thing I think should be added though, is a UML and Wireframe.  Both of these can be super helpful when trying to get a team on the same page design wise.  My favorite website for working with wireframes is balsamiq.  A free trial can be activated on sign up here https://balsamiq.cloud/.  When it comes to creating UML diagrams, my favorite free program is draw.io which can be found here https://www.draw.io/."
1,There is no testing plan present. The design doc can be more informative and have more images for the reviewers to better understand the approach the authors would like to take.
1,"It is apparent that the functionality required is known by the team and that they have a plan of action to accomplish the changes needed. Specifically, the Work to be done section does a great job of this, by listing the objectives of the project, and explicitly detaling how the team will tackle each of the tasks."
1,"The explanantions provided are very clear and understandable. The specific actions that team will take for each of these changes are explicitly outlined and the scope of their changes is very apparent. I would suggest that the team be more specific with regards to which files will be modified and, perhaps also use a few visual aids such as mockups to illustrate some of the visual portions of their proposed changes (e.g. how the differences between rendered web pages will be indicated)."
1,"The proposed changes, while clear in overall objective, were not very detailed. It is hard to gauge how many methods will be added and where. In addition, I would suggest that the team add a files modified section to their doc, as it appears that they are adding a lot of new functionalities. Based on the scope of the project, it is apparent that the code could end up a bit more ""smelly"" by the end, so the team should make sure to explain in the doc how they will implement these features while avoiding this."
1,"There are no visual aids in this doc, and I think there should be at least one. Based on the scope of the project, it is apparent that a lot of classes are interfacing here, and new classes will have to be made. A UML diagram would be very useful provided that they are accurate. In addition, a visual aid that shows how web page rendering comparision process will be done will also need to be added, as it is an important and visual component of the project's objectives."
1,"The teams document shows the completion of all the required functionality. It seems they completed it all during the OSS Project time line. The Subsequent steps portion of the Mozilla project description is included in the future work section, so they have plans to implement all the functionality required."
1,"Overall very well done, especially in the future work section. One area I can see room for improvement in is the previous work section, parts 3 through 5 could have some small explanations added to them."
1,I didn't see any potential problem areas. I am also not familiar with the Mozilla codebase though.
1,The added screenshot of the randomly generated HTML page really helps readers to understand what is being created. Looking forward to seeing what it looks like after the future work is implemented!
1,"Yes, it incorporate all of the functionality required."
1,It doesn't introduce how to do it in detail. e.g. What is geckodriver? How to compare the difference between 2 pages? What code do you need to implement?
1,The design is reasonable.
1,The wiki doesn't have many visual aids maybe because hard to explain in a visual way. I think can put some pictures of every steps in what to be done section.
1,"The document does not clearly mention about the proposed design. It mentions ""what"" tasks need to be completed in the ""work to be done"" section but does not mention ""how"" to do them"". A proposed design section lists screenshots and descriptions of how the application will look or work after the changes are made. The ""work to be done"" section lists the specific changes that need to be done to achieve the proposed design."
1,"The authors have clearly explained the tasks related to the project. Some of the sections needs more explanation. Such as section 3 in ""Work to be done"" states ""-Generating elements trees of arbitrary depth"". The authors could explain these bits in more detail."
1,"The authors do not mention about the proposed design. It mentions ""what"" tasks need to be completed in the ""work to be done"" section but does not mention ""how"" to do them"". A proposed design section lists screenshots and descriptions of how the application will look or work after the changes are made."
1,"The authors have only provided one screenshot of a generated HTML. They need to provide more diagrams which will describe aspects of their application such as:


1. Modules of the project and their relationships. 


2. Flow of the application.


3. Testing Life cycle specific to the application (if different from 2)."
1,"Yes, from the mozilla project page I can see most of the work is present in the wiki. The authors have tried to incorporate all the functionalities from the git readme but since old code is not present it is hard to understand the work done."
1,"The work is explained very well. If there was a link to check the previous work, it would be easy to understand the future scope."
1,"The code is not present of the existing work done. So it is hard to evaluate whether the code will become smelly. Although from the design doc it is hard to say whether the work can be done using existing packages, but if there are the authors should use those."
1,There are images of only old work done. The authors havent used any visual narrative for the wiki page. The authors should add more images and make the wiki more informative.
1,"The authors have tried to incorporate all the functionalities as they have mentioned it in their wiki. However, since there is no code present, it is hard to evaluate whether they have implemented all the given functionalities."
1,"The explanation is easy to follow just by reading the code. However, I think more information can be present in wiki and the authors can include images to make it more informative."
1,"The project is based on Mozilla and python. There may be packages that will implement the proposed functionalities. However, adding new functions may not make the code smelly as it is a scripting language."
0,There are no visual aids present in the wiki. The authors should add some for the reviewers to better understand the project.
1,"The design document incorporates all the functionality required. However, this functionality was only described in words. A kind of pictorial representation or a flowchart of the code that will be written would have been useful to the doc."
1,"The explanations were a little hard to follow at times. However, most of the time, I understood the changes that would need to be made to the first part of the project. Adding a link to new topics so that a reader can have the chance to learn more if they are confused will be beneficial to this document."
1,"Step by step explanation of the instructions were given in this document. However, the discussion about design could have used more explanation. Rather than restating what the instructions stated, this design doc will benefit from adding specific details about how they will implement everything."
0,No diagrams were included in this design doc.
1,"It absolutely incorporates all of the functionality required because it's mostly just saying what Mozilla said again.


You couldn't possibly add anything to this that would be productive, since then it would fail to meet what Mozilla asked for."
1,The explanations are taken from Mozilla. I can't imagine what they would do to improve upon them.
1,"They're not so much adding stuff to existing classes as doing their own thing (as ordered by Mozilla), so that doesn't really apply.


Servo is some of the smelliest code I've ever worked with. They couldn't possibly make it smellier on their own.


... Gems? This is in Python... Moreover, they are just doing what Mozilla told them to, so that's not really applicable.


N/A. This is for testing, not for use in production.


They aren't really allowed to expend effort on the design. It's not their design. It's Mozilla's."
1,"There really shouldn't be many visual aids here. Too many would just clutter the page. UML diagrams would especially be inappropriate.


 


The one screenshot they have is plenty."
1,"They have provided the external link to introduce the required functionality, but it would better if they include some materials on their own page."
1,They have convered the requirement but there is no plan.
1,Too early to check that because there is no plan.
0,They just use a screenshot but the picture is too small.
1,The design does incorporate all of the required functionality given in the google doc.  The required functionality seems to be fully understood by the team as shown by their step by step approach to tackling each of the functional requirements.
1,The changes the author has proposed seem solid!  They have laid out a great plan of work and have included the files that they plan on changing and what they plan on doing in each of those files.  This makes it easy for reviewers to understand the teams thought process and keeps everyone on the same page.  Keep up the good work.
1,The design proposed by the team is good.  Their step by step course of action sufficiently describes how they intend to approach the project.  One thing I would definitely suggest adding to their design document though is a UML diagram and a Wireframe as explained above.
1,The team has not as of yet included many diagrams or visual aids.  I would highly suggest adding a UML and Wireframe as described earlier.  The team did add a sample screen shot that complements one of their required functionalities though.  This definitely helped me as a reviewer to understand the scope of the problem.  I would love to see more examples like this attached to other functional requirements.  Other then that great job!
0,"It does indeed do that. A bit of a shame, since this project is going to make Expertiza even harder to use and understand from a student perspective, but that's not the fault of the team."
1,"The design appears to have incorporated all of the functionality they needed to. The team also was able to seperate the long paragraphs that the requirements were written in into clear action items, each with a detailed description of the problem, a picture to depict it, and what the planned changes are."
0,"For the scope of their project the implementation the team has planned looks good to me. Most of the changes are in the UI part (View file, CSS changes) so they need to make sure they coordinate all the sections to different views and control the specific actions. It looks like the changes for the system doesn't require any additional gem so the implementation decision is correct. The team should have minimum code in the view so that it doesn't increase the response time of the system.


Any of the implementation could make the code smelly so the team has to be careful in not putting too much logic into the view which is the standard followed. Optional additional improvements have also been given which is good."
1,"This team has proposed a good plan of action for solving the problems given to them. The HTML and CSS implementation for altering the tables and cleaning up the whitespaces has been explained in great detail by this team. However , regarding the other implementation planned, the team has not included any explanation of how they will bring about the said changes or what files they did to edit to make the said changes. they ha"
1,"The designs appear to be sound. There are no apparent code smells, and, while there was a lack of designs/mockups, it is clear that the proposed changes aren't too complicated. However, the team did not indicate which files and classes they are going to change, so it is unclear whether or not unecessary or out of place code is going to be added."
0,There is a focus on reusing code wherever possible including utilizing gems.  The changes should simplify the layouts which should only help the response time.
0,The design that the authors have proposed seems apt. There are no potential flaws in the design. They have done a great job of explaining everything in detail.
1,"The authors have not mentioned about the code changes in the proposed implementation. They need to mention the code changes required and the entities that they wish to add or reuse. Again, this needs to be mentioned in a ""proposed implementation"" section."
1,"The changes proposed are mostly to be implemented on the View side and hence I don't think there is anything too complicated or something that could increase the response time of the system. The team has mostly figured out as to where the changes need to be made. However, it would be helpful for the reviewer to know where they intend to make these changes."
0,"Overall, I do not think any of the proposed changes are ""smelly"" or will cause problems.  They are all sensible changes that make sense."
1,"The mock-ups provided look good, but what I notice is they seem to essentially all be the same as the ones provided in the requirements document. Where this ok right at the beginning, it doesn't seem to show any editing to indicate your specific contribution. I would urge you to consider showing by some fashion how your contribution will improve expertiza. A simple mock-up is alright, at least something that illustrates each change you plan on making. Also perhaps you should show a UML diagram showing some sort of flow of information that represents what your project aims to do and the problem it aims to solve."
0,All the visual aids are necessary. Show the functionalities directly.
0,"The diagrams provided by the author gives the reader an idea about how the pages look currently and allows the reader see what the proposed changes will do to these pages when incorporated. So, the authors have done a good job for this part."
0,"The visual aids are extremely useful.


All the diagrams are useful, to the point, succinct and follow the conventions.


The high level diagrams are also to the point"
1,"The team has given number of screenshots to help in understanding the project/problem statement. All of the mockups are necessary and they aid in the changes the team has proposed. 


There is no specific UML diagram given, according to their course of implementation i believe that is not necessary and mandatory in understanding the functions."
1,"This team has included a couple of screenshot images to aid the understanding of their ideas. They have done a good job. The diagrams included in the wiki makes it clear what problems persist in the views of response report and summary report and it also assists the reviewers in visualizing the changes that the team has proposed. However, the diagrams included only consists of the images of the existing views. It would have been better if the team would have added visual representation of their implementation in some form, maybe even a hand drawn view with the proposed changes would have also sufficed. 


The doc does not contain any UML, but given the facts that the changes this team intends to make are only in the views, so I believe a UML is not required as such to show the implementation.


Thus, for your next submission , make sure you include diagrams of how the views would look after the proposed changes have been implementation . This would make your goals absolutely clear to the r"
1,"The visual aids are used to illustrate the problems and serve their purpose well. However, I would suggest a design mockup to be made either on paper, whiteboard, or wireframing software. These types of pictures will help visualize how the changes will affect the application and allow for reviewers to spot potential problems and suggest changes to the design."
1,Visual aids were helpful in describing what the issues were. Could be helpful in some of the cases to see a representation of what the finished product could look like.  The css changes could be quickly mocked up by editing the css directly in the rendered webpage.
1,They have provided adequate visual aids. There is no apparent need for a UML diagram. They have provided a whole lot of screen shots to help make things easier. I would have loved if the authors had added some screen mock ups to help make things more clear.
1,The authors have done a great job adding all the required screenshots in the documentation. An improvement on this would be to add more application flow diagrams to explain the various scenarios.
1,"There are no UML diagrams but they have explained it with the use of mockups pretty well and hence I don't feel the need for further details regarding the flow they would take. The images convey what the current system is like. Would be nice to have a few visuals on how it would look after changes being made, but well done."
1,Several different screenshots really helped convey what changes needed to be made. Maybe a UML diagram or mockup would have worked as well but I think the screenshots made the best since for this project.
0,"Under proposed implementation, I don't think they need to explain each step they are going to use for the problem, instead, they should focus on describing their ideas, which would be enough."
0,The authors have provided adequate explanation by exactly specifying what needs to be done and how they are going to this at code level.
0,It is well explained. Good job.
0,"I have very little idea what they're actually going to change or how they're gonna change it. It's nice to know what the files they'll add and change are, but most of what they're saying is that they'll add a bunch of buttons and checkboxes that let stuff happen, but they don't say how any of that is gonna get done, just ""we will have to add a Boolean field"" or that they'll render a ""java script partial."""
0,"The explanations were well written.


I had only a small confusion in the Implementation Doubts section. Are the authors others about their doubts or the doubts they faced while implementing?"
1,"This falls under the same category as #1, so I didn't double dip and dock a point here. But again, great job overall, just expand a bit on the implementation stages, the goals each one accomplishes, maybe more on how you will perform each one, etc."
0,Design does incorporate the issues that are to be addressed but the explanations could have provided for the user to completely understand the project.
0,The author has suggested the change and how they are planning to do it but it has not been explained properly as I got confused with the second line in Tone Analysis Paragraph. Also the link provided is not working. So it is somewhat hard to follow what and why that particular solution is provided.
0,"1) They have mentioned the files in which the changes are to be made, but they haven't mentioned the methods that they are planning to add . 


2) How is the code modified is not mentioned, so it would be hard to comment whether the code would become ""smelly"" or not


3) It doesn't seem that there exists any gem for simp-lying the aim for their project and the files they target to modify seem correct .


4) The new design doesn't change anything in how the data is to be fetched so it won't affect the response time in any way.


5) More effort could have been given in explaining the images are shared as that could have been easy for the user to understand the solution for the project issue."
0,"1) The visuals aids have been provided but have not been explained so it is hard to follow what exactly are those images. The quality of the images could have been improved by designing the diagrams online rather than drawing it with pen and paper. 


2) The images confuse me more about what their aim is for the project.


3) UML Diagrams have not been included.


4) They tried to give the diagrams for the results they aim to see after the completion of the project but do not give an idea of how are they going to achieve it from code."
0,"From what I can see, the design seems to have taken into account all of the required functionalities. The document had an explanation on how each functionality was going to be implemented and also mentioned the names of the files to be modified and the new table to be created. The level of detail was such that even the primary key and foreign key of the table was mentioned."
0,They have included all the functionality required.
0,The doc incorporates all the functionalities required. The team has done a very good job of trying to explain every aspect in detail.
0,"The functionality is covered in the proposed implementation section, but this section is too verbose. This may be rectified by adding mockups as stated before."
0,"Covers the final project description perfectly, great work"
0,"The design doc has incorporated all the functionality required, except that they did not write the set up steps."
0,"Yes. Form Proposed Implementation, I can tell they really understood the requirements and figured out how to implement in steps. But I think they may miss something: one of E1818 requirements is that the system can present the correct teammate evaluation rubric based on role(duty) of the team member, but in their wiki I can not find related implementation plans or proposed implementations."
1,"They wrote the potential changes in Propose Implementation which is quite easy to understand and followed the requirements. But it's just too short, details of implementations are not discussed and it's almost a copy of the requirements, so I'd recommend apart from Propose Implementation they may write Implementation Plan which discusses each proposed change in detail and includes newly-added files, classes, methods, variables and their functionalities."
0,"One change I would suggest in the proposed implementation is adding the files which would be affected by the change proposed or in the file modification adding what this change is for.


The proposed changes no where mention when the instructor will add questions related to each role.


 


overall the proposed implementation gives a good idea what one might need to do to accommodate this change ."
0,"These changes are difficult to visualize.  Adding one or two mockups with arrows with the bullet points pointing to the relevant section of the mockup would be helpful.  For example, the bullet item ""When a student goes to “Your team”, he should be able to select a duty from a drop down menu."" may be better shown with a screenshot of the ""Your team"" page with the added drop-down and an explanation of its function."
0,"The team has already identified the files that need to be changed and are planning to add a couple of new files. The team seems to have figured out a lot of stuff already, which is excellent. The explanation is easy to follow and is adequate."
0,The explanation is quite easy to follow and the proposed changes seem to be correct to be implement the intended functionality.
0,"Adequate explanation was provided on the features that are to be added. Everything from the problem statement to the UML diagrams to the file changes to the Test plan was explained. Also, the changes were explained in a simple manner and I had no trouble following what they had written. Hence giving a 5."
0,It's hard for me to guess what method will be added into which class since they explain the whole things together without subdivided them into subsections.
0,"As indicated in the proposed implementation, all the changes and additions that the team intends to do sound quite reasonable. They have also mentioned the files that will be modified/added. So, overall they have done a good job with the proposed design."
0,"They're mostly making their own classes, so that isn't relevant.


I think this code might be adding a lot of confusing relationships and putting in methods places they might not belong.


They don't really look complicated, they just look empty.


Probably not.


Yeah, the design looks like it's in the pre-preplanning phases. For example: Why do Questions have a Questionnaire? Why don't Questionnaires have any Questions? Why does the proposed implementation talk so much about keys to tables, I thought this was supposed to be done with objects? It's just all very confusing and I'm not sure it's nailed down yet."
0,I don't think the proposed designs would cause the problems mentioned above.
0,The design document could have explained some sections a bit more like what test cases they plan to write for the test cases
0,"Looking mainly at the UML diagram for this question, the design puts the methods in the appropriate classes, and creates a table with the necessary fields. The only potential chance I see for code smells would be a DRY problem, with duty methods potentially being implemented for students and instructors. But the current design avoids that issue."
0,"Their goal is to add a new function to expertiza like a role-based reviewing so that students can select their role(duty) of an assignment and will be reviewed through a role-based evaluation rubric. According to their wiki, all their proposed changes are reasonable and necessary to achieve their goal, so it's hard to tell if their design and code are problematic. But I noticed a minor problem: In ""Files that have to be modified"", you may miss ""view/"" for the last three directories because I just can't find such directories."
1,"There is no mention of methods which will be affected only class has been mentioned.


From what I can say there would be a need to add controller, model and view of duties, in the duties table should there be a reference to rubric associated with the duty, also the primary key would be based on the name of duty and instructor id, it would have been better if they mentioned this in the files to be added"
0,"The ""Files that have to be modified"" section could be made better by going into more detail with regards to what the proposed modifications are."
0,The design proposed by the authors seems good. They have thought of every aspect as of now. I don't think there are any potential flaws that need addressing to.
0,The design is well explained. They have not stated any coding strategies they are going to follow hence cannot comment if the solution might make the code smelly.
0,"1) I didn't find any improper method additions in the design


2) The document explains how different constraints are to be handled and I don't see any potential code smells.


3) The design is simple enough and as most of the changes are in views, I don't think additional gems will be required.


4) Since the Duties functionality will be added to existing views, I think there won't be a major change in the response times.


5) The design looks good and the team should start implementing it


For the above reasons, I am giving a 5."
1,The team has done a good job with the UML diagram that have provided. Only suggestion that I could give is to provide a small explanation for the UML diagram so that it is bit easier to understand.
0,"The UML class diagram is necessary and could be useful if changed, but it doesn't look like it is correctly constructed, unless I'm really confused.


It appears that Question has a single Questionnaire, but Questionnaires don't have any Questions, which doesn't sound like that makes sense.


It also appears that User just has a random line attached to Duty, which isn't a thing in UML class diagrams.


I can definitely see this diagram being incredibly handy for understanding the design if fixed and improved, but, as it stands, it's just confusing.


It does seem like the design isn't figured out yet, though, and the diagram just reflects what the current understanding is."
0,Yes. The UML diagrams help me understand the project better.
0,"The UML diagram looked very informative. But apart from that I could not find other screenshots .


They could have provided some more diagrams that could have explained the design doc better."
0,"the UML diagram really helped me understand the flow of this project. Without the diagram I think the write up may have been hard to follow, so I am glad the team included it."
1,"They have made an awesome UML diagram to illustrate the relationship between the newly-added Duty model with other relevant models. It's intuitive and very helpful for readers to understand what they are going to implement the ""Duty"" functionality. But as a reader, I got confused over the following things in the diagram and you may consider fixing these:


1.Is the variable dutyId necessary in Duty? because I think rails can auto generate ID for any created model itself.


2.It's not clear what ""<<users>>"" on those doted lines mean."
0,"The UML diagram gives a good idea of what approach they intend to take and where all the changes will be.


The diagram is just enough to give a accurate depiction of changes required."
0,The UML diagram is a really nice touch that allows a lot of information to be shown quickly and concisely. It is suggested that similar mockups be added to the test plan and proposed implementation to serve the same purpose.
1,The UML diagram is appropriate and helps a lot in making understanding things easier. The team could have added a screen mock up but that can be overlooked considering the amount of detailing in the document.
1,The design doc contains a UML diagram to explain the functionality. But I suggest they add a small explanation of the diagram in order to make it more easy to follow.
1,"There was a single UML diagram which was a class diagram that was very detailed and also showed the relationships between the classes. But I felt that at this stage, a usecase diagram and an activity diagram would have been better choices to help explain the problem clearly. There was also no mockups, hence I am deducting 2 points."
0,"Well after checking the specification provided for the project, it can be clearly observed that the team has covered all the required functionality in the documentation."
0,"Adding duties to each project and asking related questions so that they better incorporate what role each person had is a great idea.


It appears they have looked into all the functionalities, the proposed implementation gives a good picture of how they plan to move ahead with the implementation"
0,The requirement mentioned creating a new popup view and creating a new method in popup_controller.rb. These were not included in the design.
0,"They included the layout of their two proposed views. But without before changes views, it is hard to understand what is the proposed changes."
0,I don't think the proposed design would cause any of the problems mentioned above.
0,"The diagrams are helpful. But if they could do it digitally, it would be better."
0,"They seem to have covered most parts (Purpose of the project and background information, what they plan to do, how will they do it, files associated with the changes). However I could not find the testing plan in the document. They have done a really good job at drawing the images of how it would look like later. There are some thing I would recommend, the background info does try to explain but it seems a little hard to visualize what you are trying to say there. Adding more visuals would help reviewers better understand your work. One more thing I found was, in the second image under reviewee, it is not clear to me how ""team 1"" and ""student 1,2,3"" are different? A bit more clarification and it would have been just perfect."
0,"The question has wrong links I suppose (Spring 2017). I had to go to the course page to see the requirements. 


The team seems to have a pretty good idea of the purpose of the project and how they will do it. Although I found link 2 not to be directing where it should (This was different than in the google doc where all the projects are listed). You might want to fix that."
0,"They have done a good job at trying to explain the process of what is needed, what they plan to do where and how they plan on doing it. They have also done a really great work at picturing the final outcome, how it would look once implemented. However, as I suggested earlier, I would try to add more words/visuals to help reviewers understand the ""background info"" section. I personally felt it was a little hard to follow. Apart from that, you might want to fix the link 2 in wiki page."
0,"As far as the files that are concerned for this project, they have mentioned the name of the files and how they plan to add stuff to it. As far as the question asks if any of the work could result in a smelly code, I cannot find that much detail (not sure if it is required at this stage of the project) to evaluate that. I had worked on Mozilla project so I do not have enough knowledge to recommend which gems would make your job easier."
0,"The diagrams have the details which help users understand how they should expect the output to look like. However, I would still suggest to add more visuals in the background info section. It seems that the team has a clear understanding of what they have written but I personally feel they could do a better job at conveying what they have in mind. Apart from that, great job!"
0,"Yes in the implementation plan the team has covered few functionalities and missed few. Mainly they have to implement UI changes such as creating tabs for each of the review rounds. They also have to complete the tone analysis as well and they have worked to add those functions.


I could see in the expertiza document that title chart visualization has to be done, and no where in the design document they have mentioned that. Change to the controller, popup_controller.rb is not mentioned anywhere in the document. Please try to add these changes."
1,The team has provided information on only few of the functionalities that has been mentioned in the expertiza design document. They haven't given any written explanation on the design they are following. It is really hard to follow what the team is trying to implement. Please explain more on the changes/design.
0,"The team is looking to make changes in the ""view_review_scores_popup.html.erb"" for the tone analysis and ""_answer_tagging_report.html.erb"" files. The team has to make sure they won't affect the existing files and not add more lines of code which prevents the code from being ""smelly"".


I see the changes are made to the view files, so there are no any existing gems to be used. The response time has to be maintained properly so that it doesn't affect the performance of the system. 


As there are changes in pop_controller.rb the team could have explained any particular design they are following to modify them."
0,"The team has made use of the design layout to explain visually on how the problem statement could be explained. All the diagrams are necessary and they help to understand as the team didn't provide any written explanations. Diagrams are drawn neatly.


The diagrams are not high level, they give in depth information on the design."
0,Yes the design document in cooperates the requirements document specifications completly
0,"The author did provide a basic intuttion about what was to be done, but having more about different steps to be impletementd and how would that be done will be very helpful to have"
0,"The design from diagrams looks great ! but if the authors could talk more about the requirements like  about files to be edited , more details on the implementation plan , it will be good to understand from a readers posint of view"
0,"Diagrams for one of the primary views was really nicely drawn and displayed , I liked it . If the team could add uml diagrams which talk about the interations / steps involved in making the changes , it will be really good"
0,"Yes all the required features in the problem statement are covered by the authors. However, the problem statement includes charts to be added in the views. The team has not given any project design or implementation details about how they are planning on achieving this feature. They have just provided two pictures of the potential results of how the charts would look. While , it is possible to understand the ideas of the teams, it is quite difficult just from the diagram. 


I would suggest to include a detailed plan of action about their implementation. They have included a list of files to be modified which is great. It would have been better to explain in a few lines , the changes that they plan on making."
0,"The explanations provided by this team are very short. They do explain the ideas but not many detailed have been divulged. The files to be modified have been provided which is good. However, what changes the authors intend to make have not been provided and explained. Only diagrammatic representation of the result has been given. This alone is not enough for the reviewers to gauge the performance of this team. 


For the next submission , i suggest to explain the proposed design and the problem statement in detail. Include a flowchart or a UML diagram to explain the functionality and the data flow.


Also thoroughly test the code. Include a test plan with an exhaustive set of scenarios. 


This would enable the reviewers to better understand the work of this team and thus analyze their performance and make it easier for the readers o understand.


Also i would suggest to add a brief explanation of the two result images provided and clearly indicate the part that has been a"
0,"The authors have not provided a detailed implementation plan and thus it is difficult to answer this question. The method proposed by the author seems sound and should not make the code smelly.  In order to perform tone analysis , the authors are making use of a web service which is great. Thus not a lot of code has to be added and the code should be reasonablly DRY."
0,"Yes, some visual aid has been provided. This team has included a hand drawn diagram of the potential page. This makes it clear to the reviewers what the team is looking to implement. However, i suggest that the authors should include a flowchart to explain their proposed implementation. This would make it easier for the reviewers to understand.


Also , i suggest this team to include a UML and a use case diagram to explain the data flow and the different operation scenarios."
0,"testing plan is not mentioned in the document. A plan to show how we can check the comment tone, or where do we add the comments and where can we see the tone of our comments that we added."
0,The design tells us most of the things that is required from the project they have also mentioned using a  diagram what the view should ultimately look like. A little more information regarding the project could have been provided in the project.
0,"The changes mentioned are pretty straightforward, more information on how their plan to make those changes are should be provided in the document."
0,"They should consider alternatives for the design and let us know why they decided to go with one over the other, that would be helpful for the reviewer to get a complete view of the direction the project is headed in."
0,"They have provided a high level design on how the view is gonna look like. The diagrams have been repeated in the wiki page and the github link they have provided, just one would have been enough."
0,"The purpose and design are mentioned in the document. However it does not cover the Testing plan.Also, there is a blank header for Team and no details have been mentioned under it. ""Tone-Heading"" is a sub-header of Files Modified. It should be put in a separate heading. Also, I feel that much of the explanation in the Tone-Analysis and Background Info section is taken directly from the Project Specification. Maybe the team can explain it in their own words."
0,The team has covered all aspects of the project mentioned in the problem statement.
1,"The team has adequately explained the approach. The hyperlinks to Peer Logic for tone-analysis is useful. There is another hyperlink to API endpoint in the Tone Analysis section which is broken.


In the Background info section, the line  ""In addition, tabs were added to separate each review round."" is confusing. I am not sure if by tabs, the team means a separate column for each round of review or just tabs to improve the visualization. 


In the Files modified section, the popup_controller.rb file is not mentioned.A method has to be added to it.


Also, the team plans to depict a tile-chart visualization,It would be easier to visualise it using an actual chart, the link to which is given in the doc containing t"
0,"So far,the design looks good and I cannot comment if the problems can arise,given the approach that the team has mentioned.I feel that the design can be explained in more detail."
0,"The team has used pictures to explain the design. The pictures although useful, are not properly sized and are somewhat of a rough sketch. If tables had been used or if screenshots could be posted from the actual expertiza page,it would be much more visually attractive and easy to understand."
0,No some features are missing as the wiki needs to be more informative. The work they want to do is only showed using images and not any information. The wiki needs more work. I hope by round 2 they will have a better wiki.
0,They have not explained what they will do. They have just added the images and nothing else. The authors needs to update the code for us to understand what they want to do.
0,Hard to understand as no explanation is present. Code also not given to evaluate previous work. The authors needs to step up their game and work.
0,"There are only images present in the wiki with the least amount of information. Although using images is a good task, however, they need to explain as the reviewer cannot understand the work just by seeing the images."
0,The wiki lacks a lot of information. The design doc is incomplete and hard to understand. Poor work by authors.
0,"No explanations provided, just images of some structure that they will make. No info on how they plan to finish the work."
0,I have no idea how the authors plan to get this thing done. They have just added images. I cannot understand what they want to do. They need more work on the wiki.
0,No information to explain the diagrams which makes it hard for me to understand the structure of the project. Just adding images wont complete a wiki. I hope by round 2 authors do the necessary required changes.
0,As per requirements ad descriptions of their topic their design incorporate all the functionality that they need to implement.
0,The descriptions of their proposed changes are well-explained.
0,They have included which files they are going to modify. It seems reasonable to change them to improve the Expertiza application for an instructor user.
0,"Guys did an awesome job adding hand-drawn mock-ups to illustrate of what to expect at the end of their work. I wish the pictures that are added to the wiki page would have been nicely sized as on the GitHub. Also, it would be easier to follow the current problems if they have added the screenshots of the current state."
0,"The designed document had very little explanations.Only the background info, tone analysis section and two diagrams were present."
0,"The overall explanations were not sufficient. Too little was explained  in the ""Tone Analysis "" section"
0,"The design document had the methods missing.


The authors could have written down the methods that would be changed in the affected files."
0,The design document lacked sufficient diagrams except the couple of tone analysis diagrams.
1,"I like the use of the problem statement to list out all the items you need to address. However, while you do address these I think you need to add a section telling how you will fix these issues with your own functionality. I think you do this in part, and I if you keep on this same line of thinking when discussing the implementation you will earn full points."
0,"Nope. They're adding the methods where they should be.


I think they might be about to make code that interfaces with the tables directly instead of using objects to abstract it away. If that's true, then it'll make it real smelly.


I'm not familiar enough with rails to make this call. I doubt that there are any gems that do this.


I mean, it might. I don't see why it would, though.


I think they have a good starting place, but I'm just concerned about that object v. table thing."
0,"The authors did not provide the specific methods that would be touched upon during this project.


The designed was well explained, but I felt they could have explained the flow chart a bit more and they could have explained the exact changes they would make in each of the files."
0,"In the Proposed solution section, the team states ""However, they will increase the benefit that each person gets because they can get feedback that is specific to their project."" I am not sure how each person is benefited. The project document states that the grades don't have to be considered as the questions will be too easy. Is so, how will the project ensure the quality of questions, especially since they are not graded. Students might be tempted to skip these questions all together."
0,"The design appears to be very sound. The authors have clearly thought out the implementation and design process. This is obvious from the files list they have added, and the detailed implementation details they have provided. None of the problems mentioned above seem to exist."
0,"Yes , the design proposed by the team looks neat for most of the part and doesn't look smelly. It mostly involves changes in the migrations and the views and thus seems to be pretty DRY. It should be fast and should solve the mentioned problems.


However, I have a few suggestions. Firstly I can the whole design and correlation would be neater if a separate table was created for the supplementary review questions and linked to the teams with a foreign key instead of just creating a column and populating it with the ID every time a questionnaire is created. Inside the subclass created they can have a no review method which can be checked every-time to check if supplementary questions are added.


Also this team had stated that the supplementary review questions added are not be graded. But in the flowchart, it is said that the scores of these extra questions are appended to the review scores. But my question is if these extra questions are not graded, why score them at all and add their scores.?"
0,The team mentioned the files to be modified. If possible addition of a little bit more finner details will be really helpful to answer this question
0,Files that need to be changed are listed. Can only comment on the code changes when the design proposals are implemented.
0,"The proposed solution seems adequate for the requirements. They have proposed to make an extra view where the users(students) can add extra questions in the review,"
0,"The team has mostly figured out as to where the changes need to be made. And the design for most part seems to be sound. However, like states earlier, I am not too sure of whether the design should be as stated. It takes a lot of effort for a reviewer to review a work and burdening him with additional work should come as optional and with a bonus to provide incentive."
0,"Not a ton details (like classes) were added to the design document.  However, of all the details that were added, none of them are ""smelly"" or seem to have any problems."
0,This is a good design for the task at hand
0,The subject like instructor should use a different shape to be distinguished from actions.
0,"The diagrams are super messy. There are both arrows that turn into other arrows at corners and lines that properly continue through the corner. There are places where multiple control flows combine into one and there's no combination diamond there, they just awkwardly kinda kiss


These are flow diagrams that have blocks like ""Instructor"" and ""Student (team_id)"" and ""Your Work"" that are clearly not actions that are being taken. There's also no start node or end node in any of them (the little black circle in a white circle and the other little black circle that's on its own)


There's also a decision block (is SRQ enabled?) that has one exit and no condition on said exit.


They would definitely be useful if they were actually UML flow diagrams, I'm sure, but they're mostly just confusing. The first one is probably unnecessary, though. It just kinda looks like a list of buttons the user is pressing.


The screenshots are nice, though. Love those."
0,The images and visual aids explain the flow very well. There were no UML diagrams in the document though.
0,"The team has made good use of flowchart and screen captures to explain functionality. There is not much text, given that the diagrams are sufficient to understand the work flow. The changes that will be made in the User Interface are also represented and it makes the document that much more crisp and clear."
0,"A lot of visual aids are provided - 3 flowcharts & 3 screenshots.


1) some diagrams are unnecessary and do not help reader understand this project


Not true. The flowcharts are very essential for understanding the flow of implementation and control.


2) some UML diagrams do not follow the conventions


There are no UML diagrams in the document.


3) some diagrams are too high-level design and do not provide enough details


Not true. Sufficient explanation is provided for each diagram."
0,"Yes, the diagrams added are very helpful. The flowcharts added make their implementation ideas quite clear. They have added mock links in their views and added screenshots of that. I believe this is amazing as it gives the reviewers an idea of how the implementation would look. 


Just one suggestion would be to include the UML diagram , to explain the data flow from the controllers and models to the view files. This would make the implementation idea extremely clear and easier for the reviewer to gauge the implementation."
0,Good visual aids were used in explaining the requirements . UML diagrams provided required infromation
0,"The screenshots depict the proposed solutions quite nicely. Some more screenshots can be added for the features described - like the review results page.


Also, the first flowchart for creating SRQ seems quite unintuitive, as it connects the instructor enabling SRQ and student creating a SRQ."
0,The authors have posted a lot of pictures and flow diagrams explaining the solution. This makes the solution clear for a reviewer. They have described the design strategy with flow charts which is nice.
0,"The UML diagrams are helpful and they have explained it with the use of mockups pretty well and hence I don't feel the need for further details regarding the flow they would take. The images convey what the current system is like. They also have some images depicting how it would look after the changes. My only concern is with the UML diagram as stated earlier about SRQ grades which contradicts with what was stated earlier. Overall, well done."
0,UML diagrams and screenshots were both included in this document.  As stated above they really help in relaying the information to the reader.
0,Your flow charts helped me understand what exactly you are doing. I do think that there should be a screenshot of the review page and the review results page to stay consistent and to just illustrate where your changes will be implemented.
1,"The team has provided a list of tables without actually explaining if there are some things that need to be regularized or are redundant. The doc is very crude as of now and there is nothing much a person can make out of it. I would have loved if the authors had added some explanation, without which reviewing becomes very difficult."
1,"To be honest, I didn't get what the team is trying to propose because of inadequate explanation. If the team would have been a little bit more descriptive, it would have been easy to understand. The have listed some tables as deprecated, but without any explanation."
0,"Apart from just listing some tables as deprecated, there is nothing more added. It's impossible to figure out from the wiki what the authors plan to change or add."
1,"I don't think this applies to the team, as there are no aids that can be possibly added. That said, the authors could have added a more detailed explanation to compensate for lack of this particular aspect."
0,The changes they plan to make are well explained.
0,I don't think the proposed designs would cause any of the problems mentioned above.
0,Yes. The diagrams for calculation are very helpful.
0,"The design documentation contains overview of the project and the proposed implementation, four different approaches for combining self review and peer review. They have not included that need modification. They have included a Test plan but it only contains which test cases they want to test. They could have included how are they planning to test them."
0,Yes the design has incorporated all the functionality.
0,"The explanation provided is good, but they could have explained the four score formulas in more detail. They could have explained each approach for better understanding. They could have stated pros and cons of each formulas and given which way they think is the most suitable in this case."
0,They have not stated anything about the code strategy so cannot comment on the code. They could have explained they changes that will be made in the original files and why.
0,They have included tables showing the 4 ways they plan to combine the self review nd peer review. They can also make a flowchart of the entire implementation that would make it easy for the reader to understand the whole flow.
0,"The authors did a pretty good job in showing the heat maps for different scoring strategies, and comparing them . 


But the document as a whole didnt look complete . It would be good to see a screen shot of place where this would be added . more details about the structure of the present code etc ."
0,The plan of work does implement all the requirements present mentioned
0,"The document as a good explanation about calculating scores, It would be good to see similar things for other aspects as well , like on ""Create the different displays for self reviews""   how it actually looks like"
0,The design document talks about implementation but it dosent cover the coding aspects of it  for now. So it was not possible to comment about these at the present moment
0,"Score displays were good, Uml diagram about how the system interacts if provided would be really helpful ."
0,"The design doc. has included the required section mentioned in the question. Although I suppose the authors could elaborate more on certain aspects like planned approach, files changed, etc. Overall the team has done a good job but the document could have been more thorough if it included more details about the approach.


Suggestion: If possible, provide detailed explanation of what you plan to do and how you intend to achieve that."
0,"Yes after comparing with the specification, the authors seem to have mentioned every required functionality in the documentation."
0,"Well according to me the planned approach section is a bit small, like I suppose the authors should explain their approach in detail. They have done a good job considering the options for Score calculations. 


Suggestion: In the planned approach section you have mentioned what needs to be done. If possible, you can add some explanation about how you intend to do it i.e. in terms of the files that will need modification and something on the code level. This will make the document will be more complete."
0,"They have explained the changes, but it was not listed in a concise list, instead its spread entirely over the whole wiki."
0,"I don't see where in the wiki which explains how you designed it, instead it explains different components of a badge and they work."
0,"Clearly explains how this badge system works, but not sure how your going to implement it."
0,"I like the user case block diagram, it was very descriptive on what users access what objects on expertiza, as well as how the UI will look like when its implemented."
0,Your testing plan is well developed for the TDD methodology. Checking if you can save a badge under different criterias.
1,"the author explains what changes need to be made on the system under the Subsequent steps heading. They explain well what a canvas is. It was good that the list of tasks were in bullet points, than in paragraphs.





extract the innards of CanvasPaintThread into a CanvasData structure,"
0,"They want to extend badging functionality and mainly implement 4 new functionalities on badging  They have fully explained how they will implement them in ""Implementation"" which is well-written and easy to follow. But they just gave a brief description of their implement plan. Readers like me may wonder some edge cases such as will awarded badges be removed if the related assignment is deleted and for ""good teammate"" badge what if 2 or more teammates assign this badge to a student instead of just one teammate, in this case will the student gets more than 1 badge if approved?"
0,"The design appears to be sound from a high-level standpoint; the location of code changes are discussed. The discussion of principles and patterns needed to implement the code changes is not given. This means showing, for example, how the DRY principle is used, how existing code is leveraged, what pattern will be used/re-used to maintain the new ""approval_status"" column, etc."
0,Yes. From their wiki it seems they have totally thought through all the 4 implementations and had a clear plan.
0,The proposed file modifications for each change seem to be kept to a minimum.
1,"They got wonderful diagrams to illustrate user case their expected views for each of their implementations. For the latter, the diagrams clearly describe what changes will be made to views after implementation and for the former, it shows the relationship between the database and users when performing kinds of functionalities about badging. A minor problem is that the pictures are too large and can't perfectly fit the page and the resolution is kind of low."
0,The diagrams describe the changes to be made to the system visually.
0,A test plan is included. It covers the functionality to be added and does a good job of covering both negative and positive test cases.
0,"Yes. in ""Test Plan"" they made a good testing list, but it looks a little bit simple. I'd recommend to add related files or methods that would be tested to each description such as ""Can save  badge with a valid name, description and image."" and I think this will give your ""Test Plan"" more detailed information and let readers follow easier. Also it's better to include test results when you finish all the tests."
1,"I think almost all sections are there. The only one missing is the background information for expertiza itself. While I already know about expertiza I think it would be appropriate to include a background section saying what expertiza is and get more specific about how this project will benefit the Expertiza project.


 


The other suggestion I would make is to either put references in the references section or have them referenced somewhere in the wiki. You currently have no references. You could add references to things like TDD, Expertiza, your own GitHub repository, etc. to help flesh out the document."
1,"The changes are explained well overall, but there are places where more explanation can be given.  For example, after looking through the design document, I am not sure what the term ""request"" and ""guests' request"" means exactly in terms of this project.  Is this an HTTP request?"
0,The authors have clearly explained what they have planned to do. They identified the controller and associated views that need to be tested and have come up with an exhaustive test plan. Good work!
0,The changes are just to add a test script called users_controller_spec.rb and they have included all details about what tests they would make and include in the final file. Looks good!
1,"yes, the authors have done an adequate job explaining the changes made to the system.  The team's project is to write integration tests for the users_controller.rb file, and they have explained this in detail.  The team has also done a good job explaining what they are going to tests, how they are going to test it, and what these tests will entail.  Furthermore, the team has drawn up a diagram that helps describe the over all portion of the expertiza program that their integration tests will effect.  This is really helpful as a reviewer, as it helps me to understand at a higher level what exactly they are testing.  All in all great job!"
0,Yes. Seems like the team has a clear understanding of what changes are to be made and relayed it in a concise manner.
0,This is a project composed of tests. I don't think this section applies.
0,"Since this is a test suite I believe that the design revolves mostly around the test plan, which looks great. Everything is covered in very high detail."
1,"This project only involves writing tests, and the team has identified an exhaustive list of test cases."
0,"There is no mention of a design pattern and it doesn't seem necessary for them to include it. However, the tests seem to cover everything I can think of regarding the users controller."
0,"The team's design appears to be sound and follows appropriate principles.  Since the team is writing integration tests, it is not really necessary that they follow specific design patters. That being said, the team does appear to be following strong RSPEC design principles as they have gone through and picked out all the testable case they know need to be tested.  For each of these test cases, they have written an RSPEC ""describes"" clause describing what the test will do.  Because of this, it seems like they are on track.  Great job!"
0,Yes. Seems like all the sections are present and explained.
0,"Again the tests provided are great, and there is not really a design pattern necessary for test plans so this deserves full credit."
0,"Since this is a testing project, there is no real design. But the tests seem to be simple in what they will accomplish."
0,"Yes, the design appears to be as simple as possible.  Since the team is just writing integration tests, they shouldnt really be cutting corners and should be trying to test as much as possible and it is clear that the team is doing their best to hit every edge case.  That being said, it is also important to not be redundant.  The team appears to be keeping things as concise as possible, while hitting every case they can.  Great job."
0,Simple and clear and easy to follow.
0,"No visual necessary, but the authors provided one anyway. I appreciate that you went over and above, and I wish I could give you more than 5 points for this because the visuals are great!"
0,"The test plan section could be improved by the use of visuals.  For example, the text below could be better portrayed as a decision diagram.


11.1 ""does the user belong to any institution? If yes, good. Otherwise, set a new institution.""


11.2 ""is the user already existed and valid? If both yes, good. If the user already exist, send notification. If the information is not valid, fail."""
0,"The team has one flowchart in place, which explains the workflow that they are going to test. However, it would have helped to show all of the views that would be rendered as well."
0,No visualization is necessary but they have a diagram depicting the current flow for the creation of the users which is helpful although slightly redundant.
0,"The team's diagram clearly lays out the system that is going to be tested.  The team has clearly labeled the different components of the system under test, and the methods that are associated with these different components.  The team has then described each method and what its effect is on the system as a whole.  Great job!"
0,"Since this is a testing project, I do not expect team to show many pictures here. But they had a diagram to show how some functions interact with with each other."
0,The test plan is fantastic. All tests are well organized and test a clear piece of functionality. Great work!
0,"The test plan and the functionality of the controller sections detail what is to be done well.  It would be better if these sections were combined so that a reader does not have to scroll to get further context.  For example, if a reader is looking at the create_requested_user_record(number 11) test, they can see how the test is run, but they have to scroll up to the functionality section to see what the method is supposed to do."
0,The tests are very exhaustive. Good work!
1,"Yes, since the team's project is to write integration tests, they of course need a test plan.  The team provides a solid test plan and has done a really good job explaining what each method they test will do.  While they have done a pretty good job explaining what will be tested, it might help to add a short explanation for each test.  This is something I mentioned as well in my initial review.  For instance, under the ""Create"" method, one of the described tests states, ""Is this the name new? If yes, good. Otherwise, register the user by email address"".  This is a bit confusing to me, as I don't fully understand what is going on.  It seems to be saying if the name is new, then don't register a new user, but this seems contradictory to the idea of a ""create"" method.  Because of this, it would be nice to have some added explanation attached to each tests.  Other then that though, everything looks good."
0,Very thorough test plan. Seems like the team has given it a lot of thought.
0,The team have captured quite a few tests about how they would test the various methods of the users controller. The tests seem to be well thought of and have covered most of the potential cases where the system could fail. Good work.
0,"They have clearly stated different scenarios:


1. PopulateToneAnalysisComments


2. ViewPositiveHeatMapMatrixChart


3. ViewNegativeHeatMapMatrixChart


4. ViewNeutralHeatMapMatrixChart


5. ViewBlankReviewScoresPopupPage


6. ViewBlankHeatMapMatrixChart


 


I think this pretty much sums up on how much detail one can expect from this. They have followed the naming"
0,"1. Testing plan is the best part in the wiki. It is the highly informative. 


2. They have explained each and every use case and how they wish to test it."
0,Yes the design includes a very vivid test plan with each test enumerated with different scenarios. It seems to me that the team has considered all the cases that the system can go through and have devised a good looking test plan for their project.
0,Yes the team had cleatly mentione
0,"1. Very good test plan explaing in details all the possible scenarios


2. Good amount of effort taken in explaing the details for every type of user"
0,Yes. The test plan is well written.
0,The team added Cucumber scenarios for 6 tests they are going to implement utilizing Capybara. Nice job on that!
0,Very detailed test plan. Seems like team has given the test plan section a lot of thought.
1,"Yes, a test plan is included in this document. The test plan is very descriptive and elaborative. It clearly states the different scenarios to be tested and a detailed description of the various tests performed for each scenario has been provided. The test cases are well thought of and are quite exhaustive covering the entire range of functionalities.


However, the test cases included are mostly only for the views. I would suggest to include tests for the controller methods where a response is received from peer logic and the response is checked for correctness. Various scenarios of the json response received for different requests can be checked.


I would suggest to add some controller tests which tested the different controller methods written for tone anlaysis."
0,The major improvement they made after the first round of review is visualization. They had tried to sketch the frames on whiteboard which had minimalistic design focused on their part of the project but they went ahead and added details to the screen clearly showing the screens which is the best possible thing they could have done. I do not have any suggestions in this area.
0,Mockups are very good and they have been explained in great detail for all types of users
0,Lots of pictures and diagram aid the understanding of the reader.
0,Mockups helps us understand different scenarios and use cases that they need to implement it. The images helps us to understand the project very clearly.
0,All the tests seem appropriate.
0,"A test plan is provided and it looks detailed enough to test all of the new functionalities of the system. However, I am deducting a point because rspec test files could have been mentioned where the necessary changes are to be implemented."
0,Test plan is included in the design doc and the test cases considered seem to cover the functionality implemented.
0,"The team has written a test plan to test the views that would be affected by their change. However, they have not mentioned any tests for the affected controllers/helpers."
0,"1. The test cases are explaiend in a ery breif manner which is not clear in how they would work


2. The all use-cases should be taken into consideration"
0,"Looks like half of the changes are made to the view part of the system so manual testing is sufficient for that.


The team has included most of cases that could appear in testing the controller part in the test plan. The tests doesn't look shallow. Good work team.


Team could have provided information on what file they are changing or they are adding any new file for that."
0,The test plan included describes all the functionality that will be tested and looks very complete.
0,Pictures did wonders for explaining your point
0,"There were a lot of mockups which explained clearly as to what is the current scenario and how it is proposed to be solved. I didn't feel that any of the diagrams were unnecessary. However, I am reducing 2 points for the lack of UML diagrams."
0,They have included screenshots of the views before and after implementation. That is great as it is easy to understand the implementation but they they have not included any UML diagrams or any other design flowchart to describe the overall implementation.
0,The team has made very good use of visualization to show what they intend on doing. Good work!
0,1. Good amount of images are used to explain the before after changes.
0,"The best part that the team has done is providing the screen mockups. They have clearly explained about how the current scenario is working. It is very easy for the reader to understand the changes. 


They have also shown how the proposed solution will work with mock up screens.


Good work team."
0,As mentioned in the first round the team had done a great job with the visualizations so I cannot find any further improvement that is needed in this area.
0,"Since their design is about UI mostly, so the screenshots they provided are enough for this topic."
0,This method sounds complex but when explained it seems actually quite simple. Good job
0,The design appears to be simple and I don't think any functionality is added without purpose. It looks like DRY principles will be followed in the implementation as well. Hence I am giving a 5.
0,The proposed solution appears to be simple and easy to follow.
0,The design appears to be simple based on their visual illustrations.
0,"1. Yes, they have a very simple and pragmatic work flow that can be implemeted with much ease


2. More cases could be added to explain how different types of users could be involved in different use cases"
0,"Looks like the team has found out the correct files for modification and the changes proposed also looks simple and no complexity is there in understanding from the proposed solutions.


The team could have explained about the particular design pattern(MVC) or any design flow they are using to have more better understanding of the design/problem."
0,"Yes, cannot find any significant complexities with the design."
0,changed files look appropriate and the proposed changes sound solid.
0,The design looks good. But it could've been supported with UML diagrams and design patterns to highlight the OODD principles used.
0,The design that they have given seems to be intuitive. They haven't mentioned any principles or patterns that they might have followed. So cannot comment on that.
0,"While the changes to be made are well represented visually, the team has not mentioned how they are going to change the code. There is no mention of any design patterns that they intend to use."
0,1. The plan is sound and seems to be clearly explained bullet points
0,"The team has given only information on the changes that are made to the system and the files that are going to be modified.


They haven't provided any information on the design pattern or design principles they have followed. Looks like they are changing the controllers part also, so they could have included the design pattern involved on that."
0,Yes the proposed design looks good. The authors have mentioned the files that will be changed and have also described what kind of changes will be made to these files. The team has done a good job with the design.
0,Changes very accurately described. Good use of pictures to explain. In your step 2 you spelled instructor wrong.
0,The team has mentioned the files to be edited and how the changes will look like after they are made. They have also given explanation behind the changes which is great. But they haven't mentioned what changes exactly are to be made to the files. It would have been better if they would have mentioned in brief about it.
0,The team has explained that the changes to be made are clearly. They have used visualization tools to show what the changes they have in mind would look like once they have been implemented.
0,"1. Clear and elaborate explanations


2. use of diagrams for shows how the work would help in course staff and other students to do the reviews"
0,"The author has clearly explained on what the problem statement is and then the solution he has proposed. The author has shown how the current scenario works and then has explained step by step on what all changes he is making for the desired output.


It is easily understandable by the reader to know the changes the team has made.


The team could have included a class diagram for better understanding."
0,Yes adequate explanation has been provided by the team and the document is quite thorough in this aspect.
1,"Yes, they included the problem description which has clearly explained their goals. But it's kind of too short and just a copy of the requirements, so I'd recommend to write more thoughts about the project such as how to implement these changes in steps."
1,"Their goal is to regularize expertiza DB schema, they will rectify expertiza database such as reduce redundant record and modify confusing field names, etc. I figure their design is meaningful and will improve expertiza database schema if implemented. From their wiki, it's hard to know if they followed proper patterns or principles."
1,"Yes. As they wrote in wiki it's very concise and easy to understand. But the problem is it's just too brief for readers to know details about their project. I'd recommend they could provide more information such as the involved files, the to-be-created files (since I saw their may write migrations) and the expected results."
0,There's no visulization shown in their wiki and I think for their project maybe it's not necessary to include visulization.
0,"There's no test plan shown in their wiki and I think for their project maybe it's not necessary to do tests. But if they are going to change some field names, then some already existed tests may be influenced and in these cases they may consider either modifying existed tests or writing new tests."
1,"The authors provide the general scope of their changes and the actions they plan on taking. However, it is not very clear what the authors are exactly going to do in the project. I would suggest the doc include a ""Tables modified"" section, so that is clear which tables they have modified/created/removed."
0,"The task does not really involve much design, but the team's plan of action seems sound."
0,"The team was very clear in explaining what they would do. They also did a good job of simplifying the changes they will make to the DB schema, and how they will update the wikis. Overall, the team's design was quite clear, straighforward, and simple to follow."
0,"There is no visualization, and it can be argued that there need not be any for this project. However, I would recommend that on top of the instructions that team provided for navigating the DB schema, that the team also provide a screenshot of the console here as well."
1,"It doesn't appear that a test plan is needed for this project. However, since there are database changes being made, the system will definitely be at risk of not working anymore if something goes wrong. I suggest the team add a sections"
0,"This project was very different from the others . At first it appears that the team had not exaplined anything , but reading through it was quite informative"
0,"The project is about modifying the present data base and it was clear ,The question may not be very relevant in this case"
0,The project is about cleaing us tables and getting them in sync. It was good simple and clear
0,No viscilizations needed
0,It was said that all tests would be rerun to make sure the they work .I doubt they woldnt and a lot of changes might be needed to be made . That part was not very clearly addressed here
1,They have superficially touched on the topic of what all changes are supposed to be made. The doc is the same as it was the last time I reviewed it. I would have liked if the authors had made the desired changes and had been a bit more in depth with the explanation.
1,"This does not seem to apply to this particular project. But, the changes they have proposed seem sound enough, the explanation albeit lacking in many parts."
0,"The project is about regularizing the database and making changes to the doc to make it more informative, which the doc fails to achieve as of now."
0,There is no need for class diagrams or visualizations in this project. The authors the structure of the tables in the database.
0,Tests are not necessary for this project.
0,No visualizations are necessary for this project.
1,"No testing section is included, but the tests for this project are going to basically involve running the test from each other module that has some DB interaction. So that is out of the scope of this project I think."
1,Again the design is to create migrations which should be rather simple to read and understand. As long as the team doesn't attempt to perform updates on several DB in a single migration then the design is sound and simple.
1,"The design in general is going to be to create rails migrations, as long as the team follows good migration practices this should be really straightforward for designs."
0,"While the team has described the problem statement in their design document, the rest of their document seems to be a bit shallow. In my original review I had suggesting writing a UML or Wireframe to describe the technical layout of the teams project. This does not appear to be implemented as of yet, but is something I would highly suggest focusing on before you all begin the coding portion of your project.  Having a wireframe and UML written up really helps all members of a team to stay on the same page as everyone can just reference the wireframe or UML when coding different portions of the project.  This way, when everyone is working on different tasks, each member understands the big picture, and can implement a more moduler and appropriate solution."
0,"While the team reiterates the project description, they do not appear to hvae worked though any design decisions as of yet.  This is something I pointed out in my first review.  To keep a team unified towards a common goal, it is critical that a well laid out design document be written up.  Because of this, I highly suggest that you all focus on writing up a design plan before beginning to code."
0,"As I stated in my first review, the author does not appear to have proposed any changes out side of reiterating the project description.  Since this project mainly focuses on clearing up the DB, I do not feel as though there is really any need for formal documentation such as wireframes or UML documents to be made.  That being said, it is important that the team lay out a plan of action so that both reviewers and other team members alike have a good idea what is going on."
0,"The team has not included any visualizations or diagrams.  As I mentioned earlier, it might not be necessary to include a UML or a wireframe since the team is mainly focusing on rewriting the DB files.  But, they should certainly include some diagrams explaining what they will be changing visually."
0,"The team has not included a test plan.  That being said, they may not need one since the project only requires them to rewrite some of the database files.  Because of this, they may only need to check to make sure previous tests pass."
0,They have explained that the databases that are unused need to be removed.
0,Simple and concise
0,No Diagrams present however there is a huge list of databases which is unnecessary as a design doc
0,No test plan outlined
0,It is unclear if they know how many databases need to be changed and how they plan to test if their changes cause side effects or how they plan to go about detecting unused databases
0,"Adequate explanation was provided on the features that are to be added. Everything from the problem statement to the UML diagrams to the file changes to the Test plan was provided. Also, the changes were explained in a simple manner and I had no trouble following what they had written. However, the list of files to be modified could have had an explanation as to what is done in each file and hence giving a 4."
0,"I liked the way the process flow of the system was shown in a graphical manner explaining each stage of the system. Since it was a visualization project, naturally more screenshots were expected and the team had improved from their first submission and provided more visuals this time, such as the visualisation of the red to green scheme for class performance."
0,"Although they mentioned which portions are to be manually tested and which rspec files are to be modified, the test scenarios were not mentioned in detail and hence I am deducting two points"
0,"Problem statement is clearly defined by the team at the starting of the document. The author has clearly explained the changes that are going to made to the system by showing the list of files to be modified. The changes are almost in the view part of the MVC though there is only one change in the controller. 


Though the team has mentioned about the files that are going to be modified, it would have been more understandable if they had included more information or specific information on the changes made in the file."
1,"The author has explained the design process of the system by using the flowchart and also they have included few screenshot of the mockup screens and a simple visualization UI. 


The team is using flot javascript library instead of highchart javascript library which the previous team has worked on. Looks like they have chosen the correct design pattern as flot library is more efficient and has rich tools to provide visualization.


As the team is modifying one controller file they could have explained the particular design pattern they are using for that. MVC is most cases."
0,"The team has provided a clean design process flow of what the system is going to offer with necessary visualization to have the reader understand the design clearly. The design looks simple as almost all the changes are made to the view files. 


The design process shows how the specific screens are displayed by using the decision statements. Good work team."
0,"This particular project is a visualization type and it requires necessary mockups/figures that describe the changes made to the system. 


The author has included a mockup screen on how the details are shown to the instructor. Design looks clean and neat. It is easy for the instructor to find specific information which is most important for any UI design. 


The team has included mockup graphs and charts on what all operation could be performed. Overall the visualization part is done well by the team after looking over the first review comments."
0,"Almost all the changes done by the team are in the view and so the test plan is not necessary. Though one controller is being modified by the team, they have mentioned clearly in the test plan on what file they are changing and what the changes are."
1,"They have improved quite a lot from the first round of review. I noticed these major improvements:


1. Adding more content to the problem statement


2. Added design workflows to clearly describe step by step of how the user should interact.


3. Testing plan was empty during the first round of review which is now filled, so that's good.


4. Addressed the comments about visuals missing / different ways to represent it.


 


Suggestion: It is nice to see significant improvements and you have tried to address almost all the issues. Judging by how your project is, I feel that more diagrams would make it really nice to visualize. You have lot of factors like: 


number of reviews performed, the length of the reviews, the summary of the reviews, whether or not the reviewers uploaded a file in their review, the average ratings the reviewers received from authors"
0,"They have improved quite a bit from the last submission. They have added more visuals to the design doc which is nice. I mentioned in the previous review about the 2nd image in the design doc. I think that it is lacking more details on the screen and what those charts are. Also, the last diagram seems a little absurd to me personally as I am not able to understand the X, Y axis, what do the colors represent. These details can be very informative to the reviewers."
1,"The design does appear to be pretty neat as they are trying to disambiguate things by adding more visuals. But as I said earlier, this particular project seems like it needs lot more visuals than other projects might need. They have definitely improved over time but I think adding more details would be better."
0,"Again, they have certainly put in work and improved a lot from previous submission. They have added work flows which show user interaction which has cleared a lot of things about the project than what I understood earlier. As I said, I personally feel that this particular project topic might need a lot more visuals compared to other reports as you have a lot of graphs, metrics, parameters to deal with and that needs more visuals, details on what graphs represent."
0,"I think this is a good enough test plan. They did not have a testing plan earlier which they have now which is nice. I believe it is okay to keep the same tests as the previous version, however adding more additional tests, ensuring the previous work is not missing any required test cases would be something I would include in the doc."
0,"Yes, the team did an excellent job concisely explaining what the problem is and what they need to change to enhance the visualization for instructors."
0,"Everything is well-organized, all sections are descriptive to the point. They have added the testing plan and more visual aid since the previous submission. Good job!"
0,"Yes, the design is very clear, no clutter, the flow is intuitive and very easy to follow."
0,"With the second submission the team did a great upgrade of what they had for visualization before. More charts, more explanations, a nice graphical process diagram, all were dded to enhance the design document."
0,The team mentions to add RSpec tests.
0,The chart showing stacked bar charts could be simplified to make it easier to see the relative percentages of teams in each scoring range.
0,"The test plan is described but not in much detail. I am sure once the design is complete, the authors will come up with a detailed test plan."
0,The authors have painstakingly explained every aspect of the project in great detail. The doc is very well written and is easy to follow. Visual aids are added wherever required. They have done a very good job.
0,The design that has been proposed is very sound and easy to understand. The mock up screen they have provided is very intuitive and follows appropriate principles.
0,"Yes, the design is simple and very easy to understand. They have proposed various options that are possible. All the designs are very intuitive and easy to follow."
0,The authors have added visualizations wherever needed and it makes the doc very appealing and easy to follow. The graphical flow of the process is apt and easy to understand.
0,"Yes, the design includes test plan. The main task here is refactoring the previously written code. They intend to test all the functionalities possible."
0,"Yes, the authors have adequately explained the changes."
0,The team has explained the design well with the help of graphs and flow charts which i had suggested earlier. I am able to understand the flow due to this.
0,The selection of data representation could be handled in a better way. Instead of going to the pie chart and then depending upon the decision clicking on the stat plot is a bit redundant. You could improve this by giving the choices at the start itself.
0,The diagram does represent the project clearly.
1,The team has included a test plan but it's not clear what changes they will be making in it or how a user can test the changes made manually.
1,"Yes, the authors have improved their explanations considerably. More graphics have been added, and I can easily understand the purpose of the project. I would still suggest that you add more depth to your test plan because it seems lacking, but you at least address the test plan so I will award most of the points. I would suggest that you make additions numbered tests, and while it may be difficult to determine the nature of these tests they should at least be written at a high level so I know you have done them."
1,"Aside from the missing test plan, I believe the design will work. I would suggest adding a UML so that we can see any potential design patterns you are using. At this stage, I appreciate all the visuals to aid my understanding, but a UML would be more appropriate than a graphical process flow."
0,"Without the UML it is difficult to tell the simplicity of the design, but based on the mock-up of the webpage I believe that the implementation will be as simple as possible while also communicating the appropriate information."
0,"I think the visualizations are excellent and one of the best parts of this wiki. I appreciate the addition of the mock-up of the graphs you will show instructors. The only issue I had is that you do not have the UML diagram, but since I have already removed points for that I will not remove them here. Overall this section was great."
0,"The section is included, which is great. I feel that even though you cannot test the graphs you should still name some tests for the RSpec API so that there is clear documentation of the tests."
0,"1. Yes, the block diagrams are helping in getting an overview of the project


2. Mockups added for better understanding"
0,"1. A bit more of explanation could be added for understanding how the code flow would work


2. A better overview could be provided by explaning the functions of  each file and the functions that are required to be modified"
1,"1. since it is a refactoring code, I believe that the code would be highly modular from what is understand from the design of the project


2. A bit more details about the previous work would help us explain better the actual work that is to be done in this project"
0,"1. good amount of visualization used, however they could be explained in a better way using some description for each digram"
0,"1. The design plan is described in a very brief manner


2. They could use some tools to better understand on what factors are they going to measure the performance


3. Corner cases could be explained to understrand the test plan and show if there are any tradeoffs possible"
0,The authors have improved the documentation after previous comments. There have added the application flow diagram which is very helpful. The authors have clearly mentioned the changes they want to implement.
0,Since this project is related adding reports. The designs are mainly UI changes. The authors have given an application flow of their changes. The design of the flow seems reasonable. They have also provided mock-up design images that are very helpful.
0,"Given the requirements that are mentioned, the design is crisp and to the point. The authors have done a good job explaining the various elements of the design. They have provided application flow diagrams as well as mock screenshots to support the same."
0,The authors have provided application flow diagrams to explain the flow of the UI for their design. They have also added mock screenshots of the graphs that they will project on the UI. They have added all the required figures to explain the changes that they wish to do.
1,"This is a feature development project. Most of the development is centered around graphs. But still there is a scope of testing around authorization of the application flow. For example:


1. A graph is only visible to the intended user. Reports for teacher 1 cannot be visible to teacher 2.


2. The link to the graph must be present at the expected location.


Such test cases can be done via rspec/capypbara. The team can add them. The rest of it can be done by manual testing."
0,Very well explained. Used pictures to show their intended changes.
0,Seems like all the section are there and are well explained.
0,Yes. Easy to follow and understand. Lots of pictures are used which helps.
0,Lots of figures and diagrams used to explain what the existing expertiza and how they plan ot change it.
0,Yes. They mention that they will refactor some of the previous team's code and add new tests based on the features they add.
1,"The Problem description section explains the general idea of the changes to be made, but really lacks some more information. I think the best way to improve on this is to update the bottom section (the list of DB) with the changes to be made to each DB as you progress through the project. Then the readers would easily be able to see the DBs that have changed AND the changes made to them."
0,The team did a great job in explaining the changes they will make. A combination of clear and concise descriptions and detailed visuals communicated the team's changes excellently.
0,"The design does indeed appear to be sound. Since the changes are mainly focused in the view, principles and design patterns weren't really scrutinized. However, some of the UI changes do appear to be quite drastic, but the team's design was both creative and practical."
0,"The design appears to be simple and clear. The team's use of numbered lists really added to this, as it was very easy to see what the problem was, and how the proposed changes addressed them while maintaining simplicity."
0,"Even though the team's work is mainly UI changes, they did a good job of detaling what exactly the are going to be doing to test their changes. This transparency and clarity contributed to the team's good test plan."
0,"Yes , the authors have clearly explained the changes made to the system . 3 changes are being proposed in this project and each was explained, visualized and had a text mentioned"
0,"The document talked about the design changed to me made at a higher level, they seemes correct but a serious comment was diffucult to be made looking at the higher level changes being proposed"
0,The design of introducing new components was pretty much clear
0,Visualizations was pretty clear in explaining what change was being proposed
0,"Yes the team did include a text plain , but it appears like a finctionality testing , which is suitable for this project , But if the team could add in more , like units being tested , it would have been great"
0,The changes are well explained and easy to follow.  Each issue in the Proposed Solutions section is straightforward and addresses a simple solution to fixing each problem.
0,"As previously mentioned in the first round, there is still no mention about how the pages will become prettier code wise.  Do you know specifically what needs to be changed in these html files?  I also forgot to mention in the first round about how your bar chart will be displayed.  Will it be displayed on the fly?  Or will it be displayed in a separate page?  If it's on a separate page, you may want to mention it's association with the other classes in Expertiza."
0,Design seems to simple as possible.  All that is being done is fixing existing code and adding in new features to pretty up the review summary page and review reports page.
0,"Visualizations look great!  As I mentioned before in the first round, I like your use of a bar chart for the first issue and the different color distinction for the third issue.  However I think a visual aid could be useful for the second issue to show that changes you plan to make to the Review Summary page.  Refer to my suggestion in the first round if it is of any use."
1,"Test plan is present in the documentation; however, I think the test plan could be detailed a little more and include some edge cases.  For example, checking if the visualizations are appearing in the review report is a little vague.  You could split this up into two different tests where one tests the appearance of the bar chart and one that doesn't show a bar chart."
1,"The authors explain most of the changes that will be made to the system. It would be good to see how the new changes will determine if the author has or has not resubmitted their work for the reviewer to review. Also, adding a mockup for ""Updating review summary view"" section would be helpful."
0,"The design appears sound in that it appears to work well within the existing functionality. The proposed use of principles and patterns is not given. This could be accomplished by, for example, stating what design patterns are in place and will be kept for the existing functionality."
0,The requirements set forth by the description are adequately satisfied.
0,"A class diagram is not needed for this document since these are only UI changes. The mockups provide good visual detail of what the final product will look like. The ""Visualization of Metrics in Review Reports"" bar graph is a exceptionally descriptive and needed graphic that shows that the authors have thought about how exactly the information will be displayed"
0,"The test plan covers the requirements, but only covers the ""happy path"" for testing. The steps that are given are not necessary and would be better to be replaced by high-level phrases that describe the negative and positive tests for this project."
0,The authors have explained the issue and explained the changes that can be made in order to address the issues are quite good. They could have included the flies that need to be edited and what changes will be made in the respective files to make it clear how the changes will be implemented in the code.
0,The solution offered by the authors seems to be correct and I think should work to solve the problem. But tehy have not mentioned any coding principles or patterns that will be considered while implementing the design.
0,"Yes, the changes that are proposed to be made are simple to understand and the screenshots attached make it easier to follow."
1,They haven't made use of any UML diagrams or any flowcharts to explain the flow of the design. Even though the explanation given for each issue is quite elaborate a pictorial representation of the implementation makes it easier for the reader to know the flow of the design.
0,They have included a test plan and considered a good amount of test cases that should test the overall functionality of the project.
0,"Adequate explanation was provided on the features that are to be added. Everything from the problem statement to the proposed solution to the Test plan was explained. Also, the changes were explained in a simple manner and I had no trouble following what they had written. However, it would have been better if the explanation was complemented by UML diagrams and list of file changes. Hence giving a 3."
0,"The design looks good. But it could've been supported with UML diagrams and design patterns to highlight the OODD principles used. Also, a list of files to be modified could be added."
1,The authors have clearly stated the changes which are to be made.
0,"Yes, the design appears to be sound. The proposed solutions do make sense which can be understood with the help of diagrams."
1,The team has proposed some solution for the respective issue. The solution for each issue appears to be simple.
0,"Yes, the diagrams clearly describe the system. It would have been clear if the second proposed solution had a diagram or a screen capture to view the changes."
0,The design includes a through test plan.
0,Yes the authors have explained the changes very neatly. Since round 1 the authors have made the wiki page is very informative. The use pf images helps in understanding the project.
0,"From the wiki, I can understand what the authors wishes to do and how they wish to do. However, it is hard to determine which pattern they have used and which principles they have followed. But from the wiki, I can say the design is upto the mark."
1,"The wiki has explained their approach which appears to be very simple. However, I believe for this project, the changes can make the code messy and bring some bugs out. I hope the authors do a thorough check of all the functionalities before deploying the code."
1,"The images and mockups are the best source of information in the wiki. The mockups show how the changes will work which makes it easier to visualise what the authors want to do. Although the authors have made mockups, the final product may not be the same"
1,"The authors have mentioned the tests they wish to do before deploying their project. According to my understanding the authors have covered all the tests they should. However, after implementation of the project the authors may realise that there may be more testing that they need to do."
0,Well explained using screenshots and detailed sections in the doc.
0,Well designed. The team did not seem to miss any major sections except that they could have included what files they plan to make changes to.
1,"Yes, the doc is simple, clear and easy to follow."
0,Lots of screenshots of the existing expertiza to make their point. Also included picture of proposed implementation which was great.
0,Included what the test plan should look like. Seems like they covered all the cases.
0,Good explanation and demonstration of the work they want to do. Easy to understand.
0,"Yes, seems to include all the required sections in the design doc."
0,Easy for the reader to follow and understand.
0,The design doc has many pictures and diagrams to help the reader visualize and better understand the objective of the project.
0,Yes. Includes a test plan which I think covers all the scenarios.
1,"The authors clearly outlined the work to be done on the system in their aptly named section, and provided explanantions of their implementations and outcomes."
1,"Based on the doc, the authors are properly expanding the previous work done to meet the criteria set out by the project requirements."
1,"The design of the doc appear to be simple and clear, however, there a few parts of the design that lack detail. For example, the team mentions Geckodriver, and it appears it is quite crucial to the project. If that is the case, the team should have linked to the Geckodriver website within the doc or provided more information on it overall."
1,"The team added a screenshot of a randomly generated HTML page, which is a major component of their project. This illustration provides a decent visualization of what this means. However, a design mockup of their visual results as described in the doc (e.g. the differences between rendered web pages), would have been beneficial."
1,"This project seems like it would require quite extensive testing, yet the team did not include any. Some of the testing proceure is implied, but I think the team should have a section named ""Test Plan"" that cleerly outlines what exactly they will be doing to test the functionalities."
0,Great job explaining the extension of your previous project.
1,The design seems simple. Extending the generation capabilities and adding image comparison seem pretty straightforward.
1,This design is as simple as it can be
1,The one flowchart was great at explaining the progression of what you project does.
1,"Tests were few and very vague on details, but seem appropriate though not much detail. Not sure how one would go about testing this any better than the way it was described."
1,"The design document clearly mentions the purpose of the project. They also mention the proposed next step. The authors have added the Test plan in the document. They have also given the application flow which makes the design document clearer than before.


The document is clear enough."
1,There are not a lot of design elements in this project. But the test strategy they have mentioned through the application flow diagram is clear enough. They want to take screenshots of the same HTML in two different browsers and compare them.
1,Yes. The authors have made a very straightforward approach to solve the problem. They have clearly articulated their strategy for the same. They have used suitable diagrams and explanation to support their approach. It is clear enough to understand.
1,The authors have given a flow chart of the application process. They have clearly described the application flow and their strategy to solve the problem. They have also added screenshot of sample HTML that they want to test.
1,The wiki is explained very well and the work the authors wants to do is very clear. It would been better to check the existing work done to check the validity of that work and see how the changes would affect the system.
1,"The approach the authors are trying to take is pretty simple. There is no mentioning of any principles or patterns in their wiki to understand whether they have used one. From the wiki, it is easy to understand the work they want to do."
1,"The approach is as simple as possible and changes are not much to be done. The project is an easy one and the authors have not made any complicated decisions. However, reference to old work would be helpful to evaluate the work."
1,There are no images present in the wiki. Use of images are helpful to better understand the project.
1,"No testing section is present. Since the project is based on automating using script, I dont think testing is required for it."
1,"Yes the work is explained concisely. However, the authors can use mockups of the ultimate system will look. Since it is a mozilla project previous work is not present to evaluate whether the things they have implemented or not."
1,"According to me the design is pretty good. As they have not mentioned any use of principles or patterns, it is hard to understand which they have used. However, from the description the approach and the changes look good enough."
1,"Yes. the authors have taken a very simple approach to their task. Since the project involves only making an automation script in python, the work is not much complicated. So the approach towards this problem will be a simple solution which the authors have taken."
1,I didnt find any visualisation in the given wiki. I think the authors can use mockups for better explaining their project.
1,There are no tests section present in their wiki. I believe this project doesnt need any testing section.
1,"The authors of the design doc adequately explained the changes that needed to be made. Most of the explanation was similar to the first iteration of the design doc, but even the first iteration of the design doc did a good job of explaining what needed to be done."
1,"I understood the design plan, and I think it is straightforward enough that others will think the same too."
1,The design seems simple and clear to understand. The fact the the authors included a flowchart made me understand the approach very quickly.
1,"The visual in the design doc, which is a flowchart that describes task 2 of the project (Compare the resulting screenshots and report the contents of the generated page if the screenshots differ), made it very easy to understand how the authors were going to approach the problem."
1,"This project includes a test plan that the authors laid out at the end of the ""Work to be Done"" section. For each step that is laid out in the project spec, a testing procedure was described. The tests described in the design doc are not shallow and will test functionality that is essential for this project."
1,"Yes, yes they have.


 


They go into great detail about what work they will do.


It would be nice to have a bit more information about what the system is, though. The only real information about the existing system is ""Servo is experimental web browser developed by Mozilla to ""to create a new layout engine using a modern programming language"". By automating servo (the web browser) we were able to quickly see if servo could render the randomly generated pages.""


 


It doesn't even say which ""modern programming language"" it is!"
1,"It wasn't really designed by the team as much as Mozilla, so, yeah, it does just fine."
1,"Yes, the team has done an adequate job explaining the changes to be made to the system.  The team has added to their design since the last time I reviewed them, and I am pleased to see that they added a new diagram describing the system they will be working on at a high level.  The diagram looks great and is super helpful in understanding what is going on!"
1,"Yes, the design appears to be sound.  The team seems to be following appropriate principles, but does not specify a specific design pattern.  This might be helpful to add in the future, but the team as a whole seems to have a great understanding of the systems design and what they need to do to complete the project."
1,"The team has done a geat job creating a simple system that appears to cover the entire scope of the project.  The team has displayed a strong understanding of their projects scope, and what needs to be done.  Though the use of text and diagrams, the team has reiterated what each step in their plan of action is for, and how it relates to the project as a whole.  All in all, great job!"
1,"The team has done a great job integrating figures into their design document.  This is something I thought was lacking when I first reviewed their work, but they have addressed this problem nicely in their final write up.  The team has provided a simple, easy to read flow diagram describing the system as a whole.  One item I would definitely suggest adding though, is  UML diagram.  For documentation on creating UML diagrams checkout this wiki article that I think is really good and helpful: https://en.wikipedia.org/wiki/Unified_Modeling_Language


Other then that, great job!"
1,"The team does include a test plan.  It appears from their description, that it is not necessary for them to write tests for their given project as it will be obvious as to whether or not it will work. That being said, if the project only needs to be ""visually"" verified, it might be nice to have some form of selenium tests written to automate this validation.  I am not very familiar with the Mozilla project or the Rust language, so selenium tests might not apply, but here is a helpful resource to look at if you think automating some webrouser tests might be helpful. https://www.seleniumhq.org/docs/01_introducing_selenium.jsp


Other then that, great job!"
1,The authors have explained the project well. The design document included the previous work and the changes that need to be done for the next work. The authors have taken enough effort to make the design document easy to understand. The team could have used more visual aids that would add to the explanation of the project.
1,The design appears to be sound with all the required information about the project. It contained the details about the previous work and work to be done now. It has all appropriate principles and patterns. It is complete and may include some use of visual aids to make it much better. It could also include the testing plan which is highly appreciated.
1,The design appears to be simple and easy to understand by a normal user. The team could have made use of more visual aids to make it more appealing. The team could also include the test plan.
1,There is no class diagram in the design document. The visual aids in the design document is a screenshot. These figures are contextual and relevant to the explanation. The screenshot clearly demonstrates the previous work. Use of more visual aids is greatly encouraged as it would make the design document easy to understand.
1,The design document did not include the test plan. Including a test plan in design document is greatly encouraged. The test cases must also be included in the test plan. This would improve the coverage of your project and hence will improve the range of the project.
0,"Yes. They have explained well the changes to be made to the view, model, database, and controllers. They also included how the view would look like after the implementation. It is well documented. Good job.


However, the part where it mentions ""Approval of badges by instructor"" is not so clear me. It introduces a concept ""student-suggested badges"". I don't know where and how a student could suggest a badge for certain submission for a assignment. Is it about the badges assigned to the teammates?"
0,"This team did a great job explaining what the changes to be made to extend the functionality of badging, they provided the purposes behind them. Great visualization is seen throughout the design document."
0,The team has adequately stated the changes to be made in the project.
0,"Yes. Their project is an extending of a previous project and they included both the previous implementation and their new changes to functionality of badging. They also removed the introduction to expertiza as I suggested in the previous review which is good. Now their wiki is descriptive. They got ""Motivation"" and ""Problem Statement"" to illustrate their changes and goals. I think can find everything I need, so it's perfect to me."
0,"The sections are all there, and I think they have explained the content well."
0,"A good high-level explanation of the functionality to be implemented is given. For the ""Creation of new badges"" and ""Approval of badges by Instructor"" sections, it would be helpful to see visual mockups."
0,Yes the team has explained what changes are to be made for the project and have explained them adequately using diagrams and visuals.
0,"The document covers the changes that the team will be making and seems to know how they'll be tackling them. It's not hard to follow and I can understand it clearly. They have included good visualization to help with the understanding. It seems like it is a good functionality to add, well done."
0,Yeah. I would think so. They are following the mvc pattern.
0,"Yes, the content of the design is well-organized and well-written, everything is its place."
1,"The design looks fine. I would suggest adding any design patterns that you are using or explain why you do not need to use any patterns for this project. I think that is the most unclear part of the wiki, but not a serious issue."
0,Yes the design is sound and has all the content that matters to the project. They have explained the project well using visual aids.
0,"As far as the functionality goes, the design doc covers it and it seems to include all details no matter how small. So the changes to be made appear to be sound, however there is no mention of following any particular design pattern. This is essential since the team will be creating a new model for assigning a badge. Other than that, everything looks good."
0,"The use of mockups, screenshots and explanations helps a lot to follow their design and to understand the purpose of their project. The flow is intuitive. Good job!"
1,"No the design doesn't appear to be simple, but the proposed design is explained in detail."
0,Yeah the project itself appears to be a fairly straightforward one. Just add Good Teammate and Good Reviewer Badges to views. The visual
0,Yes the design seems to be as simple as possible and seems to have enough detail about what needs to be changed in the project.
0,"While the feature is tricky and complicated, the team seems to have figured out a way to design it in the most efficient manner and keep it as simple as possible. If executed correctly, it can be a good feature."
0,Yes. The usecase diagram and the after-change view diagram helps a lot in making me understanding the changes to be made.
0,"This team input a great effort to create good visualization to support their design doc. They added Usecase Diagram, UI mockups, great explanations alongside with the visualization aid."
1,"I think the visualizations are good. I appreciate the Use Case diagram showing interactions between the frontend and backend. I think the wiki would benefit from a UML diagram, however, to more clearly illustrate the interactions occurring on the backend. Other than that this is great!"
0,Yes the authors have used visuals and figures well to explain the project. They have shown what the views will look like and they also have included the use case diagrams which shows the different ways in which a user will interact with the changes made in the system.
0,The test plan is well written.
0,"They have the test plan, nd it's pretty descriptive. However, they could have explicitly stated what testing techniques they are going to utilize (Cucumber scenarios, Capybara, RSpec)."
0,There isn't any test plan with the help of which as reviewer can navigate to observe the proposed changes in the design. I'll suggest adding a step by step procedure.
0,"Tests are included. I believe I recommended you update these in the previous review, and I do not see any attempt to change them. The tests are very high level, and I would suggest you get more specific where possible. One of the best ways I have found to do this is to write the tests as if they were cucumber scenarios to really flesh out the details."
0,"Yes the design has a test plan but I feel the test plan could have been explained much more, They have modifications in a model and a controller so they can mention how the function in these app folders can be tested, They can mention some scenarios and can test these models and controllers against those."
1,They have a solid set of tests that they plan to implement using the TDD approach. This will help the features developed to be fool proof. They could definitely add a few more test cases as and when they develop the feature.
0,"Yes, the authors explained the changes on system in detail. They introduced what to do and why for every change."
1,"Yes the authors have done a good job in explaining what type of changes will be made to the system.


Suggestion: As it was suggested earlier, if something was added in the area of how these changes will be implemented then the document would have been more complete."
0,Yes. The authors have provided detailed explanations with pictures that makes it easier to understand what the UI is right now and what changes they plan to make.
1,"The author has explained clearly on what all changes they are going do to the system, to solve the problem. List of files has been mentioned by the team.  Looks like most of the changes are in the view.  


They could have explained more on what all changes they are doing in the view for better understanding."
1,"Yes, the author has adequately explained the changes to be made to the system. The author has used a unique approach of describing the problem and the proposed solution simultaneously throughput the document which is very interesting. The problem statement has been clearly explained by this team and they have walked the readers through the proposed design supplemented with screenshots which makes it easy to understand.


However, they have given an overview of the implementation and have not provided a lot of details about the implementation. It would have been better if this team would have included details of the changes that they intend to make in the code. A use case diagram or a UML could have been included to show the changes that they plan to implement."
0,"The authors have explained explicity what the current system looks and works like, and exactly what changes they are going to make."
0,The doc is very descriptive and well written. It is very clear what the changes are going to be and what is expected of these changes. The authors have done a great job of covering all the aspects of the project.
0,The authors have explained the changes to be made very well. They have made use of visualization tools wherever applicable to show what the system would like after they have finished implementation. They have also gone to the extent of mentioning what columns/rows in a view would require modification. Good job!
1,"The authors have done a great job explaining the intent of the project. But they still have not changed the ""present scenario"" and ""proposed implementation"" mix-up. The authors need to separate these into different sections.


Secondly, the proposed implementation should also contain details of the application files (views/models etc) that needs changing.


The authors have added a new Test Plan but the tests are not mentioned. UI tests are done using capybara in rails. Such tests are already present in the application. They need to add such tests."
1,"The document covers the changes that the team will be making and seems to know how they'll be tackling them. The previous version of the wiki seemed to lack the list of file modifications they intend to make. However, they have incorporated them now and this seems to make the list of changes complete."
0,Yes. The team has explained how current expertiza is and what changes they plan to make it better. Clear and concise.
0,"Yes, the design appears to follow appropriate principles and using appropriate patterns."
0,"There is no particular mention about a specific design. The document includes the changes that need to be implemented but does not include much about how these changes will be incorporated. The team has mentioned the files to be modified.


Suggestion: You could add some details in the files modified section like mentioning why the suggested files are being changed and what kind of changes can be expected."
0,I don't think that the team missed any section and explained each section in detail.
1,"Since most of the changes are made in the view part, they haven't provided any specific design pattern or principle they are following. From what they have explained in each of the pages, they look sound without any unnecessary changes.


They could have explained any design process or a design flow on how each of the screens are reached for a good understanding."
1,"Yes, the design proposed by this team appears to be sound.  Most of the changes proposed by this team involves changes to the existing views, mostly enhancing the readability of the page. These changes are in accordance with the DRY principle and no design patterns are required to be used as such. 


However, the methods to be included in the controller for adding different colors to differentiate between teams based on submission has not been discussed in details. It is nice that they have included the files to be changed, but it would have been great if this team would have included an approximation of changes that are required at a code level. Adding the said information would aid the reviewers to better gauge the design"
0,"The design appears to be sound and follows the specifications quite directly. Since the changes for this project mainly lay in the UI, principles and design patterns are not very necessary for this project's design. Suggested changes will prospectively enhance the UI and maintain core functionality as described in the doc."
0,The design appears to be sound. It is very intuitive and follows appropriate design principles.
1,"The problem mentions that the current system suffers from ""structural and design issues"". However, they have not explicitly mentioned what the design issues are and how they are planning on re-structuring those pages, possibly by using one of the design patterns we have learned in class. Other than that, the design appears to be sound."
0,"The UI design changes suggested by the team sound reasonable. They have provided detailed screenshots of the changes they want to make. One addition they could do is add application flow diagrams. Right now, it is not very clear, where in the application their design changes will happen."
0,"The changes proposed are mostly to be implemented on the View side and hence I don't think there is any need for a design pattern. However, the changes mentioned seem to follow appropriate principles without any complicated need of changing the controllers."
0,"Yes, the design doc has included all the major required sections."
0,"Yes, every step in design seems to make sense. And it aims to the targets directly."
0,Again there is no particular mention about the design strategy in the documentation so difficult to comment on this aspect.
0,Yes. The design doc is simple and clear. Relays the message authors are trying to convey in a concise manner.
1,"From the screen mockups and the short description they have provided for each of the pages, looks like design looks simple and easier to understand. 


They could have explained about the changes in the files modified section for better understanding in the code level."
1,"Yes, the design is simple and concise. They have adequately addressed all the problems mentions with the solutions proposed. The design is easy to follow and understand. 


The document is lacking in terms of the exact implementation details of the proposed ideas. The changes in the views have been explained well. However, the changes required at the level of the controller have not been explained in detail. Adding this would have made the document more clear and could have enabled the reviewers to effectively analyze the complexity of the design."
0,"The design was straighforward, and the authors communicated their objectives very clearly. There does not seem to be anything confusing or overly complex about this design. The screenshots helped in this aspect, by providing context and visualizations of certain parts of their design."
0,"Yes, the design is very simple and makes certain metrics easier to understand. Also, it adds to the visual value."
0,"Yes, it does. Based on what they've written, it appears that they've identified exactly the right parts that need to be modified in order to get achieve the goals of this project."
0,The designs are simple individually. They authors have done a good job in explaining them as well. The screenshots with each feature are particularly helpful.
0,No changes are to be made on the controller side from what the wiki says. Hence it appears that the design will be simple and should easily reflect on the UI.
0,Simple and easy to understand.
0,"Yes, every change on the system is followed by a introducing picture. It is very clear to introduce what happen."
0,"The figures that the authors have included give the author an idea of the current scenario of the views and it helps the reader to understand where the proposed changes will be made. So, the team has done a good job in this area."
0,Had lots of screenshots to explain the project.
0,"The team has worked really hard to provide great visualization for understanding the project. They have given screen mockups for all the changes they are doing in the Review Report Page, Review Summary Page. 


Great work team. No improvements for this particular section."
1,"Yes, the screenshots added by this team are very helpful in understanding the proposed design. They have pictorially shown the fallacies in the current view layouts and have explained the solution with reference to these screenshots. This has aided me to understand the intentions of the authors. However, I believe additional imagery could have been used to further support the document.


A UML diagram or a use case diagram could have been added to understand the connection and the data flow amongst the various files that are changed. This would have made it easier to understand the implementation that this team has in mind.


Also this is not absolutely necessary , however I feel , including some pictures of how the bar and line graph would look would have enhanced the overall document as it makes the intention of the authors very clear."
1,"The team provided great screenshots that clearly describe the changes in the system. Since the project is mainly focused in the view, these illustrations provide context to what is going to be changed, and the authors provided well written descriptions of their changes. One thing I think the team could have added are mockups of the new design."
1,There are plenty of visualizations to help make life easier. There are screen mock ups provided for some changes. I would have loved if there were a bit more screen mock ups to help things more clear.
0,"The team has made very good use of visualization. They have clearly indicated what the current issues with the UI are, and what the UI would look like after they have implemented their changes. Good work!"
1,"My response would be the same as the first round. There are no UML diagrams but they have explained it with the use of mockups pretty well and hence I don't feel the need for further details regarding the flow they would take. The images convey what the current system is like. Would be nice to have a few visuals on how it would look after changes being made, but well done."
0,Design doc has many pictures and diagrams to make sure reader understand the purpose of the project and what changes the team want to make.
1,The design includes the test plan but just a mention. They say it will be shown on YouTube but maybe not now. I can't find the related link.
1,"The test plan mentions about manually testing the system and nothing regarding what kind of tests will be added.


Suggestion: You can add certain tests that will verify if the proposed changes to UI are working correctly."
1,They have mentioned that they will manually run the tests for each functionality they want to add and upload the video. But they did not mention what kind of tests they will write.
1,"Since most of the changes are made in the view part, there is no need to create any test plan for the view. Few of the changes are in the helper file, the author hasn't mentioned about creating test plan for that.


My suggestion would to be create a test plan for the helper file review_mapping_helper.rb."
1,"There is a test plan section included. However, it only states that a video will be added in the document where all the functionality is manually tested as the changes are mostly with the views and are directed towards beautifying the page. While it is true for some of the functionalities, there are various other functionalities for which tests can be written. 


For example - tests for the controller methods which adds different colors to the team names based on their submission status could be tested. 


It could be tested that after sorting , the background colors are as intended.


Thus, I suggest adding such tests to the test plan and thoroughly test the code. 


Capybara can be used."
1,"The team did state that their changes are visual and will require testing more along the lines of user experience. They also stated that they will provide a demo of the system via YouTube once the project is completed. However, if the team included a few test scenarios and detailed the actions they would take and what their expecting from the view, the test plan would have been more sound and complete."
1,"Yes, there is a test plan, but since there are only UI changes, there doesn't seem to be a need for an extensive test plan."
1,"The team has mentioned that they would manually test UI and upload a video to show their changes. However, I don't think this would be sufficient. One of their planned functionalities is to have an alternating color scheme appear in the table when the items are sorted. This change would not only require modifications to the view but also possibly to the associated controller/helper. The controller and helper can be tested through automatic testing."
1,The authors have not given any clear test plan. The test plan section talks about manual testing. But automated testing is possible and is done with capybara. There are examples present in expertiza code that the authors can review.
1,"The wiki says the test plan is to manually test the wiki and then provide a video recording covering the changes which is good. However some of the tests could be covered using Capybara testing, since it mainly deals with UI. The team could look into that since test scripts are an important part of the applcation to ensure correctness."
1,Team says that they plan to manually run the tests and make a video demonstrating it. No information how these tests will be written or what scenarios they will cover.
1,"The test plan is brief. The authors need to add specific test cases pertaining to their project. For example:


1. Given input x to browser 1, input x to browser 2, both browsers should render same.


2. Given input x to browser 1, input y to browser 2, rendering results should be different.


.. so on."
0,"Use cases, images of the proposed design have been included in the doc."
0,The team has provided the adequate details on what they are going to change to improve the game's performance. I think they should have explicitly provide a list of files that are going to be modified.
0,"There have been several updates since the previous reviews were performed and the changes have done a great job of explaining both the previous changes, and the upcoming changes. Good work team"
0,"The author well defined the changes that were made till now and the changes that need to be changed for the second part of the project. The author clearly stated the goal of the project, the test plan etc. The author also improved the submission from the first submission by adding a brief description of subsequent steps. The author has also used visual aids like screenshots for a better understanding of the project."
0,"During my first review, I stated that I was confused about this. Now, the additional explanation of the Subsequent steps in the Implementation section helped me understand the goal of the project a little better."
1,"Looks like all portions of the wiki are present, and everything is explained well. I understand what the authors are attempting to do in the project. The only suggestion I would make here is to fix the formatting of the images. Some of the images fall off the right side of the page because they are too large. I cannot take points off for this because it I can easily scroll over and see the rest of the image."
1,"You did a really good job explaining everything about this project!  However, I think you should mention in detail a little more about your other initial steps and subsequent steps, even if it's just a brief paragraph or two.  I think doing this will allow the reader to understand your thought process about what these steps change in the existing system.  As mentioned in the first round, you don't need to mention design patterns if it is applicable for your project."
0,The changes have been well documented and presented
1,"1. The wiki is very well documented. 


2. Authors have added images since round 1 which helps to understand what the wish to do.


3. Authors can add more information regarding the images to make us understand."
1,Even though a design pattern was set because existing code will be changed it seems sound on the methodology.
0,The changes that the team suggests sounds reasonable. They support their document with all appropriate sections.
1,"The authors have written that their changes were rather small and only added a few lines to the overall codebase, so they believe the patterns were not applicable. Perhaps an update could be made when they implement the single thread for canvas drawing change? This likely increases the amount of code added, lending itself to the need for good pattern use."
0,The design document appears to be sound with all the required principles and sections. The design document is also has a brief description of the subsequent steps which is a good improvement for the second submission.
0,"The design seems to make sense. It shouldn't cause any negative effects with the prescribed implementation as per the spec. Furthermore, design patterns were not applicable to this project."
0,The design looks good. The code additions do not require the implementation of a class and were described well. Since the code additions are somewhat small there was no need for any patterns or UML diagrams.
0,"Since parts of code are being added to an already existing system, design should already be sound and follow appropriate principles and patterns."
0,"Yes, the proposed design is thorough."
1,"The wiki can have more information on this matter. As the wiki seems to explain the work on a higher level. Also, previous work should be present too, which would help us to understand the work did and how they plan to do the future work."
0,Design seems to be as simple as possible with my limited knowledge of canvas rendering.
1,The design document is simple and to the point. The team consequently listed the problems and then provided the solutions to the problem to implement. The flow of the document could have been more intuitive (Testing plan could be just before the conclusion part; the files that are to be modified in a separate section)
0,"The team did a great job of explaining the changes that are made, and how they impact the project as a whole. The inclusion of images and code snippets really shows how simplistic the team approached the problem."
0,"The design appears to be clear and easy to understand. It clearly describes the goal of the project, the changes made in first submission and the steps to be implemented for the second submission. The design document also incorporates a brief description of the subsequent steps which made the steps easy to understand. The document also included the screenshots of the work which helped to understand the intent of the project."
0,The design is simple and clear. The project spec (and the description in the Implementation section) lays everything out that the end result will be easy to understand for most.
0,I think the design is very easy to understand though it does seem that it will be difficult to implement.
0,"Design complexity doesn't apply for this project since parts of code are being added to an already existing system.  However, from the way this project is structured and the tasks you are given, I can tell that the design behind it is pretty complex."
0,"The design itself is complicated, but it is broken down into numerous steps which are easy to follow."
0,"Since it is a mozilla project, it is hard to determine the complexity of the project. Since I have less experience with rust, I cannot understadn whether the design is complicated or not. But as per my understanding the design is OK."
1,"The visualizations were helpful, for the part on showing how canvasID was used as well as the testing code. Visualization of what a canvas is on a html page would have more helpful."
1,"I'm not sure they needed any visual diagrams for their document, the link to the game was probably enough. however, they added the screenshots of drawImage canvas."
0,"This was one of my biggest complaints in the previous round of reviews and the team really knocked it out of the park this time. very very good work, the examples of the canvas renderings and the testing page really make this project easy to grasp."
0,The screenshots clearly depict the work that needs to be done. This adds to the written explanation to easily understand the project. The screenshots also depict the changes that need to be made in the system.
1,"Visualization was added to this version when compared to the one I reviewed last time. These pictures looked like they were for the initial steps. However, it seemed unnecessary to add visualization for this project."
1,"Visualizations are great. Some of the placement is not clear. I would appreciate some better formatting, however, the large size of the images makes it difficult to understand them. I understand why the first set of images are large, but it appears that the testing plan image could be reduced."
1,"Visualizations are present, but I think some more explanation as to what these visualizations do would be helpful for someone who doesn't know much about HTML graphics.  I do appreciate you going into detail in your testing section about how fast each single canvas is timed.  Is it possible to include a table in the future to showcase averages as to how optimal your rendering is?  The demo YouTube video you guys provided also helps me out a little bit to understand what the implementation of Servo will do.  My question is will this be the same when including HTML canvas rendering in the final production?  There are also some overlapping text in your series of pictures under the HTML canvas section that should be adjusted as well."
1,"The authors have included diagrams to explain the design better, which wasn't in their previous submission. It does help. But I feel some diagrams are overkill."
1,"Images are the best source of information. Being a mozilla project, its tough to understand just by reading the wiki. Images makes it more clearer as to what the authors wants to do."
0,"The only testing mention is the performance testing done to check the speed of the canvas renders, the team should include a testing section to discuss the tests that they will perform on their code. This section will likely be mostly related to the large change upcoming with the single thread to draw, so perhaps the team just has not updated this area yet?"
0,Test cases were made to test the operation time and efficiency of drawing canvases.
0,"Since the main problem is the performance, they have added a test for measuring the performance time that they are going to use."
1,The design included the test plan. There was only single test which is regarding successfully running a game. The project was successful when a game mentioned in the documentation run successfully in the browser without any crash or time lag or slow running of that game. The team at the end of the first steps tried to solve this issue but were unsuccessful.
0,No test plan was required for this project. The only 'test' was checking up on how slither.io performed after implementing the Subsequent Steps.
0,"No test plan mentioned in documentation about test cases for the first initial step and second to last subsequent step.  Instead, testing is mentioned briefly as part of the Implementation section of the document by mentioning one test that tests the initial performance of Servo with regards to canvas rendering."
1,"I am glad you added more visualizations for the test plan, but I am a little disappointed that the only test shown is the same one that was there originally. I think it would be a good idea to test out with different sizes or moving from different positions. At least to add more depth to the test plan because it seems like you only have one test. However, this is improved from the last time so I will award a higher score."
0,The tests included are only to check the performance of the drawImage method. More tests could have been included to test functionality.
0,"There is a small section about testing which I believe doesnt cover all the functionalities. But being a mozilla project, I dont know whether the project requires testing as a part of it."
0,Yes. They explained very well the changes that need to be made.
0,"Yes, the design looks good to me. But I don't know the specific principles or patterns they are using."
1,Yes. I think so.
0,"Yes. The UML and Wireframes are very helpful in describing the changes. However, some words in the picture are a little blurry. Yellow sticker part in the wireframes."
0,"Yes the authors have done a good job with the explanation provided for the proposed changes. The proposed implementation section of the document includes the changes that the team intends to incorporate and it also includes details about how the team is going to achieve those changes. So, overall a good job."
1,"Compared to the first version, this has massively stepped up. My initial complaints have been dealt with, so I'm not really sure what to add here."
0,"The changes need to be made to each file are well explained. Great work.


The database changes, instructor view changes, and student view changes are so well explained. Good job."
0,"Yes, the explanations are good, but could have been a more structured"
1,"Yes. From their wiki especially in ""Proposed Implementation"" it seems they have fully explained the changes they will make to expertiza which includes Migration changes, Instructor view changes and Student view changes, and each of these was quite descriptive and easy to understand. They also listed the files to be modified and files to be created which is very thoughtful. But I want to mention a little problem: in both ""Migration changes"" and ""Instructor view changes"", they gave very detailed descriptions of how to make the changes such as which parameter and method need to be created or modified to realize some functionalities. However in ""Student view changes"" it seems they just described the changes made to the view and nothing is mentioned how to do that."
0,"The authors have gone into just the right amount of detail in explaining the changes that will be made.  The use of ""role"" instead of ""duty"" throughout the document can be confusing."
0,"Yes, the authors have adequately explained the changes that are to be made in the system. The doc is very descriptive of every little detail of the project."
0,The authors have very clearly mentioned what the changes to be made are. They have structured the document very well starting with the rationale behind their choice of design and went onto explain their implementation plan and test plan. Good work!
0,The design documented is well written. It has an elaborate explanation of the changes that will be made or the implementation. They have included the screenshots of the view that are modified making it easier to follow.
0,I cannot find any significant flaws with the proposed design. The approach mentioned by the team sounds quite reasonable.
0,Yes. They look good to me. But I don't know what specific principles or patterns they are using.
0,The document has only 2 diagrams. The designers could have provided some more designs
0,"Yes their goal is to add a role-based reviewing to expertiza so that students can select their role(duty) of an assignment and students will be reviewed based on such a role-based evaluation rubric. Their implementation plan is detailed and reasonable. But as I went through their plan I didn't get how they would attempt to realize reviewing students based on their roles which is required. In general, their design is good."
1,The authors have thought about database design and coding needed for these changes although the changes have not been described in terms of principles or patterns.
1,The design appears to be sound and very intuitive. The authors have added screen mock ups to help aid visualization. I would have loved if there were a bit more visualizations.
0,"Yes, the design appears to be sound. All changes to the DB seem to be well thought out and have been supported with good arguments."
0,The design seems to be correct. The team has included the changes that will be made such as creating migrations to create tables for duties. but no design principles or patterns are being discussed.
1,"The design looks good. It has been supported with UML diagrams such as a class diagram, however usecase or activity diagrams would help in explaining the overall design of the system whereas a class diagram explains only the relationship between certain classes. Hence I am deducting a point."
0,"The arrangement of the context under proposed implementation can be improved, e.g. don't use bullet points to separate two sentences that's should flow sequentially."
0,"Yes, as stated earlier I cannot find any complexities in the methods that the team has suggested."
0,"Yes, I think so."
0,"The design looks simple, but more explanations about the design could have been provided"
0,Yes. They just included the necessary information and it's concise and easy to follow.
0,The design does appear to be simple and intuitive. The design has been well though of.
1,"The design is complex - however, this project requires a design of that level of complexity. It is easy to follow as the team has explained their plan very well."
0,The design seems to be simple as easy to understand. The UML diagram is explained but the diagram itself is a little hard to follow.
0,Yes the team has worked on the suggestion provided in the first round and have included a brief explanation for the UML diagram. The team has done a good job with their choice of visualization.
0,"It's a lot better than the first version, but it's still pretty confusing. The relationship between Question and Questionnaire makes sense now.


Each line has two numbers on it, though, which is rather confusing. A question has one Questionnaire... or... wait, does a Question have many Questionnaires? It says that Questionnaires have many Questions in the description, but the diagram doesn't quite say that. The diagram only says that Questions have Questionnaires."
0,Yes. The UML diagram helps me in understanding the changes.
0,The design except for the UML diagram lacked diagrams.
0,"Yes. They got an excellent diagrams to illustrate the relationships between several models that are related to their project and how they relate to each other. But I got a little confused on some signs such as ""1"", ""1.."""", ""0.."""" on those orange lines, so you may explain that a little bit in wiki. Another minor problem is that the pictures are too large and can't perfectly fit the page so you may consider fixing this."
0,"The explanation is good, but it could be enhanced by condensing the explanations and adding visuals that portray what the removed text said."
0,The UML diagram seems apt and helps make things easier to understand. There are screen mock ups too to help with visualization. This has made the doc very easy to follow.
0,"The team has presented a UML diagram that clearly explains what the interactions between the new classes would be like. Additionally, they have also included a screenshot of a view that will require changes."
0,"They have included UML diagram and screenshots to explain the implementation. UML diagram is a little hard to follow apart from that everything seems to be fine. 


They have also included files that need modification and also explained the changes that will be made in each file."
1,"The class diagram is detailed and explains the class level changes to be made to the system clearly. However, I felt more screenshots could have been provided of the different views and hence I am deducting a point."
0,Yes the document includes a test plan and it mentions what kind of functionalities that are going to be tested.
0,"It does indeed include this and it is sufficiently detailed to be used.


 


Maybe there are a few cases left untested, but I'd need to know more about the system to tell that."
0,"Yes, the doc has a detailed test plan."
0,Yes. They need to write tests since they will both create and modify files. They got a hierarchical Test plan which is clear and easy to follow. But it's too short and doesn't have some expected information such as which files need to be tested and how many Rspec test files will be created
0,"The test plans cover the flow of the UI well, but it would make the test plan more complete to add negative tests to the positive, ""happy path""."
0,"Yes, the design does include a test plan which seems to cover all the functionalities as of now."
0,The team has come up with a few tests and have done a good job with grouping them into categories.
0,They have included testcases and seem to have considered enough test cases to check the functionality of the design.
1,"The authors have considered the suggestions from the first round have elaborated their planned approach section. They have also added the files that will be changed.


Only suggestion I could give is to add some detail to the files changed section like mentioning why those particular files will be changed and how. This will make the document more thorough."
0,"Not really. They said what's going to be true about the system afterwards, but I'm not sure how they're going to make any of that happen.


There was a great amount of explanation about the score formulas, which should be... maybe one or two lines of code, call it four to be generous?"
0,They explained well on the changes to be made.
1,"I just think that the team could explain which changes are going to be made in which file. For eg:- The checkbox for ""allow self reviews?"" may be in the app/views/assignments/edit/_review_strategy.html.erb  


Similarly, for the sections of planned approach i.e."" Find or create a function that will derive a score from self-reviews and peer-reviews"" and ""Create the different displays for self-reviews"" sections of the planned approach. What the team has explained in words is very easy to understand from the function point of view but not so much from the code point of view. I am unable to determine which changes will be made in which files."
0,"Yes, the authors have adequately explained the changes which are to be made in the project."
1,"Yes, the authors have adequately explained the changes they need to make in the system. They have clearly explained the problem in the current system and their proposed implementation. They have discussed the various strategies for combining the self review and the peer review and also performed a comparative study to show its pros and cons. This is great and helps the readers to understand. Overall flow of the documentation is also great and is easy to follow.


One thing I would have liked to see in this doc is that the in the filed changed section , a brief explanation of the changes required in each file should have been included. This helps to readers to understand how the changes are made at the code level and get a better idea of the author's intended implementation."
0,"Yes the authors have made a very good attempt in explaining the new changes to be made to the system , like the scores"
1,Yes the authors have explained well what changes are required of the system. The authors have compared different formulas that can be used in the system and also have written have written a solution approach. They seem to have considered the different approaches and have written out the pros and cons for the same as well.
0,"The design doc is well crafted. It explains the issue clearly. They have also included a good explanation of the problem. I suggest to include the changes that are to be made in each they have mentioned to be edited, as they have only mentioned which files need changes but have not explained what changes will be made in the file."
0,"The authors have clearly explained the requirements of the project. The ""Planned Approach"" section has been expanded after last review. It clearly articulates their approach for all the three problems."
0,"Yes, the team has done an adequate job explaining the changes to be made to the system at large. The team's project is to improve self review and link self and peer review to derive grades.  The team has done a great job explaining this in detail both writing, and visually with diagrams and pictures."
0,Yes the proposed design sounds very reasonable.
0,"Maybe? They don't explain it. They just say what the end result will be (and talk about the score formulas a lot), so I'm not sure how to judge this one."
1,I think the design is good. But I could not tell any specific principles or patterns they are following.
1,"The team has not explained much in terms of the format of the code and which patterns they will use. They have explained more from a conceptual point of view. . All the design steps are warranted according to me. In the section""Create the different displays for self-reviews"" the team has gone over different ways to highlight the self review column in the Review Report.The different choice of rubrics for calculating scores for self review are properly explained."
0,"Yes, the design appears to be sound. The score calculation and corresponding explanation is given in detail."
1,"Yes, the design appears to be sound. The proposed changes address all the problems and are reasonable. The idea of including a checkbox to allow the instructor to decide whether the self review will be displayed prior to peer review or not is good. 


However, the only problem I could find in this is the fact that this team has not given an indication so as to which of the proposed functions have the selected to be implemented. Stating that would have made their design concrete and would have enabled the readers to have a better idea of their implementation."
1,The design appears good from a higher level point of view . The team had explained the different ui components being modified .
0,"The design seems to be clear. the alternatives are neatly mentioned in the report and have been explained well, all in all the design seems to be sound and seems to follow appropriate principles."
1,They have explained the issue and proposed solution elaborately. But they have not included what changes will be made in the code. They have also not mentioned what principles or patterns will they be using for implementation.
1,"The authors have clearly articulated the various score formulas. They have also given a tabulation with pros and cons of each. The screenshots are not very clear though. They are not rendered properly.


Also, the authors have not given any application flow diagram to explain where in the project their part will fit in."
1,"The team's design appears to be sound and to follow appropriate principles.  That being said, it is really hard to tell if they are using an appropriate design patter as they did not explicitly state a ""pattern"" they will be using.  Considering they written any code yet, this is understandable, but one thing that might help would be if the team were to include a diagram describing the system as a whole before and after their changes are made.  I would definitely suggest doing this before moving forward into the coding portion of the project.  But all in all great job!"
0,"Yes, cannot find any significant complexities in the suggested design."
1,"Yes, the team has gone through alternatives, and the pros and cons of the different approaches. However they have not mentioned which approach they plan to take."
1,The score calculation appears to be a bit complicated but it is explained in detail.
1,"Yes , the design is concise and simple. It is not that complex and have been explained with adequate details. The different mapping functions for the peer review and self review have also been included which has made their design clear and helped me understand their idea completely."
1,"The design appears simple . It was good to see the nice score diagrams , in understanding the correlation diagrams in the plots ."
1,yes the design seems to be simple. The different files that will be ultimately changed are also mentioned. However it is unclear which approach the team is gonna choose. They have designed it well considering all the possible alternatives for their final approach
1,The design seems easy to understand They have included different approaches to incorporate the self review and explained their pros and cons. But they have not mentioned which approach will be used for their implementation.
1,The application design seems simple to understand. They have clearly mentioned the changes for each of the requirements. It would be better if the authors added an application flow diagram to explain it more.
1,"Yes, the design appears to be simple.  The team appears to have a solid grasp on what they need to do to complete the project. The team has done a great job laying out different calculation formula options and has described each in detail along with diagrams. Furthermore, the team has displayed the pro's and con's of each approach which is really helpful!  That being said, it would really help to see a diagram of the system they plan on building.  Since this is not present, it is hard to really decide on how ""simple"" the design solution is.  All in all though, great job!"
1,The team has considered the feedback from the first round and have added additional screenshots which help the reader understand how the proposed changes will affect the UI.
1,"10/10 visualizations.


 


You used conditional formatting.


 


<3"
1,"The diagrams help in making me understand the changes to be made.


However, the diagrams are a little blurry."
1,The team has made good use of the heat-map diagrams for different scoring techniques and the mocks for showing the instructor and student view for review report. The comparison table for different approaches provides a good overview
1,There are some diagrams which provide an insight into the proposed changes. More images regarding the check boxes and their placement in the view would have been a good choice.
1,"Yes, the visualizations have been included in the doc. They are helpful in understanding the proposed design of this team.


They have added images of how the checkboxes would look which are indicative of their design. They have used images of heat maps to show the results of the different mapping functions which has made it easier for the readers to understand the different strategies and compare their pros and cons.


I would have liked to see a UML diagram in this doc to explain how the implementation works at a code level and how the data flow occurs between the controllers and the views."
1,Good visualization were added. I was impressed by how the sores were plotted with colour. It was a very easy was depecting how the scores change with different parameters..
0,"The team has displayed tables representing how for each of the alternative formulas the result will look like, they have also shared a screen cast of how the heat maps will look like ."
1,The heat map diagram included makes it easier to understand all the approaches mentioned. They could have included a UML diagram to explain the overall changes to be made in the design.
0,The authors have added a lot of visualizations of the heat maps of their proposed implementations. They have also added screenshots of current application. But they need to add an application flow diagram to make it complete.
1,"The team has done a great job including diagrams in their proposal.  The team has given visual diagrams describing what each of the different ""calculation algorithms"" they plan on trying does.  This is really helpful to the reader in understanding what exactly these algorithms do and how they work. As I mentioned above though, it would be really helpful to have a diagram of the system as a whole that they are going to be working on.  Other then that, the diagrams that are present in the document are well thought out.  Great job!"
0,"The test plan provided in the document covers most of the new functionality that needs testing. So, the team has done a good job with the test plan."
0,"The testing plan isn't so much of a ""plan"" as a ""list of situations""


 


There's no good way to tell how they plan to actually guarantee that those situations are met."
1,Good job. The test plan is well written.
1,"The team has mentioned test plan but the tests are pretty basic, and only scratch the surface. For eg, if a more complex approach is taken, eg- the SPARK approach, it requires all scores to be normalized, the maximum score being 1. How will they test for correct normalization? Also, the self review scores will be based on the difference between self review and peer review scores. How will this difference be represented?"
1,The design include test cases. There is no such thing as a test plan by which the user can check the given functionality.
0,"Yes, they have included a hierarchical test plan in the doc. Though the test plan covers a lot of key cases, it is a little short. 


It would have been better is the author would have include descriptive test cases where each scenario and the corresponding tests for that are explained in detail."
1,The design included a test plain but it was at a very high level . If we could see more details it would have been really nice
1,"The testplan is a bit superficial. They could have mentioned how they are going to test their grades_controller. They have the score formula, so they can mention how they are going to test those."
1,They have included a test plan. I think they can consider more test cases. They have mentioned different approaches but they haven't included all the test cases that will be required to check the functionality of these approaches
1,"The authors have added a basic test plan. They have added specific test cases as well. But the tests are not very specific. For example: ""Peer-reviews cannot be viewed before a self-review is completed."" does not mention how exactly the application flow will happen for this test."
1,"The team has included a system test plan.  The test given are a written in a some what ""cucumber"" style, but are fairly vague and give more of a general overview of what needs to be tested.  I would encourage the team to lay out more detailed, RSPEC ""describe"" statements for each of their tests, and to really think though what each test will entail.  Here is a helpful resource for learning about RSPEC testing --> http://rspec.info/


 


Other then that, good job!"
0,"The team has improved drastically from the first round of submission. As per my previous comments about explaining more information about the background, adding clarifications to the existing pictures, they have addressed all the issues it seems. They have gone in depth to help reviewers understand what is Peer Logic and why they will be using it. They have created detailed screen wireframes which clearly show what the pages look like and they have arrows pointing the workflow which shows how user interaction will be. It was really hard for me to come up with a possible improvement/suggestion, the only thing I can think of is you can add method names as well to add more details to the doc but I am not too sure if that would be a requirement."
0,"Yes, they seem to have improved heavily from the previous round. 


1. They have mentioned clear steps as to what method they are following


2. They have clearly mentioned how the views will be different for different types of users


3. I don't think I can come up with possible suggestions in this area."
0,They have worked to address all the comments made in first round of review and improved a lot on the design and visuals. They have added detailed screens to it is clear and easy to follow/understand. I cannot come up with possible suggestions in this area. A possible suggestion would be to link this image to where it was originally created so it isn't this pixelated and users can directly view the original image.
0,A good explaination about the changes to be made for the project was given
0,THe design appears to be sound and following the patterns as per the general flow of the text
0,The desin did what exactly was needed . No extra stray changes were being made
0,A very good use of visualizations was made in conveying the click by view changes using arrows in the text
0,"Yes, the authors have adequately explained the changes to be made to the system. They have clearly and eloquently explained the problem and the solution proposed by them to solve these problems. The use of the UML and wireframes have made the design and the author's intentions very clear and the data Flow is easy to understand.


However, I have one suggestion. I like the fact that the files to be modified have been listed. However, they should mention in brief what changes are to be brought about in the file. The authors have provided the UML which shows the changes that they plan to make. However, adding a brief explanation of each of these changes proposed in the corresponding file would have enabled the reviewers and the readers to get a better understanding of the implementation."
0,"Yes, the design appears to be sound. The proposed design has been explained with the help of a UML diagram and wireframes. These are quite descriptive and help in understanding the proposed implementation by the author. However , only a brief explanation has been given of these diagrams. It would have been great if the authors would have elaborated more over the diagrams.


Also, I believe most of the doc gives an overview of the proposed idea. Only some information have been given about the actual implemenattaion. It would have been better, if more information would have been provided on this front. But I understand that can be difficult at this early stage.


Also , I believe that it would have been better if the authors would have included some more information about the peer logic, AJAX and JQuery and how exactly will it be integrated with the design. For someone , with no prior information about peer logic, it can be slightly difficult to understand."
0,"Yes, the design proposed by the authors is concise and simple. It addresses all the problems mentioned in the problem statement accurately while keeping the UI simple. I like the use of Peer logic for tone analysis. It keeps the overall design simple while using third party services for the necessary purposes. 


I am not very familiar with the JQuery and AJAX and would have liked more information on these to be supplied in the document to better gauge the complexity of this design."
0,"Yes, the visuals included in the doc are very descriptive of the proposed design. The UML diagram is very illustrative and gives a clear indication of the data flow. The wireframes included gives a very good idea of the intended results to be achieved by this team along with the steps to achieve it. 


I have one suggestion though, it would have been good to include a flowchart or a use case diagram to illustrate the steps of implementation. While they have represented their idea pictorially , the actual implementation lacks some representation. Including a use case diagram or a flowchart of the implementation would have aided in understanding the program flow."
0,Yes the team has done a good job in explaining the changes that are supposed to be made to the system. They have drawn UML diagrams and have explained the test plan well.
0,Yes the design appears to be sound. They have briefed upon all important aspects of the project and explained what is important with good amount of details.
0,"Yes, The design seems to be simple. They have given a flow chart view of how control is gonna flow when going through the use cases and have done a good job of explaining what needs to be done."
0,"Yes, the team has done a good job in explaining changes that are supposed to be done using diagrams. They have a flowchart using wire frames  showing the flow of the user control to each of the updated views. They have also drawn a UML diagram showing how they are going to use the API calls."
0,"Since the last review, the authors have stepped up their game. The wiki is very good with images and explanations. i really like the wiki and the efforts they have put in after round 1 reviews."
0,The design appears very concise and sound. There is no mention of any principles and patterns that they have used but rest of the information is very good.
0,I believe it is a little complex as the authors have to integrate it with the previous work that is done.
0,"Since the last review, the authors have made a lot of changes in their wiki project. They have explained each and every bit of the project."
0,"The design is very concise and simple. They haven't mentioned any use of principles or pattern that they have used for their wiki. However, while implementing the authors might use one and then should mention it in their wiki."
0,"Just by looking at the project description, I believe the project will be a little complicated to implement. But in their wiki the approach they have taken is a simple one. I would love to see the end product."
0,"Yes, the team did an great job adequately stating what the problem is and what they need to add and modify to make the grading process easier for instructors."
0,"Great work! Everything is well-organized, all sections are descriptive to the point. They have added the testing plan and more visual aids since the previous submission."
0,"The team's design document is very clear, no clutter to be seen, the flow is intuitive and very easy to follow."
0,"With the second submission the team did some upgrade of what they had for visualization before. UML diagram, more explanations, wireframes, all were added to enhance the design document."
0,The designed document is extremely well written and all the changes have been explained
0,"Yes, this is one of the better design docs. It follows all the principles and design patterns"
1,The design looks solid but at some places feels a bit too complicated. A new user may find it a bit difficult to understand
0,The use of visualization is extremely good. Only a small caveat. we need to scroll to the right
0,Very well explained. Great used of visualizations.
1,Seems like the design doc covers all the major sections and explains them pretty well.
0,Yes. The design is easy to follow and understand what the team is trying to do.
1,"Pretty self-explanatory, but they do break down the controller very well."
1,There isn't much design involved here since the project is just writing tests for controller methods
1,"Design, again, is simple since only tests will be written"
1,I would make the size of your flowchart smaller so users don't have to scroll to the right to see it all
1,The project is technically the test plan
1,They've separated methods to be tested out and explain how each of them is going to be tested.
1,"Though the diagram is not about the changes they are going to make since it's a test topic, it still shows how the object being tested works so that their test would make sense."
0,Massive improvements on this one from the first round. Good job.
0,The details are very well explained including the flow charts. They are visually very appealing
0,"Yes, the authors have adequately explained the changes to be made to the system. The authors have clearly stated the problem statement and the solution they have proposed to tackle it. The flowcharts and the mock links added are quite descriptive and makes the ideas of the author easy to understand. They have also corrected the minor errors in the flowchart from the last submission which is great. Overall the document is designed well and the readers can understand it really well.


However, one small problem that I encountered is that , in the files to be modified section, they have only given a very high level explanation of what they intend to do. Thus , while their ideas and design are clear , their implementation plan is not apparent to the reviewers. For example - in the response controller file, they have mentioned that these are the files that need modification. I believe they should have specified what types of medications are required and whether they need to modify an existing method or cr"
0,The team had made a very good attempt in explaining the changes . They were in a very clear format
0,The document is well done and complete. It explains all the changes involved in adequate detail.
0,"Yes, the authors have explained the changes that are supposed to be made to the system with enough details. The changes that are supposed to be made in the visual interfaces are mentioned along with a list of files that are going to be altered during the course of the project."
0,"The explanations seem to be much better than the previous wiki explanation. They have also updated their UML diagram to correctly reflect what they are proposing. They have also added appropriate notes for further clarifications that I had. It mentions how the reviewee is benefited by asking the questions. However, I feel that the wiki misses out on explaining how the reviewer is benefited for doing extra work. Maybe the team can talk to the instructor on as to how to address this."
0,Very clear on what exactly the problem is and what your implementation is going to be. The visual aids really helped.
0,"Yes, the design appear to be sound and follows the appropriate design patterns"
0,"Yes, the design appears to be quite sound. They have included a detailed design proposal which explains the concept they have in mind very well. The design is neat and accurate and addresses all the problems in the problem statement. The overall design flow is also accurate and without any fallacies. They mostly require changes to be made to the views such as adding checkboxes and additional questions so that part of the implementation would be DRY.


They have mentioned that they will be creating a subclass of questionnaires controller called SRQ. However , they haven't provided any implementation details such as what methods this class would have. Since it is a subclass of the questionnaires controller, I would suggest to use inheritance to its fullest.


Also, I did not really understand how exactly the appending of the questionnaires would work. I would suggest to include some details about how this appending would function which would make it easier to understand for the reviewers."
0,"The design was clear and was seen to go on well with the appropriate patterns . They wernt major changes being proposed from code point of view, but everythign was in place"
0,"Yes the design seems to be sound , the different topics are well explained and seem to have enough information under them. I feel the different approaches or design alternatives could also have been mentioned."
0,"The design document looks to have all relevant details about what the team has set out to achieve. They have mentioned all details about the files they are concerned with, which is good. There are no mentions of the design principles or patterns they will be using and this is important since they are building a new model as well. However the UML diagrams mostly depict the approach they plan on using."
0,"At a top level, the design looks good though, knowing expertiza, It may be a little more complex once you start digging into it"
0,"Yes, the design appears to be simple but includes all the necessary  requirements"
0,"Yes, the design proposed by this team appears to be simple and concise. They have covered most of the necessary information about the proposed design and is easy to follow.


However, there are some parts in the design that needs some more explanation and can increase the complexity. One thing , that I can think of is that they have mentioned that the scores for the questions added by students would not be graded. They have not specified , how they are going to differentiate the two types of questions and how exactly would this logic function.


I suggest to consider such borderline cases and write test cases for it to ensure accurate functionality."
0,The design from the explaination in the wiki shows steps very clearly and they are minor changes in different views and it was in the flow of the general expertiza style
0,The proposed design is very simple and very intuitive. I believe it will be very useful.
0,"Yes the design is simple , well explained and consists of all the important details about the project. They have first defined the problem, drawn the design strategy in a graph like manner and then have explained the user interface changes that are supposed to be done."
0,The approach the team will be taking seems to be simple and efficient in terms of how I can visualize the system to be. They plan to handle the additional questions well and are avoiding complicated changes to the existing system.
0,Very simple. They are manipulating current functionality of expertiza to add this feature.
0,The diagrams they gave are pretty good. it's enough for readers to understand their design just by looking into the diagrams without reading other explanation.
0,"MASSIVE step up from the first round.


The flow diagrams are actually valid flow diagrams now!


The screenshots are a bit excessive, but the improvements are clear."
0,The design diagram is visually very appealing. The authors have done a very nice job with the use of flowcharts
0,"Yes, the visuals added in this doc greatly assist in understanding the overall design of the authors. They flowcharts added and very descriptive and make the intentions of the team quite clear. The screenshots with the mock links added also prove helpful in understanding the endoderm goal of this team and how the results would look like. 


However , I would have loved to see a UML or a use case diagram which would have made the data flow across models controllers and views quite clear. The exact processing order and data movement would have been made clear with a UML and the different scenarios can be covered with a use case diagram. This would have strengthened the doc submitted by this team."
0,"A very good work was done with viscualizations , every click was explained with a view that made is easy to follow"
0,The authors have taken into consideration feedback from the 1st round and improved the flowcharts. It makes much more sense now and is easier to comprehend. Additional screenshots were added which also helps.
0,Yes the team has used a flow diagram and have uploaded screenshots of the changes that are supposed to be made. This makes it very clear to the reviewer where the changes are going to be made.
0,"The UML diagrams are helpful and they have explained it with the use of mockups pretty well and hence I don't feel the need for further details regarding the flow they would take. The images convey what the current system is like. They also have some images depicting how it would look after the changes.They also fixed the previous contradicting UML diagram. So, good work."
0,"Like mentioned before, the visuals were great at pointing to what exactly you are planning to do."
0,"It's better if they can describe their test plan with the anticipated test files, e.g. student_review_controller_spec.rb."
0,"The tests are pretty limited, but they seem like they would get most the functionality tested.


 


I'm not sure I would've realized there were any problems if you hadn't told me, though."
0,"Yes, the design includes a detailed test plan"
0,"Yes, a hierarchical test plan has been included which explains the testing scenarios they have in mind. However I believe that the current test plan included is too short and just provides an overview of testing. Since this team plans on adding a new class and altering views for it, they should thoroughly test the functionality.


I suggest to include a detailed test plan, where each scenario is described and the different tests for that scenario are mentioned. This would enable the reviewer to gauge the test plan and maybe provide an insight into any of the cases that may have been missed by this team.


I scenario that I can think of is that they should test if the correct questions are graded. Like the extra student generated questions are not graded."
0,A basic test plan was mentioned but it was at a very high level
0,A basic test plan is included which I feel tests all the essential changes being made.
0,"The test plan seems to be superficial and shallow. The team could have mentioned the different scenarios in the controllers and models that are going to be changed , They could just mention the changes these files will have and can briefly mention all the possible test cases that can be implemented on these files."
0,The test plans seem to be short on the number of tests they plan to run but they mention that they will be working on it as and when they progress in terms of developing the application. So hopefully they will have a very well tested feature.
0,"Proposed tests look solid. Maybe add a test for if a student doesn't add supplementarily questions, that the system still acts accordingly"
